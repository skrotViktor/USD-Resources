#usda 1.0
(
    doc = """Generated from Composed Stage of root layer /Users/viktorlanner/development/USD_resources/schemas/hairProc/testenv/hairProc.usda
"""
    endTimeCode = 1100
    framesPerSecond = 24
    startTimeCode = 1001
)

def Mesh "plane"
{
    int[] faceVertexCounts = [4]
    int[] faceVertexIndices = [0, 1, 2, 3]
    point3f[] points = [(1, 1, 0), (-1, 1, 0), (-1, -1, 0), (1, -1, 0)]
    point3f[] points.timeSamples = {
        1001: [(1, 1, 0), (-1, 1, 0), (-1, -1, 0), (1, -1, 0)],
        1010.9: [(0.87758255, 1, 0.47942555), (-0.87758255, 1, -0.47942555), (-0.87758255, -1, -0.47942555), (0.87758255, -1, 0.47942555)],
        1020.8: [(0.5403023, 1, 0.84147096), (-0.5403023, 1, -0.84147096), (-0.5403023, -1, -0.84147096), (0.5403023, -1, 0.84147096)],
        1030.7: [(0.0707372, 1, 0.997495), (-0.0707372, 1, -0.997495), (-0.0707372, -1, -0.997495), (0.0707372, -1, 0.997495)],
        1040.6000000000001: [(-0.41614684, 1, 0.9092974), (0.41614684, 1, -0.9092974), (0.41614684, -1, -0.9092974), (-0.41614684, -1, 0.9092974)],
        1050.5000000000002: [(-0.8011436, 1, 0.5984721), (0.8011436, 1, -0.5984721), (0.8011436, -1, -0.5984721), (-0.8011436, -1, 0.5984721)],
        1060.4000000000003: [(-0.9899925, 1, 0.14112), (0.9899925, 1, -0.14112), (0.9899925, -1, -0.14112), (-0.9899925, -1, 0.14112)],
        1070.3000000000004: [(-0.9364567, 1, -0.35078323), (0.9364567, 1, 0.35078323), (0.9364567, -1, 0.35078323), (-0.9364567, -1, -0.35078323)],
        1080.2000000000005: [(-0.6536436, 1, -0.7568025), (0.6536436, 1, 0.7568025), (0.6536436, -1, 0.7568025), (-0.6536436, -1, -0.7568025)],
        1090.1000000000006: [(-0.2107958, 1, -0.9775301), (0.2107958, 1, 0.9775301), (0.2107958, -1, 0.9775301), (-0.2107958, -1, -0.9775301)],
        1100.0000000000007: [(0.2836622, 1, -0.9589243), (-0.2836622, 1, 0.9589243), (-0.2836622, -1, 0.9589243), (0.2836622, -1, -0.9589243)],
        1109.9000000000008: [(0.7086698, 1, -0.7055403), (-0.7086698, 1, 0.7055403), (-0.7086698, -1, 0.7055403), (0.7086698, -1, -0.7055403)],
    }
}

def BasisCurves "curves" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2]
    float2[] hairProc:paramuv = [(0.5208119, 0.5901366)]
    int[] hairProc:prim = [0]
    float3[] hairProc:rest = [(1, 1, 0), (-1, 1, 0), (-1, -1, 0), (1, -1, 0)]
    rel hairProc:target = </plane>
    point3f[] points = [(-0.18027313, -0.041623812, 0), (-0.18027313, -0.041623812, 1)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01]
}

