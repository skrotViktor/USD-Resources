#usda 1.0
(
    doc = """Generated from Composed Stage of root layer /Users/viktorlanner/development/USD_resources/schemas/hairProc/testenv/hairProc.usda
"""
    endTimeCode = 199
    framesPerSecond = 24
    startTimeCode = 0
)

def Mesh "tube"
{
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4]
    int[] faceVertexIndices = [1, 0, 10, 2, 1, 10, 3, 2, 10, 4, 3, 10, 0, 4, 10, 11, 5, 6, 11, 6, 7, 11, 7, 8, 11, 8, 9, 11, 9, 5, 1, 6, 5, 0, 2, 7, 6, 1, 3, 8, 7, 2, 4, 9, 8, 3, 0, 5, 9, 4]
    point3f[] points = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    point3f[] points.timeSamples = {
        0: [(-0.099833414, 0, 1.0950042), (0.915455, 0, 0.5024204), (0.6656157, 0, -0.64629465), (-0.50408185, 0, -0.7636559), (-0.97715545, 0, 0.312526), (-0.099833414, 10, 1.0950042), (0.915455, 10, 0.5024204), (0.6656157, 10, -0.64629465), (-0.50408185, 10, -0.7636559), (-0.97715545, 10, 0.312526), (0, 0, 0.1), (0, 10, 0.1)],
        1: [(-0.20815268, 0, 1.1795658), (0.86122316, 0, 0.6913022), (0.7273122, 0, -0.47661647), (-0.42482516, 0, -0.7101663), (-1.0029743, 0, 0.31341064), (-0.20815268, 10, 1.1795658), (0.86122316, 10, 0.6913022), (0.7273122, 10, -0.47661647), (-0.42482516, 10, -0.7101663), (-1.0029743, 10, 0.31341064), (-0.009483344, 0, 0.19949916), (-0.009483344, 10, 0.19949916)],
        2: [(-0.32387286, 0, 1.2528872), (0.78890556, 0, 0.8738224), (0.7722609, 0, -0.3016303), (-0.35080448, 0, -0.64903516), (-1.0282525, 0, 0.31170955), (-0.32387286, 10, 1.2528872), (0.78890556, 10, 0.8738224), (0.7722609, 10, -0.3016303), (-0.35080448, 10, -0.64903516), (-1.0282525, 10, 0.31170955), (-0.028352667, 0, 0.29755074), (-0.028352667, 10, 0.29755074)],
        3: [(-0.44583493, 0, 1.3142835), (0.69922763, 0, 1.0482048), (0.8000155, 0, -0.12303721), (-0.2827566, 0, -0.5808259), (-1.0527346, 0, 0.3074871), (-0.44583493, 10, 1.3142835), (0.69922763, 10, 1.0482048), (0.8000155, 10, -0.12303721), (-0.2827566, 10, -0.5808259), (-1.0527346, 10, 0.3074871), (-0.056416586, 0, 0.39322245), (-0.056416586, 10, 0.39322245)],
        4: [(-0.57281715, 0, 1.3631883), (0.5930884, 0, 1.2127545), (0.8103019, 0, 0.05742575), (-0.22135828, 0, -0.5061728), (-1.0761728, 0, 0.30083284), (-0.57281715, 10, 1.3631883), (0.5930884, 10, 1.2127545), (0.8103019, 10, 0.05742575), (-0.22135828, 10, -0.5061728), (-1.0761728, 10, 0.30083284), (-0.09339161, 0, 0.48560572), (-0.09339161, 10, 0.48560572)],
        5: [(-0.7035475, 0, 1.3991605), (0.47155172, 0, 1.3658745), (0.8030205, 0, 0.23800282), (-0.16721971, 0, -0.42577422), (-1.0983299, 0, 0.29186067), (-0.7035475, 10, 1.3991605), (0.47155172, 10, 1.3658745), (0.8030205, 10, 0.23800282), (-0.16721971, 10, -0.42577422), (-1.0983299, 10, 0.29186067), (-0.13890497, 0, 0.5738248), (-0.13890497, 10, 0.5738248)],
        6: [(-0.83671606, 0, 1.421888), (0.33583558, 0, 1.5060824), (0.77824765, 0, 0.41693708), (-0.120878264, 0, -0.3403862), (-1.1189808, 0, 0.28070757), (-0.83671606, 10, 1.421888), (0.33583558, 10, 1.5060824), (0.77824765, 10, 0.41693708), (-0.120878264, 10, -0.3403862), (-1.1189808, 10, 0.28070757), (-0.19249837, 0, 0.6570458), (-0.19249837, 10, 0.6570458)],
        7: [(-0.97098863, 0, 1.431191), (0.18729971, 0, 1.6320246), (0.73623466, 0, 0.592488), (-0.082793176, 0, -0.25081465), (-1.1379153, 0, 0.26753226), (-0.97098863, 10, 1.431191), (0.18729971, 10, 1.6320246), (0.73623466, 10, 0.592488), (-0.082793176, 10, -0.25081465), (-1.1379153, 10, 0.26753226), (-0.25363252, 0, 0.73448426), (-0.25363252, 10, 0.73448426)],
        8: [(-1.1050195, 0, 1.4270239), (0.027432336, 0, 1.7424902), (0.6774054, 0, 0.7629489), (-0.053340934, 0, -0.15790713), (-1.1549401, 0, 0.25251377), (-1.1050195, 10, 1.4270239), (0.027432336, 10, 1.7424902), (0.6774054, 10, 0.7629489), (-0.053340934, 10, -0.15790713), (-1.1549401, 10, 0.25251377), (-0.32169256, 0, 0.8054139), (-0.32169256, 10, 0.8054139)],
        9: [(-1.2374651, 0, 1.4094756), (-0.14216498, 0, 1.8364223), (0.6023519, 0, 0.92666376), (-0.032811563, 0, -0.062544696), (-1.1698811, 0, 0.2358494), (-1.2374651, 10, 1.4094756), (-0.14216498, 10, 1.8364223), (0.6023519, 10, 0.92666376), (-0.032811563, 10, -0.062544696), (-1.1698811, 10, 0.2358494), (-0.3959942, 0, 0.8691733), (-0.3959942, 10, 0.8691733)],
        10: [(-1.3669978, 0, 1.3787687), (-0.31979313, 0, 1.9129301), (0.51182854, 0, 1.0820441), (-0.021405675, 0, 0.034367103), (-1.1825843, 0, 0.21775293), (-1.3669978, 10, 1.3787687), (-0.31979313, 10, 1.9129301), (0.51182854, 10, 1.0820441), (-0.021405675, 10, 0.034367103), (-1.1825843, 10, 0.21775293), (-0.47579047, 0, 0.9251726), (-0.47579047, 10, 0.9251726)],
        11: [(-1.4923185, 0, 1.3352574), (-0.50367266, 0, 1.9712962), (0.4067446, 0, 1.2275848), (-0.019232493, 0, 0.1319072), (-1.1929181, 0, 0.19845244), (-1.4923185, 10, 1.3352574), (-0.50367266, 10, 1.9712962), (0.4067446, 10, 1.2275848), (-0.019232493, 10, 0.1319072), (-1.1929181, 10, 0.19845244), (-0.5602794, 0, 0.9728996), (-0.5602794, 10, 0.9728996)],
        12: [(-1.61217, 0, 1.2794235), (-0.69196117, 0, 2.0109847), (0.28815496, 0, 1.3618788), (-0.026308756, 0, 0.22914822), (-1.2007742, 0, 0.17818798), (-1.61217, 10, 1.2794235), (-0.69196117, 10, 2.0109847), (0.28815496, 10, 1.3618788), (-0.026308756, 10, 0.22914822), (-1.2007742, 10, 0.17818798), (-0.64861184, 0, 1.0119246), (-0.64861184, 10, 1.0119246)],
        13: [(-1.7253497, 0, 1.211872), (-0.8827723, 0, 2.031646), (0.15724981, 0, 1.4836314), (-0.042558547, 0, 0.32516578), (-1.206069, 0, 0.1572092), (-1.7253497, 10, 1.211872), (-0.8827723, 10, 2.031646), (0.15724981, 10, 1.4836314), (-0.042558547, 10, 0.32516578), (-1.206069, 10, 0.1572092), (-0.73989993, 0, 1.0419049), (-0.73989993, 10, 1.0419049)],
        14: [(-1.8307211, 0, 1.1333252), (-1.074194, 0, 2.033121), (0.01534251, 0, 1.5916733), (-0.06781406, 0, 0.41904762), (-1.2087442, 0, 0.13577293), (-1.8307211, 10, 1.1333252), (-1.074194, 10, 2.033121), (0.01534251, 10, 1.5916733), (-0.06781406, 10, 0.41904762), (-1.2087442, 10, 0.13577293), (-0.8332262, 0, 1.0625881), (-0.8332262, 10, 1.0625881)],
        15: [(-1.927226, 0, 1.044615), (-1.264308, 0, 2.0154424), (-0.13614336, 0, 1.6849722), (-0.10181726, 0, 0.5099029), (-1.2087672, 0, 0.11414044), (-1.927226, 10, 1.044615), (-1.264308, 10, 2.0154424), (-0.13614336, 10, 1.6849722), (-0.10181726, 10, 0.5099029), (-1.2087672, 10, 0.11414044), (-0.92765236, 0, 1.0738146), (-0.92765236, 10, 1.0738146)],
        16: [(-2.0138938, 0, 0.946675), (-1.4512087, 0, 1.9788337), (-0.29568824, 0, 1.7626429), (-0.14422247, 0, 0.5968709), (-1.2061319, 0, 0.092575036), (-2.0138938, 10, 0.946675), (-1.4512087, 10, 1.9788337), (-0.29568824, 10, 1.7626429), (-0.14422247, 10, 0.5968709), (-1.2061319, 10, 0.092575036), (-1.0222291, 0, 1.0755194), (-1.0222291, 10, 1.0755194)],
        17: [(-2.0898528, 0, 0.84053063), (-1.6330227, 0, 1.9237076), (-0.46169195, 0, 1.8239564), (-0.19459985, 0, 0.6791298), (-1.2008586, 0, 0.071339235), (-2.0898528, 10, 0.84053063), (-1.6330227, 10, 1.9237076), (-0.46169195, 10, 1.8239564), (-0.19459985, 10, 0.6791298), (-1.2008586, 10, 0.071339235), (-1.1160052, 0, 1.0677327), (-1.1160052, 10, 1.0677327)],
        18: [(-2.1543374, 0, 0.72728956), (-1.8079268, 0, 1.8506621), (-0.6324893, 0, 1.8683472), (-0.25243965, 0, 0.7559047), (-1.1929935, 0, 0.050692294), (-2.1543374, 10, 0.72728956), (-1.8079268, 10, 1.8506621), (-0.6324893, 10, 1.8683472), (-0.25243965, 10, 0.7559047), (-1.1929935, 10, 0.050692294), (-1.2080374, 0, 1.0505792), (-1.2080374, 10, 1.0505792)],
        19: [(-2.2066967, 0, 0.6081304), (-1.9741669, 0, 1.7604741), (-0.8063673, 0, 1.8954186), (-0.31715733, 0, 0.8264755), (-1.1826086, 0, 0.030887512), (-2.2066967, 10, 0.6081304), (-1.9741669, 10, 1.7604741), (-0.8063673, 10, 1.8954186), (-0.31715733, 10, 0.8264755), (-1.1826086, 10, 0.030887512), (-1.2973994, 0, 1.0242772), (-1.2973994, 10, 1.0242772)],
        20: [(-2.2464008, 0, 0.4842906), (-2.1300752, 0, 1.6540916), (-0.98158157, 0, 1.9049475), (-0.3880994, 0, 0.89018404), (-1.1698008, 0, 0.012169765), (-2.2464008, 10, 0.4842906), (-2.1300752, 10, 1.6540916), (-0.98158157, 10, 1.9049475), (-0.3880994, 10, 0.89018404), (-1.1698008, 10, 0.012169765), (-1.3831916, 0, 0.9891367), (-1.3831916, 10, 0.9891367)],
        21: [(-2.273046, 0, 0.35705453), (-2.2740865, 0, 1.5326246), (-1.1563745, 0, 1.8968853), (-0.46454993, 0, 0.9464408), (-1.1546909, 0, -0.005226981), (-2.273046, 10, 0.35705453), (-2.2740865, 10, 1.5326246), (-1.1563745, 10, 1.8968853), (-0.46454993, 10, 0.9464408), (-1.1546909, 10, -0.005226981), (-1.4645495, 0, 0.9455557), (-1.4645495, 10, 0.9455557)],
        22: [(-2.2863584, 0, 0.22774042), (-2.4047549, 0, 1.3973336), (-1.3289921, 0, 1.8713596), (-0.5457377, 0, 0.99473053), (-1.1374226, 0, -0.02108199), (-2.2863584, 10, 0.22774042), (-2.4047549, 10, 1.3973336), (-1.3289921, 10, 1.8713596), (-0.5457377, 10, 0.99473053), (-1.1374226, 10, -0.02108199), (-1.5406531, 0, 0.89401644), (-1.5406531, 10, 0.89401644)],
        23: [(-2.2861974, 0, 0.09768719), (-2.520767, 0, 1.2496173), (-1.4977022, 0, 1.8286723), (-0.63084394, 0, 1.0346177), (-1.1181608, 0, -0.035189968), (-2.2861974, 10, 0.09768719), (-2.520767, 10, 1.2496173), (-1.4977022, 10, 1.8286723), (-0.63084394, 10, 1.0346177), (-1.1181608, 10, -0.035189968), (-1.6107343, 0, 0.8350809), (-1.6107343, 10, 0.8350809)],
        24: [(-2.2725573, 0, -0.031758882), (-2.620956, 0, 1.0909985), (-1.6608113, 0, 1.7692966), (-0.7190106, 0, 1.0657505), (-1.0970902, 0, -0.047363114), (-2.2725573, 10, -0.031758882), (-2.620956, 10, 1.0909985), (-1.6608113, 10, 1.7692966), (-0.7190106, 10, 1.0657505), (-1.0970902, 10, -0.047363114), (-1.6740851, 0, 0.76938474), (-1.6740851, 10, 0.76938474)],
        25: [(-2.245566, 0, -0.1592576), (-2.7043128, 0, 0.9231089), (-1.8166816, 0, 1.6938728), (-0.8093485, 0, 1.0878646), (-1.0744135, 0, -0.057433), (-2.245566, 10, -0.1592576), (-2.7043128, 10, 0.9231089), (-1.8166816, 10, 1.6938728), (-0.8093485, 10, 1.0878646), (-1.0744135, 10, -0.057433), (-1.7300645, 0, 0.6976311), (-1.7300645, 10, 0.6976311)],
        26: [(-2.2054846, 0, -0.2834883), (-2.7699962, 0, 0.7476726), (-1.9637475, 0, 1.6032012), (-0.900947, 0, 1.100786), (-1.0503488, 0, -0.06525226), (-2.2054846, 10, -0.2834883), (-2.7699962, 10, 0.7476726), (-1.9637475, 10, 1.6032012), (-0.900947, 10, 1.100786), (-1.0503488, 10, -0.06525226), (-1.7781049, 0, 0.62058383), (-1.7781049, 10, 0.62058383)],
        27: [(-2.152706, 0, -0.403163), (-2.8173416, 0, 0.5664893), (-2.100531, 0, 1.4982344), (-0.9928822, 0, 1.1044321), (-1.025128, 0, -0.07069604), (-2.152706, 10, -0.403163), (-2.8173416, 10, 0.5664893), (-2.100531, 10, 1.4982344), (-0.9928822, 10, 1.1044321), (-1.025128, 10, -0.07069604), (-1.8177177, 0, 0.53905934), (-1.8177177, 10, 0.53905934)],
        28: [(-2.0877478, 0, -0.51703924), (-2.8458667, 0, 0.381416), (-2.2256565, 0, 1.3800678), (-1.0842268, 0, 1.0988134), (-0.9989945, 0, -0.073663294), (-2.0877478, 10, -0.51703924), (-2.8458667, 10, 0.381416), (-2.2256565, 10, 1.3800678), (-1.0842268, 10, 1.0988134), (-0.9989945, 10, -0.073663294), (-1.8484985, 0, 0.45391893), (-1.8484985, 10, 0.45391893)],
        29: [(-2.0112507, 0, -0.6239326), (-2.855278, 0, 0.19434848), (-2.3378654, 0, 1.249929), (-1.1740593, 0, 1.0840324), (-0.9722004, 0, -0.074077725), (-2.0112507, 10, -0.6239326), (-2.855278, 10, 0.19434848), (-2.3378654, 10, 1.249929), (-1.1740593, 10, 1.0840324), (-0.9722004, 10, -0.074077725), (-1.8701308, 0, 0.3660599), (-1.8701308, 10, 0.3660599)],
        30: [(-1.9239697, 0, -0.7227285), (-2.8454723, 0, 0.0072024944), (-2.4360266, 0, 1.1091645), (-1.2614727, 0, 1.0602835), (-0.9450042, 0, -0.071888626), (-1.9239697, 10, -0.7227285), (-2.8454723, 10, 0.0072024944), (-2.4360266, 10, 1.1091645), (-1.2614727, 10, 1.0602835), (-0.9450042, 10, -0.071888626), (-1.8823891, 0, 0.27640668), (-1.8823891, 10, 0.27640668)],
        31: [(-1.8267674, 0, -0.8123931), (-2.8165379, 0, -0.17810555), (-2.5191503, 0, 0.9592276), (-1.3455844, 0, 1.0278505), (-0.9176682, 0, -0.067071326), (-1.8267674, 10, -0.8123931), (-2.8165379, 10, -0.17810555), (-2.5191503, 10, 0.9592276), (-1.3455844, 10, 1.0278505), (-0.9176682, 10, -0.067071326), (-1.8851416, 0, 0.18590161), (-1.8851416, 10, 0.18590161)],
        32: [(-1.7206054, 0, -0.8919843), (-2.768754, 0, -0.3596776), (-2.5863962, 0, 0.8016628), (-1.425544, 0, 0.987104), (-0.8904559, 0, -0.059627477), (-1.7206054, 10, -0.8919843), (-2.768754, 10, -0.3596776), (-2.5863962, 10, 0.8016628), (-1.425544, 10, 0.987104), (-0.8904559, 10, -0.059627477), (-1.8783511, 0, 0.095495485), (-1.8783511, 10, 0.095495485)],
        33: [(-1.6065345, 0, -0.96066016), (-2.7025888, 0, -0.53565305), (-2.6370823, 0, 0.6380909), (-1.500543, 0, 0.9384975), (-0.8636293, 0, -0.04958501), (-1.6065345, 10, -0.96066016), (-2.7025888, 10, -0.53565305), (-2.6370823, 10, 0.6380909), (-1.500543, 10, 0.9384975), (-0.8636293, 10, -0.04958501), (-1.8620756, 0, 0.006138032), (-1.8620756, 10, 0.006138032)],
        34: [(-1.4856843, 0, -1.0176882), (-2.6186929, 0, -0.70422727), (-2.6706924, 0, 0.47019264), (-1.5698217, 0, 0.88256305), (-0.8374463, 0, -0.03699788), (-1.4856843, 10, -1.0176882), (-2.6186929, 10, -0.70422727), (-2.6706924, 10, 0.47019264), (-1.5698217, 10, 0.88256305), (-0.8374463, 10, -0.03699788), (-1.8364675, 0, -0.08123153), (-1.8364675, 10, -0.08123153)],
        35: [(-1.359252, 0, -1.0624523), (-2.517894, 0, -0.86366946), (-2.6868804, 0, 0.29969195), (-1.6326776, 0, 0.81990594), (-0.8121581, 0, -0.021945516), (-1.359252, 10, -1.0624523), (-2.517894, 10, -0.86366946), (-2.6868804, 10, 0.29969195), (-1.6326776, 10, 0.81990594), (-0.8121581, 10, -0.021945516), (-1.8017724, 0, -0.16569388), (-1.8017724, 10, -0.16569388)],
        36: [(-1.2284901, 0, -1.0944588), (-2.401189, 0, -1.0123403), (-2.6854734, 0, 0.12833865), (-1.688472, 0, 0.7511984), (-0.78800684, 0, -0.0045320275), (-1.2284901, 10, -1.0944588), (-2.401189, 10, -1.0123403), (-2.6854734, 10, 0.12833865), (-1.688472, 10, 0.7511984), (-0.78800684, 10, -0.0045320275), (-1.7583263, 0, -0.24635883), (-1.7583263, 10, -0.24635883)],
        37: [(-1.0946946, 0, -1.1133418), (-2.269733, 0, -1.1487081), (-2.666475, 0, -0.042108867), (-1.7366368, 0, 0.6771732), (-0.76522297, 0, 0.015114823), (-1.0946946, 10, -1.1133418), (-2.269733, 10, -1.1487081), (-2.666475, 10, -0.042108867), (-1.7366368, 10, 0.6771732), (-0.76522297, 10, 0.015114823), (-1.7065525, 0, -0.32237417), (-1.7065525, 10, -0.32237417)],
        38: [(-0.9591911, 0, -1.1188664), (-2.1248286, 0, -1.2713641), (-2.630064, 0, -0.20990139), (-1.7766795, 0, 0.5986162), (-0.74402314, 0, 0.03684491), (-0.9591911, 10, -1.1188664), (-2.1248286, 10, -1.2713641), (-2.630064, 10, -0.20990139), (-1.7766795, 10, 0.5986162), (-0.74402314, 10, 0.03684491), (-1.6469573, 0, -0.39293417), (-1.6469573, 10, -0.39293417)],
        39: [(-0.8233222, 0, -1.1109314), (-1.9679118, 0, -1.3790367), (-2.576593, 0, -0.37331626), (-1.8081887, 0, 0.51635844), (-0.7246078, 0, 0.060487237), (-0.8233222, 10, -1.1109314), (-1.9679118, 10, -1.3790367), (-2.576593, 10, -0.37331626), (-1.8081887, 10, 0.51635844), (-0.7246078, 10, 0.060487237), (-1.5801247, 0, -0.45728773), (-1.5801247, 10, -0.45728773)],
        40: [(-0.688434, 0, -1.0895697), (-1.8005396, 0, -1.470604), (-2.5065842, 0, -0.53067464), (-1.8308382, 0, 0.43126777), (-0.7071595, 0, 0.08585163), (-0.688434, 10, -1.0895697), (-1.8005396, 10, -1.470604), (-2.5065842, 10, -0.53067464), (-1.8308382, 10, 0.43126777), (-0.7071595, 10, 0.08585163), (-1.5067111, 0, -0.5147458), (-1.5067111, 10, -0.5147458)],
        41: [(-0.55586255, 0, -1.054949), (-1.6243724, 0, -1.545105), (-2.420726, 0, -0.6803583), (-1.8443898, 0, 0.3442405), (-0.6918408, 0, 0.11273068), (-0.55586255, 10, -1.054949), (-1.6243724, 10, -1.545105), (-2.420726, 10, -0.6803583), (-1.8443898, 10, 0.3442405), (-0.6918408, 10, 0.11273068), (-1.4274383, 0, -0.5646882), (-1.4274383, 10, -0.5646882)],
        42: [(-0.42692038, 0, -1.0073693), (-1.4411582, 0, -1.6017494), (-2.319864, 0, -0.8208256), (-1.8486962, 0, 0.2561921), (-0.6787928, 0, 0.14090176), (-0.42692038, 10, -1.0073693), (-1.4411582, 10, -1.6017494), (-2.319864, 10, -0.8208256), (-1.8486962, 10, 0.2561921), (-0.6787928, 10, 0.14090176), (-1.3430864, 0, -0.60657007), (-1.3430864, 10, -0.60657007)],
        43: [(-0.30288368, 0, -0.9472599), (-1.2527155, 0, -1.6399255), (-2.2049937, 0, -0.95062715), (-1.8437023, 0, 0.16804816), (-0.6681336, 0, 0.17012927), (-0.30288368, 10, -0.9472599), (-1.2527155, 10, -1.6399255), (-2.2049937, 10, -0.95062715), (-1.8437023, 10, 0.16804816), (-0.6681336, 10, 0.17012927), (-1.2544857, 0, -0.639927), (-1.2544857, 10, -0.639927)],
        44: [(-0.18497938, 0, -0.8751757), (-1.0609148, 0, -1.6592058), (-2.0772507, 0, -1.0684203), (-1.8294454, 0, 0.08073526), (-0.65995735, 0, 0.20016702), (-0.18497938, 10, -0.8751757), (-1.0609148, 10, -1.6592058), (-2.0772507, 10, -1.0684203), (-1.8294454, 10, 0.08073526), (-0.65995735, 10, 0.20016702), (-1.1625094, 0, -0.6643799), (-1.1625094, 10, -0.6643799)],
        45: [(-0.074372835, 0, -0.7917912), (-0.8676598, 0, -1.6593521), (-1.9378984, 0, -1.1729822), (-1.8060552, 0, -0.004828447), (-0.65433306, 0, 0.23076063), (-0.074372835, 10, -0.7917912), (-0.8676598, 10, -1.6593521), (-1.9378984, 10, -1.1729822), (-1.8060552, 10, -0.004828447), (-0.65433306, 10, 0.23076063), (-1.0680639, 0, -0.6796387), (-1.0680639, 10, -0.6796387)],
        46: [(0.027843691, 0, -0.6978938), (-0.6748686, 0, -1.640317), (-1.7883164, 0, -1.2632226), (-1.7737526, 0, -0.08774234), (-0.65130395, 0, 0.26165012), (0.027843691, 10, -0.6978938), (-0.6748686, 10, -1.640317), (-1.7883164, 10, -1.2632226), (-1.7737526, 10, -0.08774234), (-0.65130395, 10, 0.26165012), (-0.9720796, 0, -0.6855051), (-0.9720796, 10, -0.6855051)],
        47: [(0.12066201, 0, -0.594376), (-0.48445433, 0, -1.6022452), (-1.629986, 0, -1.338194), (-1.7328473, 0, -0.16713235), (-0.65088725, 0, 0.2925725), (0.12066201, 10, -0.594376), (-0.48445433, 10, -1.6022452), (-1.629986, 10, -1.338194), (-1.7328473, 10, -0.16713235), (-0.65088725, 10, 0.2925725), (-0.8755026, 0, -0.68187505), (-0.8755026, 10, -0.68187505)],
        48: [(0.20316805, 0, -0.48222676), (-0.2983062, 0, -1.5454717), (-1.4644762, 0, -1.397102), (-1.6837347, 0, -0.24215965), (-0.6530738, 0, 0.32326436), (0.20316805, 10, -0.48222676), (-0.2983062, 10, -1.5454717), (-1.4644762, 10, -1.397102), (-1.6837347, 10, -0.24215965), (-0.6530738, 10, 0.32326436), (-0.77928454, 0, -0.66873914), (-0.77928454, 10, -0.66873914)],
        49: [(0.27455103, 0, -0.36252093), (-0.11827055, 0, -1.4705179), (-1.2934269, 0, -1.4393122), (-1.6268917, 0, -0.31202912), (-0.6578281, 0, 0.3534645), (0.27455103, 10, -0.36252093), (-0.11827055, 10, -1.4705179), (-1.2934269, 10, -1.4393122), (-1.6268917, 10, -0.31202912), (-0.6578281, 10, 0.3534645), (-0.68437326, 0, -0.64618313), (-0.68437326, 10, -0.64618313)],
        50: [(0.3341115, 0, -0.23640923), (0.053867526, 0, -1.3780875), (-1.1185333, 0, -1.4643576), (-1.5628728, 0, -0.3759972), (-0.6650889, 0, 0.3829167), (0.3341115, 10, -0.23640923), (0.053867526, 10, -1.3780875), (-1.1185333, 10, -1.4643576), (-1.5628728, 10, -0.3759972), (-0.6650889, 10, 0.3829167), (-0.5917032, 0, -0.614387), (-0.5917032, 10, -0.614387)],
        51: [(0.38126844, 0, -0.10510634), (0.21640214, 0, -1.2690587), (-0.94152886, 0, -1.4719425), (-1.4923033, 0, -0.43337935), (-0.6747695, 0, 0.41137195), (0.38126844, 10, -0.10510634), (0.21640214, 10, -1.2690587), (-0.94152886, 10, -1.4719425), (-1.4923033, 10, -0.43337935), (-0.6747695, 10, 0.41137195), (-0.50218624, 0, -0.573623), (-0.50218624, 10, -0.573623)],
        52: [(0.41556486, 0, 0.03012108), (0.36772355, 0, -1.1444756), (-0.764168, 0, -1.461946), (-1.4158741, 0, -0.483557), (-0.6867591, 0, 0.43859124), (0.41556486, 10, 0.03012108), (0.36772355, 10, -1.1444756), (-0.764168, 10, -1.461946), (-1.4158741, 10, -0.483557), (-0.6867591, 10, 0.43859124), (-0.41670257, 0, -0.52425325), (-0.41670257, 10, -0.52425325)],
        53: [(0.4366726, 0, 0.16796711), (0.5063343, 0, -1.0055376), (-0.5882084, 0, -1.4344226), (-1.3343346, 0, -0.5259835), (-0.7009233, 0, 0.46434784), (0.4366726, 10, 0.16796711), (0.5063343, 10, -1.0055376), (-0.5882084, 10, -1.4344226), (-1.3343346, 10, -0.5259835), (-0.7009233, 10, 0.46434784), (-0.33609188, 0, -0.46672577), (-0.33609188, 10, -0.46672577)],
        54: [(0.44439548, 0, 0.30709958), (0.63086414, 0, -0.8535879), (-0.41539332, 0, -1.3896023), (-1.2484846, 0, -0.5601899), (-0.7171059, 0, 0.48842955), (0.44439548, 10, 0.30709958), (0.63086414, 10, -0.8535879), (-0.41539332, 10, -1.3896023), (-1.2484846, 10, -0.5601899), (-0.7171059, 10, 0.48842955), (-0.26114485, 0, -0.4015702), (-0.26114485, 10, -0.4015702)],
        55: [(0.43867123, 0, 0.4461734), (0.74008375, 0, -0.6900997), (-0.24743466, 0, -1.3278877), (-1.159167, 0, -0.58578926), (-0.73513025, 0, 0.51064086), (0.43867123, 10, 0.4461734), (0.74008375, 10, -0.6900997), (-0.24743466, 10, -1.3278877), (-1.159167, 10, -0.58578926), (-0.73513025, 10, 0.51064086), (-0.19259539, 0, -0.32939246), (-0.19259539, 10, -0.32939246)],
        56: [(0.41957226, 0, 0.583844), (0.832917, 0, -0.51666147), (-0.08599538, 0, -1.2498505), (-1.0672591, 0, -0.60248077), (-0.75480115, 0, 0.53080475), (0.41957226, 10, 0.583844), (0.832917, 10, -0.51666147), (-0.08599538, 10, -1.2498505), (-1.0672591, 10, -0.60248077), (-0.75480115, 10, 0.53080475), (-0.13111328, 0, -0.2508688), (-0.13111328, 10, -0.2508688)],
        57: [(0.38730475, 0, 0.7187807), (0.9084517, 0, -0.33496118), (0.06732682, 0, -1.1562254), (-0.9736638, 0, -0.6100529), (-0.77590656, 0, 0.5487647), (0.38730475, 10, 0.7187807), (0.9084517, 10, -0.33496118), (0.06732682, 10, -1.1562254), (-0.9736638, 10, -0.6100529), (-0.77590656, 10, 0.5487647), (-0.07729742, 0, -0.16673882), (-0.07729742, 10, -0.16673882)],
        58: [(0.34220675, 0, 0.8496801), (0.96594876, 0, -0.14676954), (0.21101563, 0, -1.0479033), (-0.87930065, 0, -0.6083849), (-0.7982201, 0, 0.5643861), (0.34220675, 10, 0.8496801), (0.96594876, 10, -0.14676954), (0.21101563, 10, -1.0479033), (-0.87930065, 10, -0.6083849), (-0.7982201, 10, 0.5643861), (-0.03166993, 0, -0.0777983), (-0.03166993, 10, -0.0777983)],
        59: [(0.28474465, 0, 0.97527915), (1.0048496, 0, 0.046077874), (0.34365118, 0, -0.9259215), (-0.78509665, 0, -0.5974489), (-0.8215029, 0, 0.57755774), (0.28474465, 10, 0.97527915), (1.0048496, 10, 0.046077874), (0.34365118, 10, -0.9259215), (-0.78509665, 10, -0.5974489), (-0.8215029, 10, 0.57755774), (0.005329144, 0, 0.015108868), (0.005329144, 10, 0.015108868)],
        60: [(0.21550867, 0, 1.0943675), (1.0247813, 0, 0.24169889), (0.4639243, 0, -0.79145426), (-0.6919771, 0, -0.57730937), (-0.84550637, 0, 0.5881926), (0.21550867, 10, 1.0943675), (1.0247813, 10, 0.24169889), (0.4639243, 10, -0.79145426), (-0.6919771, 10, -0.57730937), (-0.84550637, 10, 0.5881926), (0.033346172, 0, 0.111099064), (0.033346172, 10, 0.111099064)],
        61: [(0.13520691, 0, 1.2057999), (1.0255615, 0, 0.43818352), (0.5706495, 0, -0.6458004), (-0.600856, 0, -0.548123), (-0.8699743, 0, 0.59622896), (0.13520691, 10, 1.2057999), (1.0255615, 10, 0.43818352), (0.5706495, 10, -0.6458004), (-0.600856, 10, -0.548123), (-0.8699743, 10, 0.59622896), (0.052117497, 0, 0.20925778), (0.052117497, 10, 0.20925778)],
        62: [(0.044658173, 0, 1.3085074), (1.0071983, 0, 0.6336131), (0.66277695, 0, -0.49037087), (-0.51262736, 0, -0.5101368), (-0.8946458, 0, 0.60163116), (0.044658173, 10, 1.3085074), (1.0071983, 10, 0.6336131), (0.66277695, 10, -0.49037087), (-0.51262736, 10, -0.5101368), (-0.8946458, 10, 0.60163116), (0.061472073, 0, 0.3086488), (0.061472073, 10, 0.3086488)],
        63: [(-0.055216055, 0, 1.4015083), (0.9698925, 0, 0.82607937), (0.7394029, 0, -0.32667413), (-0.428156, 0, -0.46368596), (-0.9192575, 0, 0.6043896), (-0.055216055, 10, 1.4015083), (0.9698925, 10, 0.82607937), (0.7394029, 10, -0.32667413), (-0.428156, 10, -0.46368596), (-0.9192575, 10, 0.6043896), (0.06133315, 0, 0.40832344), (0.06133315, 10, 0.40832344)],
        64: [(-0.16340092, 0, 1.4839178), (0.9140334, 0, 1.0137036), (0.7997786, 0, -0.15630147), (-0.348269, 0, -0.40919018), (-0.9435467, 0, 0.6045211), (-0.16340092, 10, 1.4839178), (0.9140334, 10, 1.0137036), (0.7997786, 10, -0.15630147), (-0.348269, 10, -0.40919018), (-0.9435467, 10, 0.6045211), (0.051719073, 0, 0.5073302), (0.051719073, 10, 0.5073302)],
        65: [(-0.27879828, 0, 1.5549566), (0.84019643, 0, 1.1946554), (0.84331805, 0, 0.019089084), (-0.27374735, 0, -0.34714976), (-0.96725345, 0, 0.60206854), (-0.27879828, 10, 1.5549566), (0.84019643, 10, 1.1946554), (0.84331805, 10, 0.019089084), (-0.27374735, 10, -0.34714976), (-0.96725345, 10, 0.60206854), (0.032743067, 0, 0.604724), (0.032743067, 10, 0.604724)],
        66: [(-0.4002378, 0, 1.6139591), (0.7491367, 0, 1.367171), (0.8696035, 0, 0.19778927), (-0.20531832, 0, -0.27814034), (-0.99012345, 0, 0.59710073), (-0.4002378, 10, 1.6139591), (0.7491367, 10, 1.367171), (0.8696035, 10, 0.19778927), (-0.20531832, 10, -0.27814034), (-0.99012345, 10, 0.59710073), (0.0046121287, 0, 0.69957596), (0.0046121287, 10, 0.69957596)],
        67: [(-0.5264884, 0, 1.66038), (0.6417817, 0, 1.5295708), (0.8783901, 0, 0.37805766), (-0.14364797, 0, -0.2028074), (-1.0119107, 0, 0.58971137), (-0.5264884, 10, 1.66038), (0.6417817, 10, 1.5295708), (0.8783901, 10, 0.37805766), (-0.14364797, 10, -0.2028074), (-1.0119107, 10, 0.58971137), (-0.032375056, 0, 0.7909825), (-0.032375056, 10, 0.7909825)],
        68: [(-0.65627086, 0, 1.6937994), (0.5192219, 0, 1.680276), (0.8696077, 0, 0.5581371), (-0.08933466, 0, -0.12185961), (-1.0323795, 0, 0.5800182), (-0.65627086, 10, 1.6937994), (0.5192219, 10, 1.680276), (0.8696077, 10, 0.5581371), (-0.08933466, 10, -0.12185961), (-1.0323795, 10, 0.5800182), (-0.07783109, 0, 0.8780742), (-0.07783109, 10, 0.8780742)],
        69: [(-0.78827035, 0, 1.7139271), (0.3826999, 0, 1.817825), (0.8433622, 0, 0.7362722), (-0.042903032, 0, -0.03606186), (-1.0513074, 0, 0.56816214), (-0.78827035, 10, 1.7139271), (0.3826999, 10, 1.817825), (0.8433622, 10, 0.7362722), (-0.042903032, 10, -0.03606186), (-1.0513074, 10, 0.56816214), (-0.13128375, 0, 0.9600249), (-0.13128375, 10, 0.9600249)],
        70: [(-0.9211497, 0, 1.7206062), (0.2335981, 0, 1.9408869), (0.79993415, 0, 0.9107269), (-0.0047987364, 0, 0.053772416), (-1.068487, 0, 0.5543053), (-0.9211497, 10, 1.7206062), (0.2335981, 10, 1.9408869), (0.79993415, 10, 0.9107269), (-0.0047987364, 10, 0.053772416), (-1.068487, 10, 0.5543053), (-0.19218065, 0, 1.0360595), (-0.19218065, 10, 1.0360595)],
        71: [(-1.0535628, 0, 1.7138134), (0.07342475, 0, 2.0482762), (0.73977584, 0, 1.0798019), (0.02461599, 0, 0.14678936), (-1.0837282, 0, 0.53863007), (-1.0535628, 10, 1.7138134), (0.07342475, 10, 2.0482762), (0.73977584, 10, 1.0798019), (0.02461599, 10, 0.14678936), (-1.0837282, 10, 0.53863007), (-0.25989488, 0, 1.1054622), (-0.25989488, 10, 1.1054622)],
        72: [(-1.1841677, 0, 1.6936605), (-0.09620104, 0, 2.1389632), (0.66350716, 0, 1.2418514), (0.045065954, 0, 0.24210319), (-1.0968599, 0, 0.52133656), (-1.1841677, 10, 1.6936605), (-0.09620104, 10, 2.1389632), (0.66350716, 10, 1.2418514), (0.045065954, 10, 0.24210319), (-1.0968599, 10, 0.52133656), (-0.33373114, 0, 1.167583), (-0.33373114, 10, 1.167583)],
        73: [(-1.3116409, 0, 1.660392), (-0.2735655, 0, 2.2120855), (0.57190907, 0, 1.3952999), (0.05636575, 0, 0.33880514), (-1.107732, 0, 0.50264114), (-1.3116409, 10, 1.660392), (-0.2735655, 10, 2.2120855), (0.57190907, 10, 1.3952999), (0.05636575, 10, 0.33880514), (-1.107732, 10, 0.50264114), (-0.41293272, 0, 1.2218448), (-0.41293272, 10, 1.2218448)],
        74: [(-1.4346892, 0, 1.6143842), (-0.45687732, 0, 2.266956), (0.4659159, 0, 1.5386575), (0.058421623, 0, 0.43597245), (-1.1162169, 0, 0.48277408), (-1.4346892, 10, 1.6143842), (-0.45687732, 10, 2.266956), (0.4659159, 10, 1.5386575), (0.058421623, 10, 0.43597245), (-1.1162169, 10, 0.48277408), (-0.49668917, 0, 1.2677488), (-0.49668917, 10, 1.2677488)],
        75: [(-1.552064, 0, 1.5561398), (-0.64428556, 0, 2.3030698), (0.34660605, 0, 1.6705354), (0.051232394, 0, 0.5326776), (-1.1222101, 0, 0.4619772), (-1.552064, 10, 1.5561398), (-0.64428556, 10, 2.3030698), (0.34660605, 10, 1.6705354), (0.051232394, 10, 0.5326776), (-1.1222101, 10, 0.4619772), (-0.58414423, 0, 1.30488), (-0.58414423, 10, 1.30488)],
        76: [(-1.6625727, 0, 1.4862843), (-0.8338981, 0, 2.3201094), (0.21519125, 0, 1.789659), (0.034889467, 0, 0.6279976), (-1.1256325, 0, 0.44050163), (-1.6625727, 10, 1.4862843), (-0.8338981, 10, 2.3201094), (0.21519125, 10, 1.789659), (0.034889467, 10, 0.6279976), (-1.1256325, 10, 0.44050163), (-0.67440456, 0, 1.3329104), (-0.67440456, 10, 1.3329104)],
        77: [(-1.7650918, 0, 1.4055586), (-1.0238006, 0, 2.3179474), (0.07300433, 0, 1.8948812), (0.009575931, 0, 0.7210232), (-1.1264299, 0, 0.41860506), (-1.7650918, 10, 1.4055586), (-1.0238006, 10, 2.3179474), (0.07300433, 10, 1.8948812), (0.009575931, 10, 0.7210232), (-1.1264299, 10, 0.41860506), (-0.7665484, 0, 1.3516032), (-0.7665484, 10, 1.3516032)],
        78: [(-1.8585765, 0, 1.3148123), (-1.2120757, 0, 2.2966487), (-0.07851402, 0, 1.985194), (-0.024435278, 0, 0.810868), (-1.1245744, 0, 0.39654934), (-1.8585765, 10, 1.3148123), (-1.2120757, 10, 2.2966487), (-0.07851402, 10, 1.985194), (-0.024435278, 10, 0.810868), (-1.1245744, 10, 0.39654934), (-0.8596352, 0, 1.3608145), (-0.8596352, 10, 1.3608145)],
        79: [(-1.9420727, 0, 1.2149954), (-1.3968219, 0, 2.256469), (-0.23782966, 0, 2.0597377), (-0.066784106, 0, 0.89667726), (-1.1200643, 0, 0.3745978), (-1.9420727, 10, 1.2149954), (-1.3968219, 10, 2.256469), (-0.23782966, 10, 2.0597377), (-0.066784106, 10, 0.89667726), (-1.1200643, 10, 0.3745978), (-0.9527145, 0, 1.3604954), (-0.9527145, 10, 1.3604954)],
        80: [(-2.0147257, 0, 1.1071478), (-1.5761727, 0, 2.1978526), (-0.4033303, 0, 2.1178102), (-0.117026985, 0, 0.9776364), (-1.1129242, 0, 0.35301262), (-2.0147257, 10, 1.1071478), (-1.5761727, 10, 2.1978526), (-0.4033303, 10, 2.1178102), (-0.117026985, 10, 0.9776364), (-1.1129242, 10, 0.35301262), (-1.044836, 0, 1.3506919), (-1.044836, 10, 1.3506919)],
        81: [(-2.075789, 0, 0.99239), (-1.7483157, 0, 2.1214283), (-0.57334167, 0, 2.1588745), (-0.17464124, 0, 1.0529794), (-1.1032047, 0, 0.33205226), (-2.075789, 10, 0.99239), (-1.7483157, 10, 2.1214283), (-0.57334167, 10, 2.1588745), (-0.17464124, 10, 1.0529794), (-1.1032047, 10, 0.33205226), (-1.1350585, 0, 1.3315449), (-1.1350585, 10, 1.3315449)],
        82: [(-2.1246314, 0, 0.8719111), (-1.9115099, 0, 2.0280015), (-0.74614424, 0, 2.1825624), (-0.23903035, 0, 1.1219958), (-1.0909823, 0, 0.31196874), (-2.1246314, 10, 0.8719111), (-1.9115099, 10, 2.0280015), (-0.74614424, 10, 2.1825624), (-0.23903035, 10, 1.1219958), (-1.0909823, 10, 0.31196874), (-1.2224597, 0, 1.303288), (-1.2224597, 10, 1.303288)],
        83: [(-2.160744, 0, 0.7469576), (-2.0641036, 0, 1.9185491), (-0.9199903, 0, 2.1886802), (-0.30952987, 0, 1.184039), (-1.0763578, 0, 0.29300535), (-2.160744, 10, 0.7469576), (-2.0641036, 10, 1.9185491), (-0.9199903, 10, 2.1886802), (-0.30952987, 10, 1.184039), (-1.0763578, 10, 0.29300535), (-1.3061452, 0, 1.2662462), (-1.3061452, 10, 1.2662462)],
        84: [(-2.1837447, 0, 0.61882037), (-2.204551, 0, 1.7942067), (-1.0931215, 0, 2.1772091), (-0.38541412, 0, 1.2385312), (-1.0594562, 0, 0.27539396), (-2.1837447, 10, 0.61882037), (-2.204551, 10, 1.7942067), (-1.0931215, 10, 2.1772091), (-0.38541412, 10, 1.2385312), (-1.0594562, 10, 0.27539396), (-1.3852575, 0, 1.2208322), (-1.3852575, 10, 1.2208322)],
        85: [(-2.1933818, 0, 0.488822), (-2.331427, 0, 1.6562592), (-1.2637867, 0, 2.148306), (-0.4659034, 0, 1.2849704), (-1.0404248, 0, 0.25935286), (-2.1933818, 10, 0.488822), (-2.331427, 10, 1.6562592), (-1.2637867, 10, 2.148306), (-0.4659034, 10, 1.2849704), (-1.0404248, 10, 0.25935286), (-1.4589847, 0, 1.1675421), (-1.4589847, 10, 1.1675421)],
        86: [(-2.1895378, 0, 0.35830373), (-2.4434426, 0, 1.506127), (-1.4302586, 0, 2.1023018), (-0.55017173, 0, 1.3229347), (-1.0194321, 0, 0.2450846), (-2.1895378, 10, 0.35830373), (-2.4434426, 10, 1.506127), (-1.4302586, 10, 2.1023018), (-0.55017173, 10, 1.3229347), (-1.0194321, 10, 0.2450846), (-1.5265685, 0, 1.1069504), (-1.5265685, 10, 1.1069504)],
        87: [(-2.1722288, 0, 0.22861165), (-2.5394564, 0, 1.3453524), (-1.5908523, 0, 2.0396984), (-0.6373552, 0, 1.352087), (-0.9966657, 0, 0.23277381), (-2.1722288, 10, 0.22861165), (-2.5394564, 10, 1.3453524), (-1.5908523, 10, 2.0396984), (-0.6373552, 10, 1.352087), (-0.9966657, 10, 0.23277381), (-1.5873116, 0, 1.0397047), (-1.5873116, 10, 1.0397047)],
        88: [(-2.1416059, 0, 0.10108369), (-2.618487, 0, 1.1755838), (-1.7439407, 0, 1.9611634), (-0.7265606, 0, 1.3721781), (-0.97233117, 0, 0.22258554), (-2.1416059, 10, 0.10108369), (-2.618487, 10, 1.1755838), (-1.7439407, 10, 1.9611634), (-0.7265606, 10, 1.3721781), (-0.97233117, 10, 0.22258554), (-1.6405851, 0, 0.9665189), (-1.6405851, 10, 0.9665189)],
        89: [(-2.0979526, 0, -0.022964077), (-2.679722, 0, 0.9985594), (-1.8879721, 0, 1.8675232), (-0.81687427, 0, 1.3830489), (-0.94664925, 0, 0.21466346), (-2.0979526, 10, -0.022964077), (-2.679722, 10, 0.9985594), (-1.8879721, 10, 1.8675232), (-0.81687427, 10, 1.3830489), (-0.94664925, 10, 0.21466346), (-1.685834, 0, 0.8881662), (-1.685834, 10, 0.8881662)],
        90: [(-2.0416825, 0, -0.1422504), (-2.7225277, 0, 0.8160897), (-2.0214849, 0, 1.7597554), (-0.9073712, 0, 1.3846328), (-0.919854, 0, 0.20912851), (-2.0416825, 10, -0.1422504), (-2.7225277, 10, 0.8160897), (-2.0214849, 10, 1.7597554), (-0.9073712, 10, 1.3846328), (-0.919854, 10, 0.20912851), (-1.722584, 0, 0.8054712), (-1.722584, 10, 0.8054712)],
        91: [(-1.9733349, 0, -0.25554177), (-2.746453, 0, 0.6300395), (-2.143122, 0, 1.6389784), (-0.99712455, 0, 1.3769555), (-0.89219034, 0, 0.20607768), (-1.9733349, 10, -0.25554177), (-2.746453, 10, 0.6300395), (-2.143122, 10, 1.6389784), (-0.99712455, 10, 1.3769555), (-0.89219034, 10, 0.20607768), (-1.750445, 0, 0.7193018), (-1.750445, 10, 0.7193018)],
        92: [(-1.8935701, 0, -0.36166465), (-2.7512364, 0, 0.44230938), (-2.2516453, 0, 1.5064403), (-1.0852144, 0, 1.3601353), (-0.86391175, 0, 0.20558299), (-1.8935701, 10, -0.36166465), (-2.7512364, 10, 0.44230938), (-2.2516453, 10, 1.5064403), (-1.0852144, 10, 1.3601353), (-0.86391175, 10, 0.20558299), (-1.7691156, 0, 0.6305607), (-1.7691156, 10, 0.6305607)],
        93: [(-1.8031615, 0, -0.45951724), (-2.7368069, 0, 0.2548165), (-2.3459473, 0, 1.3635072), (-1.1707375, 0, 1.3343818), (-0.83527756, 0, 0.20769083), (-1.8031615, 10, -0.45951724), (-2.7368069, 10, 0.2548165), (-2.3459473, 10, 1.3635072), (-1.1707375, 10, 1.3343818), (-0.83527756, 10, 0.20769083), (-1.7783861, 0, 0.5401758), (-1.7783861, 10, 0.5401758)],
        94: [(-1.7029895, 0, -0.5480805), (-2.7032847, 0, 0.06947553), (-2.4250622, 0, 1.2116481), (-1.252816, 0, 1.2999936), (-0.8065505, 0, 0.21242146), (-1.7029895, 10, -0.5480805), (-2.7032847, 10, 0.06947553), (-2.4250622, 10, 1.2116481), (-1.252816, 10, 1.2999936), (-0.8065505, 10, 0.21242146), (-1.7781405, 0, 0.44909164), (-1.7781405, 10, 0.44909164)],
        95: [(-1.594031, 0, -0.62642837), (-2.6509817, 0, -0.11182043), (-2.488176, 0, 1.052422), (-1.3306061, 0, 1.2573555), (-0.77799404, 0, 0.21976882), (-1.594031, 10, -0.62642837), (-2.6509817, 10, -0.11182043), (-2.488176, 10, 1.052422), (-1.3306061, 10, 1.2573555), (-0.77799404, 10, 0.21976882), (-1.7683578, 0, 0.35825947), (-1.7683578, 10, 0.35825947)],
        96: [(-1.4773511, 0, -0.6937369), (-2.5803964, 0, -0.28721887), (-2.5346346, 0, 0.88746065), (-1.4033068, 0, 1.2069345), (-0.74986964, 0, 0.22970058), (-1.4773511, 10, -0.6937369), (-2.5803964, 10, -0.28721887), (-2.5346346, 10, 0.88746065), (-1.4033068, 10, 1.2069345), (-0.74986964, 10, 0.22970058), (-1.7491117, 0, 0.26862797), (-1.7491117, 10, 0.26862797)],
        97: [(-1.3540915, 0, -0.7492926), (-2.4922104, 0, -0.45492625), (-2.5639493, 0, 0.7184533), (-1.4701676, 0, 1.1492753), (-0.7224344, 0, 0.24215849), (-1.3540915, 10, -0.7492926), (-2.4922104, 10, -0.45492625), (-2.5639493, 10, 0.7184533), (-1.4701676, 10, 1.1492753), (-0.7224344, 10, 0.24215849), (-1.7205707, 0, 0.18113364), (-1.7205707, 10, 0.18113364)],
        98: [(-1.2254597, 0, -0.7924996), (-2.3872802, 0, -0.6132261), (-2.5758033, 0, 0.5471295), (-1.5304965, 0, 1.0849952), (-0.6959381, 0, 0.2570589), (-1.2254597, 10, -0.7924996), (-2.3872802, 10, -0.6132261), (-2.5758033, 10, 0.5471295), (-1.5304965, 10, 1.0849952), (-0.6959381, 10, 0.2570589), (-1.6829956, 0, 0.09669157), (-1.6829956, 10, 0.09669157)],
        99: [(-1.0927163, 0, -0.82288533), (-2.2666302, 0, -0.760496), (-2.5700536, 0, 0.37524176), (-1.583666, 0, 1.014777), (-0.6706212, 0, 0.27429366), (-1.0927163, 10, -0.82288533), (-2.2666302, 10, -0.760496), (-2.5700536, 10, 0.37524176), (-1.583666, 10, 1.014777), (-0.6706212, 10, 0.27429366), (-1.6367375, 0, 0.016186193), (-1.6367375, 10, 0.016186193)],
        100: [(-0.95716333, 0, -0.8401057), (-2.1314409, 0, -0.89522386), (-2.5467331, 0, 0.20454812), (-1.6291203, 0, 0.9393627), (-0.64671206, 0, 0.29373118), (-0.95716333, 10, -0.8401057), (-2.1314409, 10, -0.89522386), (-2.5467331, 10, 0.20454812), (-1.6291203, 10, 0.9393627), (-0.64671206, 10, 0.29373118), (-1.582234, 0, -0.05953751), (-1.582234, 10, -0.05953751)],
        101: [(-0.8201301, 0, -0.8439481), (-1.9830387, 0, -1.016023), (-2.50605, 0, 0.036794595), (-1.6663805, 0, 0.8595466), (-0.62442464, 0, 0.31521773), (-0.8201301, 10, -0.8439481), (-1.9830387, 10, -1.016023), (-2.50605, 10, 0.036794595), (-1.6663805, 10, 0.8595466), (-0.62442464, 10, 0.31521773), (-1.5200049, 0, -0.12968245), (-1.5200049, 10, -0.12968245)],
        102: [(-0.6829609, 0, -0.83433384), (-1.822881, 0, -1.1216463), (-2.448386, 0, -0.12630232), (-1.6950493, 0, 0.77616644), (-0.60395664, 0, 0.33857894), (-0.6829609, 10, -0.83433384), (-1.822881, 10, -1.1216463), (-2.448386, 10, -0.12630232), (-1.6950493, 10, 0.77616644), (-0.60395664, 10, 0.33857894), (-1.4506468, 0, -0.1935074), (-1.4506468, 10, -0.1935074)],
        103: [(-0.5470011, 0, -0.8113187), (-1.6525428, 0, -1.2109978), (-2.3742914, 0, -0.2830728), (-1.714815, 0, 0.69009554), (-0.58548737, 0, 0.36362168), (-0.5470011, 10, -0.8113187), (-1.6525428, 10, -1.2109978), (-2.3742914, 10, -0.2830728), (-1.714815, 10, 0.69009554), (-0.58548737, 10, 0.36362168), (-1.3748276, 0, -0.2503344), (-1.3748276, 10, -0.2503344)],
        104: [(-0.41358367, 0, -0.77509254), (-1.473701, 0, -1.283145), (-2.2844818, 0, -0.43191034), (-1.7254547, 0, 0.60223407), (-0.56917596, 0, 0.3901358), (-0.41358367, 10, -0.77509254), (-1.473701, 10, -1.283145), (-2.2844818, 10, -0.43191034), (-1.7254547, 10, 0.60223407), (-0.56917596, 10, 0.3901358), (-1.2932794, 0, -0.2995556), (-1.2932794, 10, -0.2995556)],
        105: [(-0.284016, 0, -0.72597736), (-1.2881166, 0, -1.3373269), (-2.1798286, 0, -0.5712878), (-1.7268363, 0, 0.51349974), (-0.55515975, 0, 0.41789636), (-0.284016, 10, -0.72597736), (-1.2881166, 10, -1.3373269), (-2.1798286, 10, -0.5712878), (-1.7268363, 10, 0.51349974), (-0.55515975, 10, 0.41789636), (-1.2067914, 0, -0.34063917), (-1.2067914, 10, -0.34063917)],
        106: [(-0.15956698, 0, -0.6644241), (-1.0976181, 0, -1.3729621), (-2.0613515, 0, -0.6997728), (-1.7189205, 0, 0.4248191), (-0.54355294, 0, 0.44666582), (-0.15956698, 10, -0.6644241), (-1.0976181, 10, -1.3729621), (-2.0613515, 10, -0.6997728), (-1.7189205, 10, 0.4248191), (-0.54355294, 10, 0.44666582), (-1.116202, 0, -0.37313482), (-1.116202, 10, -0.37313482)],
        107: [(-0.041453987, 0, -0.591008), (-0.90408295, 0, -1.3896551), (-1.9302086, 0, -0.8160417), (-1.70176, 0, 0.33711794), (-0.5344455, 0, 0.47619647), (-0.041453987, 10, -0.591008), (-0.90408295, 10, -1.3896551), (-1.9302086, 10, -0.8160417), (-1.70176, 10, 0.33711794), (-0.5344455, 10, 0.47619647), (-1.0223902, 0, -0.3966781), (-1.0223902, 10, -0.3966781)],
        108: [(0.06916905, 0, -0.50642306), (-0.7094187, 0, -1.3871995), (-1.7876837, 0, -0.9188934), (-1.6755004, 0, 0.2513121), (-0.52790225, 0, 0.50623286), (0.06916905, 10, -0.50642306), (-0.7094187, 10, -1.3871995), (-1.7876837, 10, -0.9188934), (-1.6755004, 10, 0.2513121), (-0.52790225, 10, 0.50623286), (-0.9262672, 0, -0.4109942), (-0.9262672, 10, -0.4109942)],
        109: [(0.17122325, 0, -0.4114749), (-0.5155439, 0, -1.3655802), (-1.6351746, 0, -1.0072606), (-1.6403774, 0, 0.1682984), (-0.5239621, 0, 0.5365142), (0.17122325, 10, -0.4114749), (-0.5155439, 10, -1.3655802), (-1.6351746, 10, -1.0072606), (-1.6403774, 10, 0.1682984), (-0.5239621, 10, 0.5365142), (-0.82876694, 0, -0.41590062), (-0.82876694, 10, -0.41590062)],
        110: [(0.2637155, 0, -0.307073), (-0.32436904, 0, -1.3249741), (-1.4741787, 0, -1.080221), (-1.5967155, 0, 0.08894558), (-0.5226378, 0, 0.5667774), (0.2637155, 10, -0.307073), (-0.32436904, 10, -1.3249741), (-1.4741787, 10, -1.080221), (-1.5967155, 10, 0.08894558), (-0.5226378, 10, 0.5667774), (-0.73083705, 0, -0.41130903), (-0.73083705, 10, -0.41130903)],
        111: [(0.3457485, 0, -0.19422126), (-0.13777754, 0, -1.2657475), (-1.3062774, 0, -1.1370068), (-1.5449239, 0, 0.014085712), (-0.52391577, 0, 0.5967592), (0.3457485, 10, -0.19422126), (-0.13777754, 10, -1.2657475), (-1.3062774, 10, -1.1370068), (-1.5449239, 10, 0.014085712), (-0.52391577, 10, 0.5967592), (-0.6334292, 0, -0.39722613), (-0.6334292, 10, -0.39722613)],
        112: [(0.4165296, 0, -0.0740082), (0.042393293, 0, -1.1884534), (-1.1331215, 0, -1.177011), (-1.4854933, 0, -0.055494178), (-0.5277563, 0, 0.6261991), (0.4165296, 10, -0.0740082), (0.042393293, 10, -1.1884534), (-1.1331215, 10, -1.177011), (-1.4854933, 10, -0.055494178), (-0.5277563, 10, 0.6261991), (-0.53748965, 0, -0.37375355), (-0.53748965, 10, -0.37375355)],
        113: [(0.47537875, 0, 0.05240397), (0.21437044, 0, -1.093825), (-0.95641404, 0, -1.1997955), (-1.4189903, 0, -0.11905996), (-0.5340937, 0, 0.6548419), (0.47537875, 10, 0.05240397), (0.21437044, 10, -1.093825), (-0.95641404, 10, -1.1997955), (-1.4189903, 10, -0.11905996), (-0.5340937, 10, 0.6548419), (-0.44394976, 0, -0.3410869), (-0.44394976, 10, -0.3410869)],
        114: [(0.52173537, 0, 0.18379095), (0.37646297, 0, -0.98276895), (-0.77789307, 0, -1.2050934), (-1.3460519, 0, -0.1759377), (-0.5428373, 0, 0.6824401), (0.52173537, 10, 0.18379095), (0.37646297, 10, -0.98276895), (-0.77789307, 10, -1.2050934), (-1.3460519, 10, -0.1759377), (-0.5428373, 10, 0.6824401), (-0.3537168, 0, -0.29951382), (-0.3537168, 10, -0.29951382)],
        115: [(0.55516386, 0, 0.31887862), (0.52707887, 0, -0.8563564), (-0.59931475, 0, -1.1928135), (-1.2673793, 0, -0.22552048), (-0.5538722, 0, 0.7087567), (0.55516386, 10, 0.31887862), (0.52707887, 10, -0.8563564), (-0.59931475, 10, -1.1928135), (-1.2673793, 10, -0.22552048), (-0.5538722, 10, 0.7087567), (-0.2676647, 0, -0.249411), (-0.2676647, 10, -0.249411)],
        116: [(0.57535803, 0, 0.45635572), (0.66474104, 0, -0.7158118), (-0.42243567, 0, -1.1630398), (-1.1837308, 0, -0.26727435), (-0.5670604, 0, 0.7335671), (0.57535803, 10, 0.45635572), (0.66474104, 10, -0.7158118), (-0.42243567, 10, -1.1630398), (-1.1837308, 10, -0.26727435), (-0.5670604, 10, 0.7335671), (-0.18662556, 0, -0.19124061), (-0.18662556, 10, -0.19124061)],
        117: [(0.582144, 0, 0.594887), (0.788102, 0, -0.56250113), (-0.24899507, 0, -1.1160314), (-1.0959142, 0, -0.3007438), (-0.582242, 0, 0.756662), (0.582144, 10, 0.594887), (0.788102, 10, -0.56250113), (-0.24899507, 10, -1.1160314), (-1.0959142, 10, -0.3007438), (-0.582242, 10, 0.756662), (-0.11138106, 0, -0.12554546), (-0.11138106, 10, -0.12554546)],
        118: [(0.57548225, 0, 0.7331266), (0.8959573, 0, -0.397918), (-0.0806978, 0, -1.0522199), (-1.0047789, 0, -0.3255561), (-0.5992373, 0, 0.77784866), (0.57548225, 10, 0.7331266), (0.8959573, 10, -0.397918), (-0.0806978, 10, -1.0522199), (-1.0047789, 10, -0.3255561), (-0.5992373, 10, 0.77784866), (-0.042654887, 0, -0.05294374), (-0.042654887, 10, -0.05294374)],
        119: [(0.55546755, 0, 0.8697312), (0.9872576, 0, -0.22366874), (0.08080293, 0, -0.9722046), (-0.9112069, 0, -0.34142533), (-0.61784804, 0, 0.7969536), (0.55546755, 10, 0.8697312), (0.9872576, 10, -0.22366874), (0.08080293, 10, -0.9722046), (-0.9112069, 10, -0.34142533), (-0.61784804, 10, 0.7969536), (0.018894639, 0, 0.025877224), (0.018894639, 10, 0.025877224)],
        120: [(0.52232856, 0, 1.003374), (1.0611193, 0, -0.041456465), (0.233922, 0, -0.87674725), (-0.8161047, 0, -0.34815496), (-0.6378597, 0, 0.8138239), (0.52232856, 10, 1.003374), (1.0611193, 10, -0.041456465), (0.233922, 10, -0.87674725), (-0.8161047, 10, -0.34815496), (-0.6378597, 10, 0.8138239), (0.072681084, 0, 0.110167824), (0.072681084, 10, 0.110167824)],
        121: [(0.47642505, 0, 1.1327573), (1.1168331, 0, 0.14693603), (0.37715825, 0, -0.76676375), (-0.7203939, 0, -0.34563994), (-0.65904367, 0, 0.8283286), (0.47642505, 10, 1.1327573), (1.1168331, 10, 0.14693603), (0.37715825, 10, -0.76676375), (-0.7203939, 10, -0.34563994), (-0.65904367, 10, 0.8283286), (0.11819576, 0, 0.19912365), (0.11819576, 10, 0.19912365)],
        122: [(0.4182446, 0, 1.2566261), (1.1538712, 0, 0.339664), (0.50910944, 0, -0.6433153), (-0.6250018, 0, -0.3338678), (-0.6811593, 0, 0.84036064), (0.4182446, 10, 1.2566261), (1.1538712, 10, 0.339664), (0.50910944, 10, -0.6433153), (-0.6250018, 10, -0.3338678), (-0.6811593, 10, 0.84036064), (0.15501282, 0, 0.29189354), (0.15501282, 10, 0.29189354)],
        123: [(0.3483977, 0, 1.3737804), (1.1718926, 0, 0.53483933), (0.6284862, 0, -0.5075979), (-0.5308524, 0, -0.31291854), (-0.7039566, 0, 0.84983724), (0.3483977, 10, 1.3737804), (1.1718926, 10, 0.53483933), (0.6284862, 10, -0.5075979), (-0.5308524, 10, -0.31291854), (-0.7039566, 10, 0.84983724), (0.18279353, 0, 0.3875881), (0.18279353, 10, 0.3875881)],
        124: [(0.26761147, 0, 1.4830868), (1.1707468, 0, 0.7305493), (0.73412514, 0, -0.3609303), (-0.43885705, 0, -0.2829642), (-0.7271784, 0, 0.856701), (0.26761147, 10, 1.4830868), (1.1707468, 10, 0.7305493), (0.73412514, 10, -0.3609303), (-0.43885705, 10, -0.2829642), (-0.7271784, 10, 0.856701), (0.2012896, 0, 0.48528853), (0.2012896, 10, 0.48528853)],
        125: [(0.17672265, 0, 1.5834904), (1.1504744, 0, 0.92487556), (0.8250002, 0, -0.2047406), (-0.34990558, 0, -0.24426685), (-0.7505632, 0, 0.8609207), (0.17672265, 10, 1.5834904), (1.1504744, 10, 0.92487556), (0.8250002, 10, -0.2047406), (-0.34990558, 10, -0.24426685), (-0.7505632, 10, 0.8609207), (0.2103457, 0, 0.58405584), (0.2103457, 10, 0.58405584)],
        126: [(0.076668985, 0, 1.6740252), (1.1113079, 0, 1.1159135), (0.9002331, 0, -0.040552408), (-0.26485705, 0, -0.19717607), (-0.7738477, 0, 0.86249113), (0.076668985, 10, 1.6740252), (1.1113079, 10, 1.1159135), (0.9002331, 10, -0.040552408), (-0.26485705, 10, -0.19717607), (-0.7738477, 10, 0.86249113), (0.20990103, 0, 0.6829403), (0.20990103, 10, 0.6829403)],
        127: [(-0.03151994, 0, 1.7538233), (1.0536681, 0, 1.3017914), (0.9591019, 0, 0.1300307), (-0.18453136, 0, -0.14212541), (-0.7967694, 0, 0.8614336), (-0.03151994, 10, 1.7538233), (1.0536681, 10, 1.3017914), (0.9591019, 10, 0.1300307), (-0.18453136, 10, -0.14212541), (-0.7967694, 10, 0.8614336), (0.19998989, 0, 0.7809907), (0.19998989, 10, 0.7809907)],
        128: [(-0.14673309, 0, 1.8221244), (0.9781615, 0, 1.4806888), (1.0010486, 0, 0.3053411), (-0.10970106, 0, -0.0796282), (-0.81906915, 0, 0.85779536), (-0.14673309, 10, 1.8221244), (0.9781615, 10, 1.4806888), (1.0010486, 10, 0.3053411), (-0.10970106, 10, -0.0796282), (-0.81906915, 10, 0.85779536), (0.18074134, 0, 0.87726426), (0.18074134, 10, 0.87726426)],
        129: [(-0.2677891, 0, 1.8782824), (0.8855724, 0, 1.6508547), (1.025684, 0, 0.4836637), (-0.041083608, 0, -0.010272248), (-0.84049404, 0, 0.85164946), (-0.2677891, 10, 1.8782824), (0.8855724, 10, 1.6508547), (1.025684, 10, 0.4836637), (-0.041083608, 10, -0.010272248), (-0.84049404, 10, 0.85164946), (0.15237795, 0, 0.9708356), (0.15237795, 10, 0.9708356)],
        130: [(-0.39344797, 0, 1.9217728), (0.77685636, 0, 1.8106254), (1.0327927, 0, 0.66325337), (0.020665793, 0, 0.065285936), (-0.8607995, 0, 0.84309375), (-0.39344797, 10, 1.9217728), (0.77685636, 10, 1.8106254), (1.0327927, 10, 0.66325337), (0.020665793, 10, 0.065285936), (-0.8607995, 10, 0.84309375), (0.11521349, 0, 1.0608063), (0.11521349, 10, 1.0608063)],
        131: [(-0.5224236, 0, 1.9521976), (0.65313035, 0, 1.9584408), (1.0223341, 0, 0.84235185), (0.07496075, 0, 0.1463277), (-0.8797521, 0, 0.83225006), (-0.5224236, 10, 1.9521976), (0.65313035, 10, 1.9584408), (1.0223341, 10, 0.84235185), (0.07496075, 10, 0.1463277), (-0.8797521, 10, 0.83225006), (0.06964991, 0, 1.1463135), (0.06964991, 10, 1.1463135)],
        132: [(-0.65339655, 0, 1.9692886), (0.51566124, 0, 2.0928602), (0.99444354, 0, 1.0192059), (0.12128955, 0, 0.23207949), (-0.8971317, 0, 0.81926286), (-0.65339655, 10, 1.9692886), (0.51566124, 10, 2.0928602), (0.99444354, 10, 1.0192059), (0.12128955, 10, 0.23207949), (-0.8971317, 10, 0.81926286), (0.016173236, 0, 1.2265394), (0.016173236, 10, 1.2265394)],
        133: [(-0.78502715, 0, 1.9729112), (0.3658536, 0, 2.2125766), (0.9494306, 0, 1.1920846), (0.15922023, 0, 0.32172048), (-0.9127336, 0, 0.8042979), (-0.78502715, 10, 1.9729112), (0.3658536, 10, 2.2125766), (0.9494306, 10, 1.1920846), (0.15922023, 10, 0.32172048), (-0.9127336, 10, 0.8042979), (-0.04465127, 0, 1.3007182), (-0.04465127, 10, 1.3007182)],
        134: [(-0.9159692, 0, 1.9630651), (0.20523539, 0, 2.3164294), (0.88777614, 0, 1.3592961), (0.18840495, 0, 0.4143909), (-0.926371, 0, 0.7875406), (-0.9159692, 10, 1.9630651), (0.20523539, 10, 2.3164294), (0.88777614, 10, 1.3592961), (0.18840495, 10, 0.4143909), (-0.926371, 10, 0.7875406), (-0.11218474, 0, 1.3681444), (-0.11218474, 10, 1.3681444)],
        135: [(-1.0448829, 0, 1.9398843), (0.035442736, 0, 2.403417), (0.8101275, 0, 1.5192057), (0.20858337, 0, 0.50920045), (-0.9378761, 0, 0.7691941), (-1.0448829, 10, 1.9398843), (0.035442736, 10, 2.403417), (0.8101275, 10, 1.5192057), (0.20858337, 10, 0.50920045), (-0.9378761, 10, 0.7691941), (-0.18572108, 0, 1.4281803), (-0.18572108, 10, 1.4281803)],
        136: [(-1.1704488, 0, 1.903636), (-0.14179637, 0, 2.4727056), (0.717292, 0, 1.6702511), (0.2195854, 0, 0.6052374), (-0.9471026, 0, 0.7494772), (-1.1704488, 10, 1.903636), (-0.14179637, 10, 2.4727056), (0.717292, 10, 1.6702511), (0.2195854, 10, 0.6052374), (-0.9471026, 10, 0.7494772), (-0.26449406, 0, 1.4802614), (-0.26449406, 10, 1.4802614)],
        137: [(-1.2913806, 0, 1.8547177), (-0.32467932, 0, 2.5236382), (0.61022896, 0, 1.8109584), (0.22133277, 0, 0.70157766), (-0.9539266, 0, 0.7286224), (-1.2913806, 10, 1.8547177), (-0.32467932, 10, 2.5236382), (0.61022896, 10, 1.8109584), (0.22133277, 10, 0.70157766), (-0.9539266, 10, 0.7286224), (-0.34768495, 0, 1.5239029), (-0.34768495, 10, 1.5239029)],
        138: [(-1.4064382, 0, 1.7936536), (-0.511347, 0, 2.5557413), (0.4900399, 0, 1.939957), (0.21383986, 0, 0.79729366), (-0.9582481, 0, 0.7068732), (-1.4064382, 10, 1.7936536), (-0.511347, 10, 2.5557413), (0.4900399, 10, 1.939957), (0.21383986, 10, 0.79729366), (-0.9582481, 10, 0.7068732), (-0.4344307, 0, 1.5587038), (-0.4344307, 10, 1.5587038)],
        139: [(-1.51444, 0, 1.7210886), (-0.69990224, 0, 2.5687292), (0.35795778, 0, 2.055993), (0.19721355, 0, 0.8914643), (-0.9599919, 0, 0.6844819), (-1.51444, 10, 1.7210886), (-0.69990224, 10, 2.5687292), (0.35795778, 10, 2.055993), (0.19721355, 10, 0.8914643), (-0.9599919, 10, 0.6844819), (-0.52383256, 0, 1.5843514), (-0.52383256, 10, 1.5843514)],
        140: [(-1.6142744, 0, 1.6377828), (-0.88842887, 0, 2.5625067), (0.21533443, 0, 2.157942), (0.17165214, 0, 0.9831834), (-0.9591083, 0, 0.6617073), (-1.6142744, 10, 1.6377828), (-0.88842887, 10, 2.5625067), (0.21533443, 10, 2.157942), (0.17165214, 10, 0.9831834), (-0.9591083, 10, 0.6617073), (-0.614965, 0, 1.6006244), (-0.614965, 10, 1.6006244)],
        141: [(-1.7049118, 0, 1.5446033), (-1.0750109, 0, 2.5371711), (0.06362732, 0, 2.24482), (0.13744342, 0, 1.0715693), (-0.9555739, 0, 0.63881165), (-1.7049118, 10, 1.5446033), (-1.0750109, 10, 2.5371711), (0.06362732, 10, 2.24482), (0.13744342, 10, 1.0715693), (-0.9555739, 10, 0.63881165), (-0.70688516, 0, 1.607395), (-0.70688516, 10, 1.607395)],
        142: [(-1.785414, 0, 1.4425159), (-1.2577513, 0, 2.49301), (-0.09561522, 0, 2.3157935), (0.09496172, 0, 1.1557736), (-0.94939137, 0, 0.61605823), (-1.785414, 10, 1.4425159), (-1.2577513, 10, 2.49301), (-0.09561522, 10, 2.3157935), (0.09496172, 10, 1.1557736), (-0.94939137, 10, 0.61605823), (-0.79864204, 0, 1.6046302), (-0.79864204, 10, 1.6046302)],
        143: [(-1.8549439, 0, 1.3325746), (-1.4347918, 0, 2.430499), (-0.2607694, 0, 2.370188), (0.044664223, 0, 1.2349892), (-0.94058985, 0, 0.5937088), (-1.8549439, 10, 1.3325746), (-1.4347918, 10, 2.430499), (-0.2607694, 10, 2.370188), (0.044664223, 10, 1.2349892), (-0.94058985, 10, 0.5937088), (-0.88928616, 0, 1.592392), (-0.88928616, 10, 1.592392)],
        144: [(-1.912774, 0, 1.2159125), (-1.6043304, 0, 2.3502972), (-0.43015212, 0, 2.407494), (-0.012913638, 0, 1.3084589), (-0.9292243, 0, 0.572021), (-1.912774, 10, 1.2159125), (-1.6043304, 10, 2.3502972), (-0.43015212, 10, 2.407494), (-0.012913638, 10, 1.3084589), (-0.9292243, 10, 0.572021), (-0.97787887, 0, 1.5708367), (-0.97787887, 10, 1.5708367)],
        145: [(-1.9582932, 0, 1.0937291), (-1.7646401, 0, 2.2532396), (-0.60203797, 0, 2.427373), (-0.07716351, 0, 1.3754828), (-0.9153753, 0, 0.5512456), (-1.9582932, 10, 1.0937291), (-1.7646401, 10, 2.2532396), (-0.60203797, 10, 2.427373), (-0.07716351, 10, 1.3754828), (-0.9153753, 10, 0.5512456), (-1.063502, 0, 1.5402141), (-1.063502, 10, 1.5402141)],
        146: [(-1.9910136, 0, 0.9672794), (-1.9140859, 0, 2.14033), (-0.77467626, 0, 2.42966), (-0.1474102, 0, 1.4354252), (-0.89914805, 0, 0.5316241), (-1.9910136, 10, 0.9672794), (-1.9140859, 10, 2.14033), (-0.77467626, 10, 2.42966), (-0.1474102, 10, 1.4354252), (-0.89914805, 10, 0.5316241), (-1.1452668, 0, 1.5008638), (-1.1452668, 10, 1.5008638)],
        147: [(-2.010575, 0, 0.8378604), (-2.0511413, 0, 2.0127308), (-0.9463087, 0, 2.4143665), (-0.22291844, 0, 1.4877206), (-0.88067114, 0, 0.51338625), (-2.010575, 10, 0.8378604), (-2.0511413, 10, 2.0127308), (-0.9463087, 10, 2.4143665), (-0.22291844, 10, 1.4877206), (-0.88067114, 10, 0.51338625), (-1.2223228, 0, 1.4532129), (-1.2223228, 10, 1.4532129)],
        148: [(-2.0167482, 0, 0.7067989), (-2.174403, 0, 1.87175), (-1.1151867, 0, 2.3816783), (-0.30290022, 0, 1.5318803), (-0.8600958, 0, 0.49674788), (-2.0167482, 10, 0.7067989), (-2.174403, 10, 1.87175), (-1.1151867, 10, 2.3816783), (-0.30290022, 10, 1.5318803), (-0.8600958, 10, 0.49674788), (-1.2938668, 0, 1.3977711), (-1.2938668, 10, 1.3977711)],
        149: [(-2.0094378, 0, 0.5754378), (-2.2826061, 0, 1.7188298), (-1.2795893, 0, 2.3319557), (-0.38652265, 0, 1.5674965), (-0.83759373, 0, 0.4819087), (-2.0094378, 10, 0.5754378), (-2.2826061, 10, 1.7188298), (-1.2795893, 10, 2.3319557), (-0.38652265, 10, 1.5674965), (-0.83759373, 10, 0.4819087), (-1.3591499, 0, 1.3351257), (-1.3591499, 10, 1.3351257)],
        150: [(-1.988683, 0, 0.44512284), (-2.3746352, 0, 1.5555313), (-1.43784, 0, 2.2657287), (-0.4729163, 0, 1.5942466), (-0.813356, 0, 0.4690502), (-1.988683, 10, 0.44512284), (-2.3746352, 10, 1.5555313), (-1.43784, 10, 2.2657287), (-0.4729163, 10, 1.5942466), (-0.813356, 10, 0.4690502), (-1.4174861, 0, 1.2659359), (-1.4174861, 10, 1.2659359)],
        151: [(-1.9546571, 0, 0.31718922), (-2.449537, 0, 1.3835193), (-1.5883234, 0, 2.1836922), (-0.56118387, 0, 1.6118963), (-0.7875906, 0, 0.45833394), (-1.9546571, 10, 0.31718922), (-2.449537, 10, 1.3835193), (-1.5883234, 10, 2.1836922), (-0.56118387, 10, 1.6118963), (-0.7875906, 10, 0.45833394), (-1.4682584, 0, 1.1909262), (-1.4682584, 10, 1.1909262)],
        152: [(-1.9076658, 0, 0.19294809), (-2.506529, 0, 1.2045454), (-1.7295016, 0, 2.0866988), (-0.6504093, 0, 1.6203022), (-0.7605208, 0, 0.44989994), (-1.9076658, 10, 0.19294809), (-2.506529, 10, 1.2045454), (-1.7295016, 10, 2.0866988), (-0.6504093, 10, 1.6203022), (-0.7605208, 10, 0.44989994), (-1.5109253, 0, 1.1108788), (-1.5109253, 10, 1.1108788)],
        153: [(-1.8481445, 0, 0.07367358), (-2.545007, 0, 1.0204306), (-1.8599299, 0, 1.9757501), (-0.7396666, 0, 1.6194131), (-0.7323828, 0, 0.44386515), (-1.8481445, 10, 0.07367358), (-2.545007, 10, 1.0204306), (-1.8599299, 10, 1.9757501), (-0.7396666, 10, 1.6194131), (-0.7323828, 10, 0.44386515), (-1.5450262, 0, 1.0266265), (-1.5450262, 10, 1.0266265)],
        154: [(-1.776653, 0, -0.03940999), (-2.564552, 0, 0.833047), (-1.9782703, 0, 1.8519875), (-0.82802933, 0, 1.6092705), (-0.7034229, 0, 0.44032246), (-1.776653, 10, -0.03940999), (-2.564552, 10, 0.833047), (-1.9782703, 10, 1.8519875), (-0.82802933, 10, 1.6092705), (-0.7034229, 10, 0.44032246), (-1.5701855, 0, 0.93904346), (-1.5701855, 10, 0.93904346)],
        155: [(-1.6938711, 0, -0.14514035), (-2.5649343, 0, 0.6442993), (-2.0833058, 0, 1.7166799), (-0.91458, 0, 1.5900079), (-0.673896, 0, 0.43933967), (-1.6938711, 10, -0.14514035), (-2.5649343, 10, 0.6442993), (-2.0833058, 10, 1.7166799), (-0.91458, 10, 1.5900079), (-0.673896, 10, 0.43933967), (-1.5861175, 0, 0.8490373), (-1.5861175, 10, 0.8490373)],
        156: [(-1.6005911, 0, -0.24242884), (-2.546115, 0, 0.45610568), (-2.173952, 0, 1.5712115), (-0.99841887, 0, 1.5618502), (-0.6440622, 0, 0.44095883), (-1.6005911, 10, -0.24242884), (-2.546115, 10, 0.45610568), (-2.173952, 10, 1.5712115), (-0.99841887, 10, 1.5618502), (-0.6440622, 10, 0.44095883), (-1.5926279, 0, 0.75753945), (-1.5926279, 10, 0.75753945)],
        157: [(-1.4977098, 0, -0.33027133), (-2.5082471, 0, 0.27037853), (-2.2492683, 0, 1.4170676), (-1.0786732, 0, 1.5251107), (-0.6141845, 0, 0.44519576), (-1.4977098, 10, -0.33027133), (-2.5082471, 10, 0.27037853), (-2.2492683, 10, 1.4170676), (-1.0786732, 10, 1.5251107), (-0.6141845, 10, 0.44519576), (-1.5896165, 0, 0.6654963), (-1.5896165, 10, 0.6654963)],
        158: [(-1.38622, 0, -0.4077583), (-2.4516737, 0, 0.089005426), (-2.3084667, 0, 1.2558206), (-1.1545061, 0, 1.4801884), (-0.5845262, 0, 0.45204002), (-1.38622, 10, -0.4077583), (-2.4516737, 10, 0.089005426), (-2.3084667, 10, 1.2558206), (-1.1545061, 10, 1.4801884), (-0.5845262, 10, 0.45204002), (-1.5770786, 0, 0.5738592), (-1.5770786, 10, 0.5738592)],
        159: [(-1.2672004, 0, -0.4740838), (-2.376925, 0, -0.08616973), (-2.3509204, 0, 1.0891131), (-1.2251242, 0, 1.4275638), (-0.55534834, 0, 0.46145493), (-1.2672004, 10, -0.4740838), (-2.376925, 10, -0.08616973), (-2.3509204, 10, 1.0891131), (-1.2251242, 10, 1.4275638), (-0.55534834, 10, 0.46145493), (-1.5551037, 0, 0.48357567), (-1.5551037, 10, 0.48357567)],
        160: [(-1.1418046, 0, -0.52855366), (-2.284712, 0, -0.2533651), (-2.37617, 0, 0.91864234), (-1.2897867, 0, 1.3677943), (-0.5269069, 0, 0.47337794), (-1.1418046, 10, -0.52855366), (-2.284712, 10, -0.2533651), (-2.37617, 10, 0.91864234), (-1.2897867, 10, 1.3677943), (-0.5269069, 10, 0.47337794), (-1.5238761, 0, 0.39557916), (-1.5238761, 10, 0.39557916)],
        161: [(-1.01125, 0, -0.5705922), (-2.1759207, 0, -0.4108788), (-2.383927, 0, 0.7461429), (-1.3478116, 0, 1.3015083), (-0.49945047, 0, 0.48772123), (-1.01125, 10, -0.5705922), (-2.1759207, 10, -0.4108788), (-2.383927, 10, 0.7461429), (-1.3478116, 10, 1.3015083), (-0.49945047, 10, 0.48772123), (-1.4836719, 0, 0.3107803), (-1.4836719, 10, 0.3107803)],
        162: [(-0.87680507, 0, -0.5997483), (-2.051602, 0, -0.5571059), (-2.3740788, 0, 0.57336956), (-1.3985835, 0, 1.2293993), (-0.47321746, 0, 0.50437266), (-0.87680507, 10, -0.5997483), (-2.051602, 10, -0.5571059), (-2.3740788, 10, 0.57336956), (-1.3985835, 10, 1.2293993), (-0.47321746, 10, 0.50437266), (-1.4348574, 0, 0.23005748), (-1.4348574, 10, 0.23005748)],
        163: [(-0.7397772, 0, -0.61569965), (-1.9129621, 0, -0.69055426), (-2.346687, 0, 0.40207958), (-1.441559, 0, 1.1522189), (-0.44843403, 0, 0.5231968), (-0.7397772, 10, -0.61569965), (-1.9129621, 10, -0.69055426), (-2.346687, 10, 0.40207958), (-1.441559, 10, 1.1522189), (-0.44843403, 10, 0.5231968), (-1.3778839, 0, 0.15424828), (-1.3778839, 10, 0.15424828)],
        164: [(-0.6014994, 0, -0.6182561), (-1.7613503, 0, -0.8098598), (-2.3019898, 0, 0.2340152), (-1.4762726, 0, 1.0707691), (-0.42531165, 0, 0.54403645), (-0.6014994, 10, -0.6182561), (-1.7613503, 10, -0.8098598), (-2.3019898, 10, 0.2340152), (-1.4762726, 10, 1.0707691), (-0.42531165, 10, 0.54403645), (-1.3132848, 0, 0.08414095), (-1.3132848, 10, 0.08414095)],
        165: [(-0.463317, 0, -0.60736144), (-1.598245, 0, -0.91379976), (-2.2403972, 0, 0.07088628), (-1.5023412, 0, 0.985894), (-0.4040451, 0, 0.56671387), (-0.463317, 10, -0.60736144), (-1.598245, 10, -0.91379976), (-2.2403972, 10, 0.07088628), (-1.5023412, 10, 0.985894), (-0.4040451, 10, 0.56671387), (-1.241669, 0, 0.020466588), (-1.241669, 10, 0.020466588)],
        166: [(-0.32657427, 0, -0.5830941), (-1.4252396, 0, -1.0013052), (-2.1624882, 0, -0.08564679), (-1.5194677, 0, 0.89847237), (-0.38481042, 0, 0.59103304), (-0.32657427, 10, -0.5830941), (-1.4252396, 10, -1.0013052), (-2.1624882, 10, -0.08564679), (-1.5194677, 10, 0.89847237), (-0.38481042, 10, 0.59103304), (-1.1637161, 0, -0.03610815), (-1.1637161, 10, -0.03610815)],
        167: [(-0.19260082, 0, -0.54566634), (-1.244026, 0, -1.0714717), (-2.0690048, 0, -0.23398973), (-1.5274446, 0, 0.8094079), (-0.36776316, 0, 0.6167812), (-0.19260082, 10, -0.54566634), (-1.244026, 10, -1.0714717), (-2.0690048, 10, -0.23398973), (-1.5274446, 10, 0.8094079), (-0.36776316, 10, 0.6167812), (-1.0801679, 0, -0.08498774), (-1.0801679, 10, -0.08498774)],
        168: [(-0.062698565, 0, -0.49542198), (-1.056378, 0, -1.1235678), (-1.960844, 0, -0.3726303), (-1.5261554, 0, 0.71962047), (-0.35303694, 0, 0.64373106), (-0.062698565, 10, -0.49542198), (-1.056378, 10, -1.1235678), (-1.960844, 10, -0.3726303), (-1.5261554, 10, 0.71962047), (-0.35303694, 10, 0.64373106), (-0.9918226, 0, -0.12565371), (-0.9918226, 10, -0.12565371)],
        169: [(0.061871443, 0, -0.43283322), (-0.8641338, 0, -1.1570435), (-1.8390499, 0, -0.5001533), (-1.515576, 0, 0.6300372), (-0.340742, 0, 0.6716433), (0.061871443, 10, -0.43283322), (-0.8641338, 10, -1.1570435), (-1.8390499, 10, -0.5001533), (-1.515576, 10, 0.6300372), (-0.340742, 10, 0.6716433), (-0.89952606, 0, -0.15766989), (-0.89952606, 10, -0.15766989)],
        170: [(0.1799016, 0, -0.3584957), (-0.66917706, 0, -1.1715341), (-1.7048023, 0, -0.61525494), (-1.4957752, 0, 0.5415828), (-0.3309641, 0, 0.7002688), (0.1799016, 10, -0.3584957), (-0.66917706, 10, -1.1715341), (-1.7048023, 10, -0.61525494), (-1.4957752, 10, 0.5415828), (-0.3309641, 10, 0.7002688), (-0.8041634, 0, -0.18068664), (-0.8041634, 10, -0.18068664)],
        171: [(0.2902498, 0, -0.27312267), (-0.47341862, 0, -1.1668657), (-1.5594052, 0, -0.7167556), (-1.4669135, 0, 0.45517066), (-0.3237638, 0, 0.7293509), (0.2902498, 10, -0.27312267), (-0.47341862, 10, -1.1668657), (-1.5594052, 10, -0.7167556), (-1.4669135, 10, 0.45517066), (-0.3237638, 10, 0.7293509), (-0.70665026, 0, -0.19444448), (-0.70665026, 10, -0.19444448)],
        172: [(0.39185077, 0, -0.17753783), (-0.27877706, 0, -1.1430554), (-1.4042743, 0, -0.8036119), (-1.429242, 0, 0.37169346), (-0.31917566, 0, 0.75862855), (0.39185077, 10, -0.17753783), (-0.27877706, 10, -1.1430554), (-1.4042743, 10, -0.8036119), (-1.429242, 10, 0.37169346), (-0.31917566, 10, 0.75862855), (-0.6079236, 0, -0.19877663), (-0.6079236, 10, -0.19877663)],
        173: [(0.4837269, 0, -0.07266706), (-0.08715966, 0, -1.1003122), (-1.240922, 0, -0.8749266), (-1.3830997, 0, 0.29201445), (-0.31720808, 0, 0.78783816), (0.4837269, 10, -0.07266706), (-0.08715966, 10, -1.1003122), (-1.240922, 10, -0.8749266), (-1.3830997, 10, 0.29201445), (-0.31720808, 10, 0.78783816), (-0.5089325, 0, -0.19361067), (-0.5089325, 10, -0.19361067)],
        174: [(0.5649978, 0, 0.04047073), (0.099556595, 0, -1.039034), (-1.0709426, 0, -0.92995846), (-1.3289099, 0, 0.21695867), (-0.31784302, 0, 0.81671697), (0.5649978, 10, 0.04047073), (0.099556595, 10, -1.039034), (-1.0709426, 10, -0.92995846), (-1.3289099, 10, 0.21695867), (-0.31784302, 10, 0.81671697), (-0.41062823, 0, -0.17896923), (-0.41062823, 10, -0.17896923)],
        175: [(0.6348891, 0, 0.16077389), (0.2795439, 0, -0.9598044), (-0.89599717, 0, -0.96812874), (-1.2671762, 0, 0.14730486), (-0.32103643, 0, 0.8450051), (0.6348891, 10, 0.16077389), (0.2795439, 10, -0.9598044), (-0.89599717, 10, -0.96812874), (-1.2671762, 10, 0.14730486), (-0.32103643, 10, 0.8450051), (-0.31395534, 0, -0.15496987), (-0.31395534, 10, -0.15496987)],
        176: [(0.6927406, 0, 0.28706896), (0.4510418, 0, -0.86338645), (-0.71779543, 0, -0.98902744), (-1.1984776, 0, 0.08377754), (-0.32671845, 0, 0.8724485), (0.6927406, 10, 0.28706896), (0.4510418, 10, -0.86338645), (-0.71779543, 10, -0.98902744), (-1.1984776, 10, 0.08377754), (-0.32671845, 10, 0.8724485), (-0.21984182, 0, -0.12182378), (-0.21984182, 10, -0.12182378)],
        177: [(0.73801225, 0, 0.4181224), (0.6123748, 0, -0.75071514), (-0.5380799, 0, -0.99241745), (-1.1234626, 0, 0.027039828), (-0.33479422, 0, 0.89880145), (0.73801225, 10, 0.4181224), (0.6123748, 10, -0.75071514), (-0.5380799, 10, -0.99241745), (-1.1234626, 10, 0.027039828), (-0.33479422, 10, 0.89880145), (-0.12918995, 0, -0.07983378), (-0.12918995, 10, -0.07983378)],
        178: [(0.77028984, 0, 0.552653), (0.7619691, 0, -0.622888), (-0.3586082, 0, -0.9782367), (-1.0428423, 0, -0.02231316), (-0.3451449, 0, 0.9238287), (0.77028984, 10, 0.552653), (0.7619691, 10, -0.622888), (-0.3586082, 10, -0.9782367), (-1.0428423, 10, -0.02231316), (-0.3451449, 10, 0.9238287), (-0.04286728, 0, -0.029391216), (-0.04286728, 10, -0.029391216)],
        179: [(0.78928924, 0, 0.68934464), (0.89836836, 0, -0.48115432), (-0.18113503, 0, -0.94659877), (-0.9573839, 0, -0.06376031), (-0.35762867, 0, 0.94730836), (0.78928924, 10, 0.68934464), (0.89836836, 10, -0.48115432), (-0.18113503, 10, -0.94659877), (-0.9573839, 10, -0.06376031), (-0.35762867, 10, 0.94730836), (0.03830201, 0, 0.02902791), (0.03830201, 10, 0.02902791)],
        180: [(0.7948592, 0, 0.82685924), (1.0202482, 0, -0.3269024), (-0.007395224, 0, -0.89779204), (-0.8679028, 0, -0.09685968), (-0.37208238, 0, 0.9690334), (0.7948592, 10, 0.82685924), (1.0202482, 10, -0.3269024), (-0.007395224, 10, -0.89779204), (-0.8679028, 10, -0.09685968), (-0.37208238, 10, 0.9690334), (0.113545395, 0, 0.094867714), (0.113545395, 10, 0.094867714)],
        181: [(0.78698254, 0, 0.96385044), (1.1264296, 0, -0.16164581), (0.16091388, 0, -0.8322765), (-0.7752546, 0, -0.12125293), (-0.38832292, 0, 0.9888146), (0.78698254, 10, 0.96385044), (1.1264296, 10, -0.16164581), (0.16091388, 10, -0.8322765), (-0.7752546, 10, -0.12125293), (-0.38832292, 10, 0.9888146), (0.1821497, 0, 0.16749795), (0.1821497, 10, 0.16749795)],
        182: [(0.76577675, 0, 1.098977), (1.2158902, 0, 0.012991632), (0.32214937, 0, -0.7506795), (-0.68032604, 0, -0.1366689), (-0.40614927, 0, 1.0064816), (0.76577675, 10, 1.098977), (1.2158902, 10, 0.012991632), (0.32214937, 10, -0.7506795), (-0.68032604, 10, -0.1366689), (-0.40614927, 10, 1.0064816), (0.24346818, 0, 0.24622037), (0.24346818, 10, 0.24622037)],
        183: [(0.7314927, 0, 1.2309158), (1.287775, 0, 0.19529225), (0.4747391, 0, -0.65378886), (-0.5840269, 0, -0.14292635), (-0.42534447, 0, 1.0218852), (0.7314927, 10, 1.2309158), (1.287775, 10, 0.19529225), (0.4747391, 10, -0.65378886), (-0.5840269, 10, -0.14292635), (-0.42534447, 10, 1.0218852), (0.2969271, 0, 0.3302756), (0.2969271, 10, 0.3302756)],
        184: [(0.68451196, 0, 1.3583758), (1.3414049, 0, 0.3834616), (0.6171975, 0, -0.5425458), (-0.4872802, 0, -0.1399357), (-0.44567764, 0, 1.0348984), (0.68451196, 10, 1.3583758), (1.3414049, 10, 0.3834616), (0.6171975, 10, -0.5425458), (-0.4872802, 10, -0.1399357), (-0.44567764, 10, 1.0348984), (0.3420313, 0, 0.41885087), (0.3420313, 10, 0.41885087)],
        185: [(0.625343, 0, 1.4801102), (1.3762833, 0, 0.5756464), (0.7481404, 0, -0.41803494), (-0.3910135, 0, -0.12769999), (-0.4669065, 0, 1.0454183), (0.625343, 10, 1.4801102), (1.3762833, 10, 0.5756464), (0.7481404, 10, -0.41803494), (-0.3910135, 10, -0.12769999), (-0.4669065, 10, 1.0454183), (0.37836936, 0, 0.51108795), (0.37836936, 10, 0.51108795)],
        186: [(0.55461645, 0, 1.5949293), (1.3921008, 0, 0.769953), (0.8662987, 0, -0.2814737), (-0.29614934, 0, -0.10631484), (-0.48877957, 0, 1.053366), (0.55461645, 10, 1.5949293), (1.3921008, 10, 0.769953), (0.8662987, 10, -0.2814737), (-0.29614934, 10, -0.10631484), (-0.48877957, 10, 1.053366), (0.40561742, 0, 0.606092), (0.40561742, 10, 0.606092)],
        187: [(0.47307834, 0, 1.7017124), (1.388739, 0, 0.96446645), (0.97053117, 0, -0.1342001), (-0.20359613, 0, -0.07596746), (-0.51103896, 0, 1.0586889), (0.47307834, 10, 1.7017124), (1.388739, 10, 0.96446645), (0.97053117, 10, -0.1342001), (-0.20359613, 10, -0.07596746), (-0.51103896, 10, 1.0586889), (0.42354268, 0, 0.70294005), (0.42354268, 10, 0.70294005)],
        188: [(0.38158295, 0, 1.7994187), (1.3662709, 0, 1.1572695), (1.059836, 0, 0.022340585), (-0.114239104, 0, -0.036934838), (-0.5334226, 0, 1.0613599), (0.38158295, 10, 1.7994187), (1.3662709, 10, 1.1572695), (1.059836, 10, 0.022340585), (-0.114239104, 10, -0.036934838), (-0.5334226, 10, 1.0613599), (0.43200564, 0, 0.80069077), (0.43200564, 10, 0.80069077)],
        189: [(0.2810842, 0, 1.8870982), (1.3249608, 0, 1.3464618), (1.1333606, 0, 0.18661031), (-0.028931359, 0, 0.010419089), (-0.55566716, 0, 1.0613784), (0.2810842, 10, 1.8870982), (1.3249608, 10, 1.3464618), (1.1333606, 10, 0.18661031), (-0.028931359, 10, 0.010419089), (-0.55566716, 10, 1.0613784), (0.43096143, 0, 0.8983936), (0.43096143, 10, 0.8983936)],
        190: [(0.17262605, 0, 1.9639004), (1.2652612, 0, 1.5301788), (1.1904101, 0, 0.35699362), (0.051514555, 0, 0.06564703), (-0.57751065, 0, 1.0587701), (0.17262605, 10, 1.9639004), (1.2652612, 10, 1.5301788), (1.1904101, 10, 0.35699362), (0.051514555, 10, 0.06564703), (-0.57751065, 10, 1.0587701), (0.42046025, 0, 0.995098), (0.42046025, 10, 0.995098)],
        191: [(0.05733212, 0, 2.0290837), (1.1878085, 0, 1.7066104), (1.2304546, 0, 0.53181374), (0.1263348, 0, 0.12822282), (-0.59869474, 0, 1.0535866), (0.05733212, 10, 2.0290837), (1.1878085, 10, 1.7066104), (1.2304546, 10, 0.53181374), (0.1263348, 10, 0.12822282), (-0.59869474, 10, 1.0535866), (0.40064704, 0, 1.0898635), (0.40064704, 10, 1.0898635)],
        192: [(-0.06360552, 0, 2.0820224), (1.0934168, 0, 1.8740195), (1.2531338, 0, 0.70934933), (0.1948219, 0, 0.19754668), (-0.6189678, 0, 1.0459054), (-0.06360552, 10, 2.0820224), (1.0934168, 10, 1.8740195), (1.2531338, 10, 0.70934933), (0.1948219, 10, 0.19754668), (-0.6189678, 10, 1.0459054), (0.37175983, 0, 1.1817687), (0.37175983, 10, 1.1817687)],
        193: [(-0.18893829, 0, 2.122213), (0.9830695, 0, 2.0307584), (1.2582614, 0, 0.88785183), (0.2563317, 0, 0.2729512), (-0.6380869, 0, 1.0358282), (-0.18893829, 10, 2.122213), (0.9830695, 10, 2.0307584), (1.2582614, 10, 0.88785183), (0.2563317, 10, 0.2729512), (-0.6380869, 10, 1.0358282), (0.3341275, 0, 1.2699205), (0.3341275, 10, 1.2699205)],
        194: [(-0.31737357, 0, 2.1492782), (0.8579092, 0, 2.1752863), (1.2458266, 0, 1.0655628), (0.31029007, 0, 0.353708), (-0.65582085, 0, 1.0234809), (-0.31737357, 10, 2.1492782), (0.8579092, 10, 2.1752863), (1.2458266, 10, 1.0655628), (0.31029007, 10, 0.353708), (-0.65582085, 10, 1.0234809), (0.2881663, 0, 1.3534632), (0.2881663, 10, 1.3534632)],
        195: [(-0.4475876, 0, 2.1629732), (0.7192272, 0, 2.3061836), (1.2159941, 0, 1.2407314), (0.35619822, 0, 0.43903506), (-0.6719519, 0, 1.0090117), (-0.4475876, 10, 2.1629732), (0.7192272, 10, 2.3061836), (1.2159941, 10, 1.2407314), (0.35619822, 10, 0.43903506), (-0.6719519, 10, 1.0090117), (0.234376, 0, 1.431587), (0.234376, 10, 1.431587)],
        196: [(-0.5782388, 0, 2.1631854), (0.56844956, 0, 2.4221675), (1.1691025, 0, 1.411632), (0.39363807, 0, 0.5281044), (-0.6862783, 0, 0.9925899), (-0.5782388, 10, 2.1631854), (0.56844956, 10, 2.4221675), (1.1691025, 10, 1.411632), (0.39363807, 10, 0.5281044), (-0.6862783, 10, 0.9925899), (0.17333461, 0, 1.5035359), (0.17333461, 10, 1.5035359)],
        197: [(-0.707981, 0, 2.1499372), (0.40712366, 0, 2.5221033), (1.105661, 0, 1.5765815), (0.42227626, 0, 0.62005067), (-0.69861615, 0, 0.9744039), (-0.707981, 10, 2.1499372), (0.40712366, 10, 2.5221033), (1.105661, 10, 1.5765815), (0.42227626, 10, 0.62005067), (-0.69861615, 10, 0.9744039), (0.10569275, 0, 1.5686153), (0.10569275, 10, 1.5686153)],
        198: [(-0.835477, 0, 2.1233852), (0.23690212, 0, 2.605017), (1.0263444, 0, 1.7339561), (0.44186747, 0, 0.71397924), (-0.7088015, 0, 0.9546597), (-0.835477, 10, 2.1233852), (0.23690212, 10, 2.605017), (1.0263444, 10, 1.7339561), (0.44186747, 10, 0.71397924), (-0.7088015, 10, 0.9546597), (0.032167103, 0, 1.6261994), (0.032167103, 10, 1.6261994)],
        199: [(-0.959412, 0, 2.083819), (0.059526764, 0, 2.6701038), (0.9319861, 0, 1.8822073), (0.45225686, 0, 0.80897576), (-0.7166915, 0, 0.93357855), (-0.959412, 10, 2.083819), (0.059526764, 10, 2.6701038), (0.9319861, 10, 1.8822073), (0.45225686, 10, 0.80897576), (-0.7166915, 10, 0.93357855), (-0.046466745, 0, 1.6757368), (-0.046466745, 10, 1.6757368)],
    }
}

def BasisCurves "curves0" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.24614044, 0.3200975), (0.4847897, 0.19847518), (0.060164437, 0.13381039), (0.067597054, 0.22151582), (0.07560398, 0.2961392), (0.47421467, 0.0013091438), (0.18975769, 0.03896308), (0.34412727, 0.87053365), (0.11362148, 0.15725881), (0.49215853, 0.11106811)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.41253224, 0, 0.3801803), (0.41253224, -1, 0.3801803), (0.09878001, 0, -0.6484472), (0.09878001, -1, -0.6484472), (-0.8019393, 0, 0.20040144), (-0.8019393, -1, 0.20040144), (0.21067406, 10, 0.13604921), (0.21067406, 11, 0.13604921), (0.24596992, 10, -0.21621875), (0.24596992, 11, -0.21621875), (-0.27998146, 10, -0.3832432), (-0.27998146, 11, -0.3832432), (-0.18047029, 10, 0.097601436), (-0.18047029, 11, 0.097601436), (0.7127968, 8.705337, -0.42427102), (1.6638533, 8.705337, -0.73328805), (-0.45421517, 1.5725881, -0.809017), (-0.45421517, 1.5725881, -1.809017), (-0.4680706, 1.110681, 0.65992683), (-1.0558559, 1.110681, 1.4689438)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves1" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.07340788, 0.44581062), (0.03519026, 0.275062), (0.112258755, 0.20035197), (0.43753988, 0.40308207), (0.15280023, 0.45475262), (0.11827171, 0.32469863), (0.3032431, 0.4568051), (0.20508647, 0.4694195), (0.99006283, 0.54048634), (0.010554874, 0.7105088)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4572504, 0, 0.22197753), (0.4572504, -1, 0.22197753), (-0.38473922, 0, -0.5864872), (-0.38473922, -1, -0.5864872), (-0.7197301, 0, 0.12159573), (-0.7197301, -1, 0.12159573), (0.38335383, 10, 0.5620991), (0.38335383, 11, 0.5620991), (0.41261855, 10, -0.32068473), (0.41261855, 11, -0.32068473), (-0.37832513, 10, 0.0046535786), (-0.37832513, 11, 0.0046535786), (-0.28840134, 10, 0.5505124), (-0.28840134, 11, 0.5505124), (0.6622873, 4.6941953, -0.57972336), (1.6133438, 4.6941953, -0.88874036), (0.5761034, 5.404863, -0.809017), (0.5761034, 5.404863, -1.809017), (-0.010038282, 7.105088, 0.9927068), (-0.5978235, 7.105088, 1.8017237)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves2" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.14713977, 0.27918142), (0.10363345, 0.25389454), (0.4218868, 0.06160655), (0.14635086, 0.41792694), (0.35990468, 0.19488767), (0.09467515, 0.3878234), (0.40842232, 0.10735337), (0.83550173, 0.6592314), (0.21726851, 0.30225697), (0.25683272, 0.4908745)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.54560095, 0, 0.32441628), (0.54560095, -1, 0.32441628), (-0.31672135, 0, -0.603612), (-0.31672135, -1, -0.603612), (-0.73920584, 0, -0.18170425), (-0.73920584, -1, -0.18170425), (0.39747214, 10, 0.27549738), (0.39747214, 11, 0.27549738), (0.4568418, 10, -0.04645078), (0.4568418, 11, -0.04645078), (-0.42449066, 10, 0.04325022), (-0.42449066, 11, 0.04325022), (-0.3884327, 10, 0.23356281), (-0.3884327, 11, 0.23356281), (0.89129907, 6.5923142, 0.12510236), (1.8423556, 6.5923142, -0.18391466), (-0.3323708, 3.0225697, -0.809017), (-0.3323708, 3.0225697, -1.809017), (-0.24426243, 4.908745, 0.82253295), (-0.83204764, 4.908745, 1.63155)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves3" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.43354192, 0.28161335), (0.086539485, 0.18456274), (0.39024723, 0.17789654), (0.4342916, 0.4932883), (0.093569316, 0.032398563), (0.30109355, 0.22014137), (0.15123597, 0.25896397), (0.72080797, 0.44720286), (0.79295504, 0.5044435), (0.94581187, 0.84314436)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.27090344, 0, 0.52156377), (0.27090344, -1, 0.52156377), (-0.37756872, 0, -0.6597026), (-0.37756872, -1, -0.6597026), (-0.64010125, 0, -0.18226573), (-0.64010125, -1, -0.18226573), (0.4691451, 10, 0.58672607), (0.4691451, 11, 0.58672607), (0.108033106, 10, 0.0027035223), (0.108033106, 11, 0.0027035223), (-0.3863452, 10, -0.17556237), (-0.3863452, 11, -0.17556237), (-0.14383395, 10, 0.30569845), (-0.14383395, 11, 0.30569845), (0.8496341, 4.4720287, -0.0031291528), (1.8006907, 4.4720287, -0.31214616), (0.3443893, 5.044435, -0.809017), (0.3443893, 5.044435, -1.809017), (-0.8995205, 8.431443, 0.3464601), (-1.4873058, 8.431443, 1.155477)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves4" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.14658713, 0.27993047), (0.039777983, 0.15263219), (0.3008777, 0.11360731), (0.27198774, 0.16378827), (0.21932986, 0.033116654), (0.1688334, 0.32578614), (0.2800311, 0.28762865), (0.68811995, 0.7796998), (0.24865487, 0.010506396), (0.98597753, 0.21703352)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5454142, 0, 0.32380295), (0.5454142, -1, 0.32380295), (-0.45130846, 0, -0.68553495), (-0.45130846, -1, -0.68553495), (-0.73370934, 0, -0.062481083), (-0.73370934, -1, -0.062481083), (0.1557719, 10, 0.3226011), (0.1557719, 11, 0.3226011), (0.22806059, 10, 0.040984724), (0.22806059, 11, 0.040984724), (-0.40907884, 10, -0.035915636), (-0.40907884, 11, -0.035915636), (-0.26632544, 10, 0.37416303), (-0.26632544, 11, 0.37416303), (0.8377595, 7.796998, -0.039675497), (1.788816, 7.796998, -0.3486925), (-0.2954739, 0.10506396, -0.809017), (-0.2954739, 0.10506396, -1.809017), (-0.93772036, 2.1703353, 0.3187063), (-1.5255055, 2.1703353, 1.1277233)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves5" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.1432159, 0.3746545), (0.28499252, 0.49189198), (0.17975365, 0.02827476), (0.10997355, 0.37337312), (0.18615656, 0.41002026), (0.47703728, 0.044272073), (0.41740194, 0.29130107), (0.65634865, 0.5198541), (0.10859945, 0.9850017), (0.75563097, 0.12814544)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.45853254, 0, 0.29220214), (0.45853254, -1, 0.29220214), (0.0363704, 0, -0.41106802), (0.0363704, -1, -0.41106802), (-0.8588663, 0, 0.09930892), (-0.8588663, -1, 0.09930892), (0.35509896, 10, 0.2253522), (0.35509896, 11, 0.2253522), (0.41804928, 10, -0.27418783), (0.41804928, 11, -0.27418783), (-0.32250074, 10, -0.37225044), (-0.32250074, 11, -0.37225044), (-0.39697284, 10, 0.42028534), (-0.39697284, 11, 0.42028534), (0.8262179, 5.198541, -0.075196885), (1.7772744, 5.198541, -0.3842139), (-0.46011895, 9.850017, -0.809017), (-0.46011895, 9.850017, -1.809017), (-0.7186478, 1.2814544, 0.47787187), (-1.306433, 1.2814544, 1.2868888)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves6" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.1431568, 0.07963059), (0.2727347, 0.345676), (0.062461574, 0.12106555), (0.34003937, 0.35473603), (0.45862314, 0.4073972), (0.16775067, 0.07228132), (0.19469272, 0.103847116), (0.025242373, 0.34281603), (0.76420915, 0.43144307), (0.2134419, 0.4525518)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.7391731, 0, 0.3833287), (0.7391731, -1, 0.3833287), (-0.063983135, 0, -0.5293592), (-0.063983135, -1, -0.5293592), (-0.81322587, 0, 0.20177153), (-0.81322587, -1, 0.20177153), (0.33737403, 10, 0.44965884), (0.33737403, 11, 0.44965884), (0.6756386, 10, -0.18786892), (0.6756386, 11, -0.18786892), (-0.16734499, 10, -0.11337699), (-0.16734499, 11, -0.11337699), (-0.18516378, 10, 0.16401047), (-0.18516378, 11, 0.16401047), (0.59695506, 3.4281602, -0.78079516), (1.5480115, 3.4281602, -1.0898122), (0.3105965, 4.3144307, -0.809017), (0.3105965, 4.3144307, -1.809017), (-0.20299532, 4.525518, 0.8525153), (-0.79078054, 4.525518, 1.6615323)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves7" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3215689, 0.35567752), (0.437635, 0.36016667), (0.27958822, 0.12859614), (0.3871169, 0.118894584), (0.45401543, 0.303107), (0.46177235, 0.21718363), (0.30197713, 0.11173391), (0.12466278, 0.10126495), (0.4244099, 0.89617145), (0.49601588, 0.5943968)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.30695692, 0, 0.42130524), (0.30695692, -1, 0.42130524), (0.1383862, 0, -0.51763606), (0.1383862, -1, -0.51763606), (-0.727188, 0, -0.043310534), (-0.727188, -1, -0.043310534), (0.11307547, 10, 0.42385736), (0.11307547, 11, 0.42385736), (0.60995615, 10, -0.10492023), (0.60995615, 11, -0.10492023), (-0.4779769, 10, -0.30646825), (-0.4779769, 11, -0.30646825), (-0.28719732, 10, 0.20504999), (-0.28719732, 11, 0.20504999), (0.63307166, 1.0126495, -0.66963977), (1.5841281, 1.0126495, -0.97865677), (-0.08886151, 8.961715, -0.809017), (-0.08886151, 8.961715, -1.809017), (-0.47173914, 5.9439683, 0.6572615), (-1.0595244, 5.9439683, 1.4662784)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves8" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3868088, 0.4206847), (0.19869398, 0.4460083), (0.4755459, 0.36508018), (0.46371415, 0.3500956), (0.23809484, 0.46930343), (0.11942294, 0.33947274), (0.36109522, 0.0418855), (0.59754145, 0.9191978), (0.9854757, 0.100708336), (0.4277672, 0.07298312)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.18308455, 0, 0.4462966), (0.18308455, -1, 0.4462966), (-0.09204936, 0, -0.4481887), (-0.09204936, -1, -0.4481887), (-0.43109247, 0, -0.3354755), (-0.43109247, -1, -0.3354755), (0.3329607, 10, 0.57189965), (0.3329607, 11, 0.57189965), (0.50229126, 10, -0.3060991), (0.50229126, 11, -0.3060991), (-0.39305282, 10, 0.008287663), (-0.39305282, 11, 0.008287663), (-0.343422, 10, 0.15347007), (-0.343422, 11, 0.15347007), (0.8048549, 9.191978, -0.14094535), (1.7559114, 9.191978, -0.44996235), (0.5707109, 1.0070833, -0.809017), (0.5707109, 1.0070833, -1.809017), (-0.4068308, 0.7298312, 0.70442015), (-0.99461603, 0.7298312, 1.5134372)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves9" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.32841122, 0.23715536), (0.46579286, 0.1078174), (0.48138174, 0.21697003), (0.1854218, 0.47638607), (0.097918324, 0.07345859), (0.46824014, 0.1581331), (0.054859985, 0.13325152), (0.9935059, 0.7419954), (0.016391145, 0.8283005), (0.3193399, 0.70091504)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.41317073, 0, 0.46265852), (0.41317073, -1, 0.46265852), (0.023160584, 0, -0.7217909), (0.023160584, -1, -0.7217909), (-0.5698336, 0, -0.2962316), (-0.5698336, -1, -0.2962316), (0.4530701, 10, 0.3326332), (0.4530701, 11, 0.3326332), (0.13630374, 10, -0.02917082), (0.13630374, 11, -0.02917082), (-0.42561817, 10, -0.32994843), (-0.42561817, 11, -0.32994843), (-0.05217495, 10, 0.15020418), (-0.05217495, 11, 0.15020418), (0.9486974, 7.419954, 0.30175635), (1.8997539, 7.419954, -0.007260655), (-0.5685163, 8.283005, -0.809017), (-0.5685163, 8.283005, -1.809017), (-0.3037103, 7.00915, 0.7793416), (-0.8914955, 7.00915, 1.5883585)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves10" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.18037914, 0.25773993), (0.18161543, 0.24179398), (0.13678005, 0.17764567), (0.17590442, 0.37967548), (0.25805435, 0.30039108), (0.3606165, 0.29613957), (0.36532918, 0.018665211), (0.48999083, 0.20926102), (0.33683226, 0.43010163), (0.64497095, 0.7257345)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5343805, 0, 0.3540099), (0.5343805, -1, 0.3540099), (-0.23216058, 0, -0.6134016), (-0.23216058, -1, -0.6134016), (-0.7324172, 0, 0.101196714), (-0.7324172, -1, 0.101196714), (0.36109287, 10, 0.2932306), (0.36109287, 11, 0.2932306), (0.4219897, 10, -0.1632783), (0.4219897, 11, -0.1632783), (-0.49361053, 10, -0.20023273), (-0.49361053, 11, -0.20023273), (-0.3474487, 10, 0.13155814), (-0.3474487, 11, 0.13155814), (0.76578486, 2.0926101, -0.2611906), (1.7168413, 2.0926101, -0.5702076), (-0.1918152, 4.3010163, -0.809017), (-0.1918152, 4.3010163, -1.809017), (-0.61340386, 7.257345, 0.554336), (-1.201189, 7.257345, 1.363353)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves11" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.05236242, 0.42544264), (0.017565079, 0.31950727), (0.4246897, 0.06009051), (0.39852887, 0.26979443), (0.37070724, 0.15417351), (0.20353766, 0.32221624), (0.0032456545, 0.37932044), (0.41018677, 0.7624015), (0.037374843, 0.7883043), (0.6717178, 0.24073996)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.49663693, 0, 0.21372953), (0.49663693, -1, 0.21372953), (-0.3793346, 0, -0.5505302), (-0.3793346, -1, -0.5505302), (-0.7396295, 0, -0.18436953), (-0.7396295, -1, -0.18436953), (0.25658977, 10, 0.48189995), (0.25658977, 11, 0.48189995), (0.44318447, 10, -0.010174147), (0.44318447, 11, -0.010174147), (-0.42608228, 10, -0.065095134), (-0.42608228, 11, -0.065095134), (-0.003086801, 10, 0.3803234), (-0.003086801, 11, 0.3803234), (0.73679435, 7.6240153, -0.35041425), (1.6878508, 7.6240153, -0.6594313), (-0.54384845, 7.8830433, -0.809017), (-0.54384845, 7.8830433, -1.809017), (-0.6388416, 2.4073997, 0.5358544), (-1.2266269, 2.4073997, 1.3448714)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves12" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.20246539, 0.06281915), (0.042679682, 0.018046293), (0.36792323, 0.30561867), (0.16303174, 0.2438022), (0.2827024, 0.29266554), (0.33268613, 0.03343357), (0.16463485, 0.22612996), (0.46361604, 0.07056072), (0.54072845, 0.015098704), (0.43038356, 0.22086525)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6987559, 0, 0.42950496), (0.6987559, -1, 0.42950496), (-0.5270049, 0, -0.79441726), (-0.5270049, -1, -0.79441726), (-0.52673995, 0, -0.19677505), (-0.52673995, -1, -0.19677505), (0.23186968, 10, 0.23837078), (0.23186968, 11, 0.23837078), (0.44089043, 10, -0.14941154), (0.44089043, 11, -0.14941154), (-0.22734521, 10, -0.2588172), (-0.22734521, 11, -0.2588172), (-0.15657705, 10, 0.27700493), (-0.15657705, 11, 0.27700493), (0.75620365, 0.70560724, -0.29067847), (1.7072601, 0.70560724, -0.5996955), (0.047879197, 0.15098704, -0.809017), (0.047879197, 0.15098704, -1.809017), (-0.4093191, 2.2086525, 0.7026123), (-0.99710435, 2.2086525, 1.5116292)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves13" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.109378815, 0.4963189), (0.32736105, 0.49163216), (0.17674702, 0.016864972), (0.45359296, 0.39582074), (0.49787253, 0.41242963), (0.46595109, 0.32487482), (0.47195882, 0.077114284), (0.85430586, 0.50633097), (0.52328116, 0.9488945), (0.93368703, 0.5845654)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.37500378, 0, 0.23122492), (0.37500378, -1, 0.23122492), (0.08602489, 0, -0.41127822), (0.08602489, -1, -0.41127822), (-0.87080985, 0, 0.10619626), (-0.87080985, -1, 0.10619626), (0.3764479, 10, 0.5759083), (0.3764479, 11, 0.5759083), (0.715925, 10, -0.1798115), (0.715925, 11, -0.1798115), (-0.5828535, 10, -0.2765705), (-0.5828535, 11, -0.2765705), (-0.4488595, 10, 0.22295758), (-0.4488595, 11, 0.22295758), (0.89813006, 5.0633097, 0.146126), (1.8491865, 5.0633097, -0.16289102), (0.02736866, 9.488945, -0.809017), (0.02736866, 9.488945, -1.809017), (-0.88798916, 5.845654, 0.35483813), (-1.4757744, 5.845654, 1.1638552)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves14" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.4815174, 0.31417248), (0.44462577, 0.32042038), (0.38541418, 0.4167934), (0.04571023, 0.06700495), (0.48804855, 0.3331948), (0.43762624, 0.41354877), (0.48822042, 0.4386406), (0.121379875, 0.298182), (0.11374683, 0.55220556), (0.22516643, 0.79688245)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.19431049, 0, 0.5446527), (0.19431049, -1, 0.5446527), (0.12324207, 0, -0.54979146), (0.12324207, -1, -0.54979146), (-0.41465253, 0, -0.25068542), (-0.41465253, -1, -0.25068542), (0.063725494, 10, 0.0664159), (0.063725494, 11, 0.0664159), (0.6600087, 10, -0.11874495), (0.6600087, 11, -0.11874495), (-0.6505385, 10, -0.22625348), (-0.6505385, 11, -0.22625348), (-0.46432525, 10, 0.589509), (-0.46432525, 11, 0.589509), (0.6318791, 2.98182, -0.67331016), (1.5829356, 2.98182, -0.98232716), (-0.45406783, 5.5220556, -0.809017), (-0.45406783, 5.5220556, -1.809017), (-0.214146, 7.9688244, 0.8444138), (-0.80193126, 7.9688244, 1.6534308)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves15" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.49862692, 0.29275337), (0.47206485, 0.22184996), (0.4153011, 0.3307277), (0.37199914, 0.24523576), (0.22709924, 0.39814246), (0.3620196, 0.38708875), (0.24295737, 0.49978387), (0.12819351, 0.6297439), (0.10922622, 0.3471553), (0.7518327, 0.32924852)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.19840916, 0, 0.56309396), (0.19840916, -1, 0.56309396), (0.097560406, 0, -0.6295366), (0.097560406, -1, -0.6295366), (-0.48564884, 0, -0.25750425), (-0.48564884, -1, -0.25750425), (0.23323306, 10, 0.44778118), (0.23323306, 11, 0.44778118), (0.45000648, 10, -0.25192648), (0.45000648, 11, -0.25192648), (-0.5809331, 10, -0.17326301), (-0.5809331, 11, -0.17326301), (-0.2310662, 10, 0.5748618), (-0.2310662, 11, 0.5748618), (0.6343543, 6.2974386, -0.66569227), (1.5854108, 6.2974386, -0.97470933), (-0.45938212, 3.471553, -0.809017), (-0.45938212, 3.471553, -1.809017), (-0.71503544, 3.2924852, 0.48049638), (-1.3028207, 3.2924852, 1.2895133)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves16" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.49783146, 0.47046134), (0.14144154, 0.42155045), (0.15470058, 0.23626137), (0.28310362, 0.29095992), (0.20523718, 0.26885214), (0.12083576, 0.037308477), (0.13030541, 0.49229985), (0.46985584, 0.2894414), (0.7665496, 0.11340696), (0.13750643, 0.5803122)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.030155344, 0, 0.5076295), (0.030155344, -1, 0.5076295), (-0.17372961, 0, -0.46797553), (-0.17372961, -1, -0.46797553), (-0.67016035, 0, 0.06304771), (-0.67016035, -1, 0.06304771), (0.27671933, 10, 0.37301517), (0.27671933, 11, 0.37301517), (0.35321948, 10, -0.15408418), (0.35321948, 11, -0.15408418), (-0.10650795, 10, -0.08622923), (-0.10650795, 11, -0.08622923), (-0.1239278, 10, 0.5325664), (-0.1239278, 11, 0.5325664), (0.7584704, 2.894414, -0.28370216), (1.7095269, 2.894414, -0.5927192), (0.31334785, 1.1340697, -0.809017), (0.31334785, 1.1340697, -1.809017), (-0.13077638, 5.8031216, 0.9049854), (-0.7185616, 5.8031216, 1.7140024)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves17" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.1993619, 0.40653154), (0.1891721, 0.19206786), (0.20160268, 0.11529876), (0.4393925, 0.1594388), (0.42429906, 0.39997882), (0.40000772, 0.20551896), (0.458917, 0.49249297), (0.93279076, 0.3452582), (0.31417742, 0.083303176), (0.12059345, 0.43725088)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.3748176, 0, 0.32114753), (0.3748176, -1, 0.32114753), (-0.25250545, 0, -0.65363085), (-0.25250545, -1, -0.65363085), (-0.76816446, 0, 0.047989067), (-0.76816446, -1, 0.047989067), (0.15163532, 10, 0.48866183), (0.15163532, 11, 0.48866183), (0.638634, 10, -0.19247404), (0.638634, 11, -0.19247404), (-0.4305788, 10, -0.2601042), (-0.4305788, 11, -0.2601042), (-0.43645602, 10, 0.63430613), (-0.43645602, 11, 0.63430613), (0.92664135, 3.4525821, 0.2338748), (1.8776978, 3.4525821, -0.07514221), (-0.21844754, 0.8330318, -0.809017), (-0.21844754, 0.8330318, -1.809017), (-0.11469119, 4.3725085, 0.916672), (-0.70247644, 4.3725085, 1.7256889)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves18" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.42102072, 0.1215316), (0.20821886, 0.0140239345), (0.2710253, 0.0725404), (0.178014, 0.31056628), (0.43029192, 0.41279584), (0.27710846, 0.3584408), (0.48855636, 0.43951082), (0.9129617, 0.9136929), (0.4202748, 0.8310382), (0.14647609, 0.17398812)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4350586, 0, 0.56237984), (0.4350586, -1, 0.56237984), (-0.33476624, 0, -0.7976714), (-0.33476624, -1, -0.7976714), (-0.7836108, 0, -0.016414715), (-0.7836108, -1, -0.016414715), (0.2953661, 10, 0.27398425), (0.2953661, 11, 0.27398425), (0.6518673, 10, -0.20099135), (0.6518673, 11, -0.20099135), (-0.50377774, 10, -0.11342116), (-0.50377774, 11, -0.11342116), (-0.4646447, 10, 0.590483), (-0.4646447, 11, 0.590483), (0.919438, 9.136929, 0.21170522), (1.8704945, 9.136929, -0.09731179), (-0.0937226, 8.310382, -0.809017), (-0.0937226, 8.310382, -1.809017), (-0.13930704, 1.7398813, 0.8987875), (-0.72709227, 1.7398813, 1.7078046)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves19" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.11843394, 0.41456455), (0.13497402, 0.4413917), (0.46014407, 0.27025953), (0.13228866, 0.14513694), (0.46260664, 0.25728893), (0.17444351, 0.38911462), (0.14271641, 0.103657685), (0.9252805, 0.68026465), (0.44185385, 0.25215536), (0.095701836, 0.5505142)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.44414485, 0, 0.26274535), (0.44414485, -1, 0.26274535), (-0.16967025, 0, -0.4519236), (-0.16967025, -1, -0.4519236), (-0.52686733, 0, -0.2889545), (-0.52686733, -1, -0.2889545), (0.13803343, 10, 0.17713845), (0.13803343, 11, 0.17713845), (0.5911957, 10, -0.0651978), (0.5911957, 11, -0.0651978), (-0.47260532, 10, -0.02088473), (-0.47260532, 11, -0.02088473), (-0.13573137, 10, 0.14775948), (-0.13573137, 11, 0.14775948), (0.9239131, 6.8026466, 0.2254781), (1.8749696, 6.8026466, -0.08353892), (-0.06835489, 2.5215538, -0.809017), (-0.06835489, 2.5215538, -1.809017), (-0.09101786, 5.5051417, 0.9338717), (-0.6788031, 5.5051417, 1.7428887)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves20" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.2070311, 0.13906285), (0.42545232, 0.46995708), (0.08211244, 0.4167477), (0.078053296, 0.036680214), (0.023529414, 0.4031963), (0.35382676, 0.45834023), (0.17372216, 0.4090254), (0.15058677, 0.49242687), (0.80099833, 0.27989492), (0.34260732, 0.23373808)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.62190163, 0, 0.4090992), (0.62190163, -1, 0.4090992), (0.18859778, 0, -0.42881373), (0.18859778, -1, -0.42881373), (-0.52487683, 0, 0.088430375), (-0.52487683, -1, 0.088430375), (0.03488496, 10, 0.08938811), (0.03488496, 11, 0.08938811), (0.25937063, 10, -0.3189217), (0.25937063, 11, -0.3189217), (-0.6438816, 10, -0.14461695), (-0.6438816, 11, -0.14461695), (-0.16521959, 10, 0.4627085), (-0.16521959, 11, 0.4627085), (0.6424891, 4.9242687, -0.6406559), (1.5935456, 4.9242687, -0.9496729), (0.35384476, 2.7989492, -0.809017), (0.35384476, 2.7989492, -1.809017), (-0.32583892, 2.337381, 0.7632642), (-0.91362417, 2.337381, 1.5722811)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves21" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.0583825, 0.26535904), (0.47960347, 0.25921738), (0.47585478, 0.3641947), (0.3826234, 0.36894393), (0.23200734, 0.080769435), (0.2570901, 0.26320332), (0.28524107, 0.014028731), (0.8604602, 0.7232326), (0.26419595, 0.92797613), (0.7781866, 0.22372806)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.64316005, 0, 0.26735786), (0.64316005, -1, 0.26735786), (0.12838659, 0, -0.59930575), (0.12838659, -1, -0.59930575), (-0.43182242, 0, -0.33554718), (-0.43182242, -1, -0.33554718), (0.35088652, 10, 0.49663335), (0.35088652, 11, 0.49663335), (0.26812717, 10, 0.0063503664), (0.26812717, 11, 0.0063503664), (-0.401435, 10, -0.12665597), (-0.401435, 11, -0.12665597), (-0.27128038, 10, 0.102173075), (-0.27128038, 11, 0.102173075), (0.9003657, 7.232326, 0.15300675), (1.8514222, 7.232326, -0.15601026), (-0.2772043, 9.279761, -0.809017), (-0.2772043, 9.279761, -1.809017), (-0.7400995, 2.2372806, 0.46228626), (-1.3278847, 2.2372806, 1.2713033)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves22" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.14186154, 0.09094903), (0.055047538, 0.18514602), (0.319533, 0.023754122), (0.33446822, 0.2991703), (0.09056615, 0.41456074), (0.12521558, 0.13914023), (0.18617533, 0.32107282), (0.7286458, 0.70284396), (0.2717005, 0.9411292), (0.01834896, 0.5395597)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.72964054, 0, 0.3789361), (0.72964054, -1, 0.3789361), (-0.4142469, 0, -0.6592307), (-0.4142469, -1, -0.6592307), (-0.8123879, 0, -0.055572174), (-0.8123879, -1, -0.055572174), (0.28452787, 10, 0.42691693), (0.28452787, 11, 0.42691693), (0.3298062, 10, -0.30740023), (0.3298062, 11, -0.30740023), (-0.2059301, 10, -0.058304835), (-0.2059301, 11, -0.058304835), (-0.17706326, 10, 0.37860414), (-0.17706326, 11, 0.37860414), (0.85248137, 7.02844, 0.0056337896), (1.8035378, 7.02844, -0.30338323), (-0.26838216, 9.411292, -0.809017), (-0.26838216, 9.411292, -1.809017), (-0.017450899, 5.3955975, 0.9873212), (-0.6052361, 5.3955975, 1.7963382)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves23" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.48397553, 0.48875692), (0.16629967, 0.34254232), (0.19806765, 0.39846566), (0.443404, 0.44365096), (0.24150844, 0.2824476), (0.38450366, 0.13450432), (0.14845863, 0.007386191), (0.4653393, 0.99203706), (0.35337657, 0.9070536), (0.35263112, 0.8927134)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.025933, 0, 0.49240166), (0.025933, -1, 0.49240166), (-0.19094694, 0, -0.53189445), (-0.19094694, -1, -0.53189445), (-0.5001409, 0, -0.03556202), (-0.5001409, -1, -0.03556202), (0.42193714, 10, 0.58049965), (0.42193714, 11, 0.58049965), (0.3957067, 10, -0.1538747), (0.3957067, 11, -0.1538747), (-0.35392678, 10, -0.26950586), (-0.35392678, 11, -0.26950586), (-0.14119256, 10, 0.05326243), (-0.14119256, 11, 0.05326243), (0.7568297, 9.92037, -0.2887518), (1.7078862, 9.92037, -0.59776884), (-0.17236617, 9.070536, -0.809017), (-0.17236617, 9.070536, -1.809017), (-0.33537215, 8.9271345, 0.7563379), (-0.9231574, 8.9271345, 1.565355)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves24" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.47229123, 0.35149112), (0.15151772, 0.48926175), (0.3286275, 0.037885427), (0.47951025, 0.36294007), (0.19507603, 0.13326553), (0.06191804, 0.44175693), (0.4321548, 0.4080786), (0.04932971, 0.5665779), (0.26422492, 0.9761742), (0.25485063, 0.24626443)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.16759296, 0, 0.5267455), (0.16759296, -1, 0.5267455), (-0.12208463, 0, -0.4131959), (-0.12208463, -1, -0.4131959), (-0.7956444, 0, -0.070106946), (-0.7956444, -1, -0.070106946), (0.34517655, 10, 0.5916649), (0.34517655, 11, 0.5916649), (0.26385984, 10, -0.047532268), (0.26385984, 11, -0.047532268), (-0.45653033, 10, 0.08641766), (-0.45653033, 11, 0.08641766), (-0.41100365, 10, 0.5416218), (-0.41100365, 11, 0.5416218), (0.6057053, 5.665779, -0.7538647), (1.5567619, 5.665779, -1.0628817), (-0.27717024, 9.761742, -0.809017), (-0.27717024, 9.761742, -1.809017), (-0.24237736, 2.4626443, 0.82390255), (-0.8301626, 2.4626443, 1.6329195)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves25" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3609145, 0.11150492), (0.38298464, 0.2203868), (0.16238575, 0.124638535), (0.45279473, 0.22243877), (0.10776929, 0.2394023), (0.38949993, 0.48883632), (0.2937485, 0.43782127), (0.5922848, 0.19886938), (0.40576595, 0.5610956), (0.9634499, 0.18799172)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.501759, 0, 0.52394587), (0.501759, -1, 0.52394587), (-0.008019681, 0, -0.6307203), (-0.008019681, -1, -0.6307203), (-0.77352816, 0, 0.08894879), (-0.77352816, -1, 0.08894879), (0.21155185, 10, 0.5215321), (0.21155185, 11, 0.5215321), (0.24321182, 10, -0.16037798), (0.24321182, 11, -0.16037798), (-0.69385326, 10, -0.16405334), (-0.69385326, 11, -0.16405334), (-0.27937144, 10, 0.52859455), (-0.27937144, 11, 0.52859455), (0.8029453, 1.9886938, -0.14682248), (1.7540019, 1.9886938, -0.4558395), (-0.11077877, 5.6109557, -0.809017), (-0.11077877, 5.6109557, -1.809017), (-0.9162953, 1.8799173, 0.3342725), (-1.5040805, 1.8799173, 1.1432896)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves26" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3260468, 0.050458208), (0.36148182, 0.037053287), (0.36028603, 0.07652783), (0.08349358, 0.1428753), (0.11493827, 0.4613288), (0.15947063, 0.0019395321), (0.30794752, 0.1382807), (0.7986974, 0.1347239), (0.02824516, 0.6365507), (0.26091713, 0.7529198)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.592979, 0, 0.51871735), (0.592979, -1, 0.51871735), (-0.14105852, 0, -0.7790403), (-0.14105852, -1, -0.7790403), (-0.7473927, 0, -0.11744341), (-0.7473927, -1, -0.11744341), (0.13588248, 10, 0.12764448), (0.13588248, 11, 0.12764448), (0.38047504, 10, -0.337705), (0.38047504, 11, -0.337705), (-0.09557909, 10, -0.12841511), (-0.09557909, 11, -0.12841511), (-0.2928755, 10, 0.23344171), (-0.2928755, 11, 0.23344171), (0.8779291, 1.347239, 0.08395384), (1.8289856, 1.347239, -0.22506317), (-0.55458105, 6.365507, -0.809017), (-0.55458105, 6.365507, -1.809017), (-0.24814694, 7.5291977, 0.8197107), (-0.8359322, 7.5291977, 1.6287277)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves27" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.28954166, 0.48787823), (0.38480058, 0.23943776), (0.36694053, 0.2649254), (0.3193094, 0.43523198), (0.1709311, 0.07035814), (0.072064094, 0.19432741), (0.19201796, 0.43851984), (0.25737152, 0.31053862), (0.9705977, 0.50866103), (0.030168515, 0.35014048)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.21168627, 0, 0.35832268), (0.21168627, -1, 0.35832268), (0.005312937, 0, -0.6153078), (0.005312937, -1, -0.6153078), (-0.5657985, 0, -0.18310145), (-0.5657985, -1, -0.18310145), (0.4139302, 10, 0.4538035), (0.4139302, 11, 0.4538035), (0.20392062, 10, -0.0041003176), (0.20392062, 11, -0.0041003176), (-0.22717457, 10, 0.0017493971), (-0.22717457, 11, 0.0017493971), (-0.18261994, 10, 0.49785665), (-0.18261994, 11, 0.49785665), (0.6812809, 3.1053863, -0.5212669), (1.6323375, 3.1053863, -0.83028394), (0.55322075, 5.0866103, -0.809017), (0.55322075, 5.0866103, -1.809017), (-0.028691964, 3.5014048, 0.97915405), (-0.6164772, 3.5014048, 1.788171)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves28" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.23723055, 0.47005287), (0.22589093, 0.3278486), (0.32777816, 0.040630892), (0.1644415, 0.39542526), (0.30338803, 0.097920775), (0.41388568, 0.44031596), (0.058126096, 0.06576731), (0.01405562, 0.8119239), (0.10540773, 0.5840438), (0.5077159, 0.9290833)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.27839002, 0, 0.32768494), (0.27839002, -1, 0.32768494), (-0.12952995, 0, -0.5437819), (-0.12952995, -1, -0.5437819), (-0.7933419, 0, -0.070005774), (-0.7933419, -1, -0.070005774), (0.37607178, 10, 0.28663462), (0.37607178, 11, 0.28663462), (0.34609553, 10, 0.014532486), (0.34609553, 11, 0.014532486), (-0.66204125, 10, -0.19877543), (-0.66204125, 11, -0.19877543), (-0.055281203, 10, 0.08372926), (-0.055281203, 11, 0.08372926), (0.5928913, 8.11924, -0.79330236), (1.5439478, 8.11924, -1.1023194), (-0.46387103, 5.840438, -0.809017), (-0.46387103, 5.840438, -1.809017), (-0.48286653, 9.2908325, 0.64917696), (-1.0706518, 9.2908325, 1.4581939)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves29" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.125996, 0.22407243), (0.1791541, 0.4423664), (0.31313217, 0.1256765), (0.263423, 0.16624205), (0.15871799, 0.30393448), (0.38998133, 0.36617172), (0.38721293, 0.31877297), (0.36834726, 0.7939889), (0.5027454, 0.9230422), (0.6469091, 0.11343981)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6181217, 0, 0.3268359), (0.6181217, -1, 0.3268359), (-0.11716054, 0, -0.45113507), (-0.11716054, -1, -0.45113507), (-0.71777916, 0, -0.07991158), (-0.71777916, -1, -0.07991158), (0.15810558, 10, 0.3147946), (0.15810558, 11, 0.3147946), (0.32959798, 10, -0.1968416), (0.32959798, 11, -0.1968416), (-0.5774753, 10, -0.20234823), (-0.5774753, 11, -0.20234823), (-0.36826137, 10, 0.43842834), (-0.36826137, 11, 0.43842834), (0.7215952, 7.939889, -0.39719224), (1.6726518, 7.939889, -0.70620924), (0.0032273869, 9.230421, -0.809017), (0.0032273869, 9.230421, -1.809017), (-0.61524713, 1.1343981, 0.5529968), (-1.2030324, 1.1343981, 1.3620138)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves30" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.33173862, 0.36782905), (0.31056446, 0.31740484), (0.06190913, 0.25915793), (0.32903773, 0.07443483), (0.18861493, 0.4126153), (0.2449537, 0.03894825), (0.31421894, 0.41326997), (0.26084322, 0.92920476), (0.657615, 0.9491936), (0.31876102, 0.6975409)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.2857281, 0, 0.42457733), (0.2857281, -1, 0.42457733), (-0.036128975, 0, -0.55223113), (-0.036128975, -1, -0.55223113), (-0.6820929, 0, 0.15971628), (-0.6820929, -1, 0.15971628), (0.070791736, 10, 0.35203937), (0.070791736, 11, 0.35203937), (0.42191267, 10, -0.27552757), (0.42191267, 11, -0.27552757), (-0.18102217, 10, -0.18613605), (-0.18102217, 11, -0.18613605), (-0.29884, 10, 0.51036894), (-0.29884, 11, 0.51036894), (0.6825421, 9.2920475, -0.5173854), (1.6335986, 9.2920475, -0.8264024), (0.18528755, 9.491936, -0.809017), (0.18528755, 9.491936, -1.809017), (-0.30315977, 6.9754086, 0.7797415), (-0.890945, 6.9754086, 1.5887586)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves31" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.045908395, 0.29665396), (0.0813468, 0.14232129), (0.28315192, 0.34181622), (0.18225203, 0.21751283), (0.42829075, 0.2636409), (0.3763093, 0.09694495), (0.37890494, 0.14719102), (0.83128965, 0.9749231), (0.07106747, 0.507419), (0.9589632, 0.21211256)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.62526035, 0, 0.24906781), (0.62526035, -1, 0.24906781), (-0.40850198, 0, -0.6938767), (-0.40850198, -1, -0.6938767), (-0.523109, 0, -0.113183506), (-0.523109, -1, -0.113183506), (0.206867, 10, 0.2494672), (0.206867, 11, 0.2494672), (0.562293, 10, -0.08094086), (0.562293, 11, -0.08094086), (-0.31338918, 10, -0.274483), (-0.31338918, 11, -0.274483), (-0.36036003, 10, 0.2642791), (-0.36036003, 11, 0.2642791), (0.8897689, 9.74923, 0.1203931), (1.8408254, 9.74923, -0.18862392), (-0.50424045, 5.07419, -0.809017), (-0.50424045, 5.07419, -1.809017), (-0.91202825, 2.1211257, 0.33737272), (-1.4998134, 2.1211257, 1.1463897)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves32" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.1891356, 0.35122487), (0.40067273, 0.33347765), (0.36291018, 0.33404732), (0.09555622, 0.31593984), (0.34967127, 0.030807469), (0.34689212, 0.24045889), (0.0023792512, 0.34288403), (0.7715921, 0.8669949), (0.036689848, 0.5947591), (0.42445475, 0.8978067)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4371432, 0, 0.33117202), (0.4371432, -1, 0.33117202), (0.07924701, 0, -0.5392279), (0.07924701, -1, -0.5392279), (-0.5015238, 0, -0.19995524), (-0.5015238, -1, -0.19995524), (0.30047664, 10, 0.19318701), (0.30047664, 11, 0.19318701), (0.35066533, 10, 0.083130606), (0.35066533, 11, 0.083130606), (-0.43258807, 10, -0.20633575), (-0.43258807, 11, -0.20633575), (-0.0022628026, 10, 0.34361926), (-0.0022628026, 11, 0.34361926), (0.8680825, 8.66995, 0.05364919), (1.819139, 8.66995, -0.25536782), (-0.5446537, 5.9475913, -0.809017), (-0.5446537, 5.9475913, -1.809017), (-0.40368047, 8.978067, 0.70670897), (-0.9914657, 8.978067, 1.515726)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves33" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.18495587, 0.13276735), (0.21924485, 0.17820653), (0.26188785, 0.20291378), (0.3293496, 0.4747317), (0.24549419, 0.2572121), (0.4516505, 0.33931544), (0.02894686, 0.37542897), (0.42534727, 0.39269826), (0.41962025, 0.6579314), (0.46144027, 0.7664542)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6488838, 0, 0.395791), (0.6488838, -1, 0.395791), (-0.2253003, 0, -0.6648449), (-0.2253003, -1, -0.6648449), (-0.66293776, 0, -0.04648631), (-0.66293776, -1, -0.04648631), (0.4514967, 10, 0.47604978), (0.4514967, 11, 0.47604978), (0.38466436, 10, -0.1322271), (0.38466436, 11, -0.1322271), (-0.5881817, 10, -0.2605387), (-0.5881817, 11, -0.2605387), (-0.0275301, 10, 0.38437402), (-0.0275301, 11, 0.38437402), (0.7423017, 3.9269826, -0.3334643), (1.6933582, 3.9269826, -0.6424813), (-0.09449207, 6.579314, -0.809017), (-0.09449207, 6.579314, -1.809017), (-0.43885577, 7.664542, 0.68115264), (-1.026641, 7.664542, 1.4901696)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves34" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.12368321, 0.1573495), (0.22361599, 0.27921152), (0.12828298, 0.08124142), (0.40292433, 0.069584824), (0.09842295, 0.023394851), (0.17370872, 0.06130831), (0.07167166, 0.41441143), (0.2990427, 0.09175659), (0.29750705, 0.3518555), (0.87287503, 0.33572838)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6837785, 0, 0.3458563), (0.6837785, -1, 0.3458563), (-0.16079248, 0, -0.5831301), (-0.16079248, -1, -0.5831301), (-0.8271898, 0, 0.14048728), (-0.8271898, -1, 0.14048728), (0.0661791, 10, 0.4244272), (0.0661791, 11, 0.4244272), (0.10735694, 10, 0.011487535), (0.10735694, 11, 0.011487535), (-0.1604111, 10, -0.12158801), (-0.1604111, 11, -0.12158801), (-0.0681638, 10, 0.4365592), (-0.0681638, 11, 0.4365592), (0.6964189, 0.9175659, -0.4746771), (1.6474754, 0.9175659, -0.7836941), (-0.23804474, 3.5185547, -0.809017), (-0.23804474, 3.5185547, -1.809017), (-0.8301535, 3.3572838, 0.3968582), (-1.4179387, 3.3572838, 1.2058752)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves35" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.003012148, 0.21534437), (0.31672224, 0.4340769), (0.2489932, 0.10567798), (0.28845167, 0.22946107), (0.10577962, 0.37320256), (0.23546965, 0.26607573), (0.4867668, 0.37723204), (0.37264493, 0.60718435), (0.25030458, 0.05199493), (0.23956002, 0.61570066)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.74338716, 0, 0.24455327), (0.74338716, -1, 0.24455327), (0.03968807, 0, -0.4578414), (0.03968807, -1, -0.4578414), (-0.7600987, 0, -0.002022156), (-0.7600987, -1, -0.002022156), (0.21823044, 10, 0.35935903), (0.21823044, 11, 0.35935903), (0.31996536, 10, -0.26923952), (0.31996536, 11, -0.26923952), (-0.39145866, 10, -0.10827703), (-0.39145866, 11, -0.10827703), (-0.46294275, 10, 0.52765125), (-0.46294275, 11, 0.52765125), (0.72315645, 6.071843, -0.3923873), (1.6742129, 6.071843, -0.70140433), (-0.29353458, 0.5199493, -0.809017), (-0.29353458, 0.5199493, -1.809017), (-0.22783513, 6.1570067, 0.83446807), (-0.81562036, 6.1570067, 1.6434851)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves36" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.010530122, 0.40003943), (0.4486846, 0.14227732), (0.35921425, 0.08107815), (0.4785237, 0.15097855), (0.2782749, 0.32764688), (0.30609342, 0.22024769), (0.0154289855, 0.3697558), (0.8229708, 0.40193853), (0.30254337, 0.8624855), (0.8958171, 0.24900453)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5605817, 0, 0.19267415), (0.5605817, -1, 0.19267415), (0.023303635, 0, -0.6939122), (0.023303635, -1, -0.6939122), (-0.7434544, 0, -0.117651284), (-0.7434544, -1, -0.117651284), (0.14358914, 10, 0.5251786), (0.14358914, 11, 0.5251786), (0.45724118, 10, -0.17908022), (0.45724118, 11, -0.17908022), (-0.38938522, 10, -0.17957452), (-0.38938522, 11, -0.17957452), (-0.014673838, 10, 0.37452364), (-0.014673838, 11, 0.37452364), (0.88674694, 4.0193853, 0.11109238), (1.8378035, 4.0193853, -0.19792464), (-0.23212418, 8.624855, -0.809017), (-0.23212418, 8.624855, -1.809017), (-0.8519727, 2.4900453, 0.38100561), (-1.439758, 2.4900453, 1.1900226)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves37" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.2889601, 0.33455032), (0.38611782, 0.37557122), (0.14182714, 0.4894848), (0.42513928, 0.32062674), (0.43604684, 0.24520266), (0.088103235, 0.39285114), (0.49769294, 0.04429915), (0.8508886, 0.10548477), (0.86105514, 0.9419684), (0.5032765, 0.54101986)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.35806286, 0, 0.40530178), (0.35806286, -1, 0.40530178), (0.08687867, 0, -0.5051735), (0.08687867, -1, -0.5051735), (-0.4340071, 0, -0.0008096836), (-0.4340071, -1, -0.0008096836), (0.30493417, 10, 0.5242184), (0.30493417, 11, 0.5242184), (0.5588317, 10, -0.063627236), (0.5588317, 11, -0.063627236), (-0.42540944, 10, 0.050120667), (-0.42540944, 11, 0.050120667), (-0.47333413, 10, 0.19809474), (-0.47333413, 11, 0.19809474), (0.8968887, 1.0548477, 0.14230537), (1.8479452, 1.0548477, -0.16671164), (0.42444575, 9.419684, -0.809017), (0.42444575, 9.419684, -1.809017), (-0.47864443, 5.4101987, 0.6522445), (-1.0664296, 5.4101987, 1.4612615)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves38" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.30353382, 0.43633044), (0.3700465, 0.36836082), (0.056826312, 0.02819475), (0.46981725, 0.46963784), (0.45608282, 0.48080084), (0.3460694, 0.42775235), (0.281314, 0.10575589), (0.94813174, 0.16729343), (0.9239863, 0.7170224), (0.4792355, 0.22394118)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.2474038, 0, 0.38392016), (0.2474038, -1, 0.38392016), (0.06374753, 0, -0.51100683), (0.06374753, -1, -0.51100683), (-0.90359837, 0, 0.2367706), (-0.90359837, -1, 0.2367706), (0.4466521, 10, 0.6149433), (0.4466521, 11, 0.6149433), (0.7163682, 10, -0.24803871), (0.7163682, 11, -0.24803871), (-0.61023116, 10, -0.14779328), (-0.61023116, 11, -0.14779328), (-0.2675455, 10, 0.19268669), (-0.2675455, 11, 0.19268669), (0.93221426, 1.6729342, 0.2510265), (1.8832707, 1.6729342, -0.057990503), (0.4984258, 7.170224, -0.809017), (0.4984258, 7.170224, -1.809017), (-0.45578006, 2.2394118, 0.66885644), (-1.0435653, 2.2394118, 1.4778734)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves39" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.43687248, 0.48815402), (0.21618947, 0.13340083), (0.1637174, 0.4885037), (0.095549434, 0.23441222), (0.014120894, 0.024938973), (0.11913509, 0.3840557), (0.018609155, 0.36815843), (0.8488263, 0.22276354), (0.40799946, 0.2819932), (0.92418116, 0.4235913)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.07130403, 0, 0.46004057), (0.07130403, -1, 0.46004057), (-0.25522825, 0, -0.70109344), (-0.25522825, -1, -0.70109344), (-0.42698807, 0, -0.024980564), (-0.42698807, -1, -0.024980564), (0.22293927, 10, 0.1679868), (0.22293927, 11, 0.1679868), (0.028088529, 10, -0.015812457), (0.028088529, 11, -0.015812457), (-0.43528455, 10, 0.022297435), (-0.43528455, 11, 0.022297435), (-0.017698359, 10, 0.37390897), (-0.017698359, 11, 0.37390897), (0.89613944, 2.2276354, 0.13999963), (1.847196, 2.2276354, -0.16901739), (-0.10815314, 2.819932, -0.809017), (-0.10815314, 2.819932, -1.809017), (-0.8789485, 4.235913, 0.36140653), (-1.4667338, 4.235913, 1.1704235)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves40" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.22150996, 0.3983828), (0.4705727, 0.07314678), (0.37365663, 0.37030154), (0.4831356, 0.10247723), (0.4305673, 0.16507877), (0.12575944, 0.17567977), (0.32233462, 0.10016495), (0.90030587, 0.3429078), (0.49245492, 0.8462904), (0.67596996, 0.0929781)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.36150345, 0, 0.33896956), (0.36150345, -1, 0.33896956), (0.008400731, 0, -0.74984), (0.008400731, -1, -0.74984), (-0.46314013, 0, -0.22317328), (-0.46314013, -1, -0.22317328), (0.09746164, 10, 0.5148028), (0.09746164, 11, 0.5148028), (0.50652474, 10, -0.0004989135), (0.50652474, 11, -0.0004989135), (-0.24100094, 10, -0.047453485), (-0.24100094, 11, -0.047453485), (-0.30655843, 10, 0.19977182), (-0.30655843, 11, 0.19977182), (0.9148405, 3.4290779, 0.19755559), (1.865897, 3.4290779, -0.11146143), (-0.008869795, 8.462904, -0.809017), (-0.008869795, 8.462904, -1.809017), (-0.6428857, 0.929781, 0.53291625), (-1.2306709, 0.929781, 1.3419333)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves41" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.06437709, 0.44698498), (0.29081425, 0.377856), (0.27083144, 0.2691056), (0.3877682, 0.47903985), (0.3937443, 0.08183458), (0.10136787, 0.41577995), (0.211283, 0.44228792), (0.3217158, 0.4601842), (0.21406792, 0.9959089), (0.2869225, 0.17178728)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4647223, 0, 0.21537453), (0.4647223, -1, 0.21537453), (-0.023814416, 0, -0.5033251), (-0.023814416, -1, -0.5033251), (-0.5967366, 0, -0.076939955), (-0.5967366, -1, -0.076939955), (0.455594, 10, 0.5357997), (0.455594, 11, 0.5357997), (0.42257425, 10, 0.055468123), (0.42257425, 11, 0.055468123), (-0.45501277, 10, 0.046474744), (-0.45501277, 11, 0.046474744), (-0.20094207, 10, 0.50757796), (-0.20094207, 11, 0.50757796), (0.70465535, 4.601842, -0.4493278), (1.6557119, 4.601842, -0.7583448), (-0.33613333, 9.959089, -0.809017), (-0.33613333, 9.959089, -1.809017), (-0.27287954, 1.7178727, 0.8017414), (-0.8606648, 1.7178727, 1.6107584)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves42" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.33124235, 0.12952967), (0.08485057, 0.10480721), (0.39587015, 0.20414987), (0.269173, 0.3651736), (0.118793465, 0.31946647), (0.34988397, 0.00003741338), (0.14161377, 0.4624734), (0.66665417, 0.31062055), (0.5991808, 0.51750755), (0.7071247, 0.4283714)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5128363, 0, 0.49787298), (0.5128363, -1, 0.49787298), (-0.4264333, 0, -0.7242262), (-0.4264333, -1, -0.7242262), (-0.6130902, 0, -0.19666506), (-0.6130902, -1, -0.19666506), (0.34730074, 10, 0.38201785), (0.34730074, 11, 0.38201785), (0.30075696, 10, -0.2217446), (0.30075696, 11, -0.2217446), (-0.20569222, 10, -0.2830505), (-0.20569222, 11, -0.2830505), (-0.1346827, 10, 0.50623447), (-0.1346827, 11, 0.50623447), (0.82996154, 3.1062055, -0.063674994), (1.781018, 3.1062055, -0.37269202), (0.116594076, 5.1750755, -0.809017), (0.116594076, 5.1750755, -1.809017), (-0.6725156, 4.283714, 0.51138884), (-1.2603008, 4.283714, 1.3204058)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves43" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.44832578, 0.099759765), (0.47457716, 0.48946878), (0.29636624, 0.41883147), (0.32714996, 0.29977235), (0.4895649, 0.2052), (0.23784527, 0.15961783), (0.38839486, 0.15048303), (0.9011209, 0.1635004), (0.6126647, 0.778972), (0.9592189, 0.3885818)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4297962, 0, 0.587975), (0.4297962, -1, 0.587975), (0.2578162, 0, -0.41302845), (0.2578162, -1, -0.41302845), (-0.4450628, 0, -0.15175657), (-0.4450628, -1, -0.15175657), (0.28510046, 10, 0.4197847), (0.28510046, 11, 0.4197847), (0.5862174, 10, -0.014726421), (0.5862174, 11, -0.014726421), (-0.29160753, 10, -0.14309624), (-0.29160753, 11, -0.14309624), (-0.36938548, 10, 0.27050364), (-0.36938548, 11, 0.27050364), (0.9151366, 1.6350039, 0.1984668), (1.866193, 1.6350039, -0.110550225), (0.1324453, 7.7897205, -0.809017), (0.1324453, 7.7897205, -1.809017), (-0.91227144, 3.8858182, 0.33719605), (-1.5000566, 3.8858182, 1.146213)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves44" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.14404602, 0.39868838), (0.22694564, 0.32326996), (0.18450888, 0.23896344), (0.37231, 0.006676836), (0.40143275, 0.2933858), (0.23275879, 0.4400556), (0.41046944, 0.3032006), (0.27644372, 0.8457634), (0.035141844, 0.13525338), (0.05799247, 0.25120115)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.43488544, 0, 0.28534886), (0.43488544, -1, 0.28534886), (-0.13098133, 0, -0.5474861), (-0.13098133, -1, -0.5474861), (-0.656762, 0, 0.028886043), (-0.656762, -1, 0.028886043), (0.0063500484, 10, 0.37437326), (0.0063500484, 11, 0.37437326), (0.5542331, 10, -0.11330457), (0.5542331, 11, -0.11330457), (-0.5553299, 10, -0.05232115), (-0.5553299, 11, -0.05232115), (-0.39037964, 10, 0.43004265), (-0.39037964, 11, 0.43004265), (0.6882093, 8.457634, -0.49994352), (1.6392658, 8.457634, -0.80896056), (-0.5464735, 1.3525339, -0.809017), (-0.5464735, 1.3525339, -1.809017), (-0.055154115, 2.5120115, 0.9599282), (-0.6429393, 2.5120115, 1.7689452)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves45" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.013953981, 0.25908977), (0.17892863, 0.48227948), (0.2714245, 0.3566395), (0.4431256, 0.14623557), (0.4135533, 0.15457015), (0.03581014, 0.3394153), (0.333805, 0.37873402), (0.6476403, 0.02910991), (0.72236717, 0.06468924), (0.9933563, 0.30567652)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6913765, 0, 0.23859581), (0.6913765, -1, 0.23859581), (-0.09396526, 0, -0.4188447), (-0.09396526, -1, -0.4188447), (-0.5132715, 0, -0.10465248), (-0.5132715, -1, -0.10465248), (0.13907829, 10, 0.4883149), (0.13907829, 11, 0.4883149), (0.48416662, 10, 0.0027451238), (0.48416662, 11, 0.0027451238), (-0.3438518, 10, 0.075914085), (-0.3438518, 11, 0.075914085), (-0.31746742, 10, 0.48188543), (-0.31746742, 11, 0.48188543), (0.8230544, 0.2910991, -0.08493313), (1.7741109, 0.2910991, -0.39395013), (0.2614083, 0.6468924, -0.809017), (0.2614083, 0.6468924, -1.809017), (-0.944738, 3.056765, 0.3136077), (-1.5325233, 3.056765, 1.1226248)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves46" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.33682057, 0.49111256), (0.30210286, 0.34325996), (0.3433871, 0.27126858), (0.06912054, 0.31243622), (0.03619964, 0.104680896), (0.20755416, 0.25731385), (0.23132509, 0.1391256), (0.06379972, 0.768894), (0.4417976, 0.93956923), (0.8623143, 0.9424503)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.16364531, 0, 0.38999215), (0.16364531, -1, 0.38999215), (-0.030878915, 0, -0.5313139), (-0.030878915, -1, -0.5313139), (-0.5683221, 0, -0.15872803), (-0.5683221, -1, -0.15872803), (0.2971445, 10, 0.16566864), (0.2971445, 11, 0.16566864), (0.095957786, 10, -0.07350232), (0.095957786, 11, -0.07350232), (-0.3667173, 10, -0.08840049), (-0.3667173, 11, -0.08840049), (-0.22000323, 10, 0.21060899), (-0.22000323, 11, 0.21060899), (0.61096185, 7.6889405, -0.73768675), (1.5620184, 7.6889405, -1.0467038), (-0.068421006, 9.395693, -0.809017), (-0.068421006, 9.395693, -1.809017), (-0.82010967, 9.424502, 0.4041555), (-1.4078948, 9.424502, 1.2131726)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves47" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.21864246, 0.37287366), (0.22369364, 0.036974117), (0.49755087, 0.07601018), (0.21877985, 0.05852198), (0.038250025, 0.30791554), (0.42297828, 0.47302666), (0.37043065, 0.32047114), (0.07909872, 0.2220381), (0.6405775, 0.87025154), (0.041461255, 0.96005785)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.38849127, 0, 0.34487092), (0.38849127, -1, 0.34487092), (-0.30308476, 0, -0.7791043), (-0.30308476, -1, -0.7791043), (-0.6980206, 0, -0.27075025), (-0.6980206, -1, -0.27075025), (0.05565771, 10, 0.23686413), (0.05565771, 11, 0.23686413), (0.21736616, 10, -0.23728901), (0.21736616, 11, -0.23728901), (-0.6984955, 10, -0.19602336), (-0.6984955, 11, -0.19602336), (-0.3523005, 10, 0.43494052), (-0.3523005, 11, 0.43494052), (0.6165195, 2.220381, -0.72058195), (1.567576, 2.220381, -1.029599), (0.16525875, 8.702516, -0.809017), (0.16525875, 8.702516, -1.809017), (-0.039431997, 9.600578, 0.97135097), (-0.62721723, 9.600578, 1.780368)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves48" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.18713449, 0.10706898), (0.3452668, 0.29763547), (0.3341037, 0.15875962), (0.14243646, 0.46457133), (0.052891042, 0.48648584), (0.17494021, 0.21553367), (0.45049372, 0.16106679), (0.2883032, 0.8606118), (0.045339942, 0.33788055), (0.29737994, 0.40662834)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6712524, 0, 0.40523762), (0.6712524, -1, 0.40523762), (-0.0069540725, 0, -0.56822485), (-0.0069540725, -1, -0.56822485), (-0.6786969, 0, -0.113581724), (-0.6786969, -1, -0.113581724), (0.4418336, 10, 0.28599688), (0.4418336, 11, 0.28599688), (0.33625156, 10, -0.3772311), (0.33625156, 11, -0.3772311), (-0.30781198, 10, -0.07492603), (-0.30781198, 11, -0.07492603), (-0.42844498, 10, 0.300277), (-0.42844498, 11, 0.300277), (0.6925175, 8.606118, -0.48668423), (1.643574, 8.606118, -0.79570127), (-0.5344849, 3.3788056, -0.809017), (-0.5344849, 3.3788056, -1.809017), (-0.28282514, 4.066283, 0.7945155), (-0.87061036, 4.066283, 1.6035326)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves49" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.23777549, 0.17987351), (0.20798995, 0.2036852), (0.38025704, 0.4630458), (0.42464897, 0.3209989), (0.010534949, 0.4812643), (0.055331137, 0.3644504), (0.106445186, 0.09698951), (0.046284076, 0.047276307), (0.9904732, 0.8113161), (0.37481368, 0.108094744)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.55384874, 0, 0.41773185), (0.55384874, -1, 0.41773185), (-0.22355525, 0, -0.6442322), (-0.22355525, -1, -0.6442322), (-0.37253734, 0, -0.25921234), (-0.37253734, -1, -0.25921234), (0.3052881, 10, 0.5238431), (0.3052881, 11, 0.5238431), (0.29289937, 10, -0.38609552), (0.29289937, 11, -0.38609552), (-0.37913576, 10, 0.06785753), (-0.37913576, 11, 0.06785753), (-0.10123539, 10, 0.12988289), (-0.10123539, 11, 0.12988289), (0.60459894, 0.47276306, -0.75726986), (1.5556555, 0.47276306, -1.0662868), (0.5765858, 8.113161, -0.809017), (0.5765858, 8.113161, -1.809017), (-0.35646898, 1.0809474, 0.7410101), (-0.9442542, 1.0809474, 1.5500271)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves50" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.31027722, 0.2236839), (0.0011856755, 0.30340263), (0.29426378, 0.42271492), (0.26291713, 0.45476663), (0.086428896, 0.48123744), (0.33421308, 0.26174995), (0.1100545, 0.21821943), (0.70241964, 0.8309157), (0.19403379, 0.6129518), (0.5362021, 0.42177108)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.44322932, 0, 0.45429116), (0.44322932, -1, 0.45429116), (-0.4080558, 0, -0.5635591), (-0.4080558, -1, -0.5635591), (-0.4421332, 0, -0.150606), (-0.4421332, -1, -0.150606), (0.43250877, 10, 0.40344775), (0.43250877, 11, 0.40344775), (0.36506304, 10, -0.36262128), (0.36506304, 11, -0.36262128), (-0.4453845, 10, -0.18949887), (-0.4453845, 11, -0.18949887), (-0.10466806, 10, 0.25222814), (-0.10466806, 11, 0.25222814), (0.8429541, 8.309156, -0.023687987), (1.7940106, 8.309156, -0.332705), (-0.35968485, 6.129518, -0.809017), (-0.35968485, 6.129518, -1.809017), (-0.5099585, 4.217711, 0.6294935), (-1.0977437, 4.217711, 1.4385104)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves51" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.4633377, 0.065852456), (0.4715689, 0.2769653), (0.46748775, 0.35955507), (0.087675035, 0.26512215), (0.1554206, 0.15936588), (0.0124115925, 0.107055865), (0.006446108, 0.1902277), (0.23235838, 0.056624115), (0.55551785, 0.75968987), (0.7964782, 0.39916563)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.44776678, 0, 0.6088259), (0.44776678, -1, 0.6088259), (0.12937337, 0, -0.58494735), (0.12937337, -1, -0.58494735), (-0.43927446, 0, -0.32475883), (-0.43927446, -1, -0.32475883), (0.25214615, 10, 0.16960229), (0.25214615, 11, 0.16960229), (0.2414867, 10, -0.0809021), (0.2414867, 11, -0.0809021), (-0.10911153, 10, 0.023040893), (-0.10911153, 11, 0.023040893), (-0.0061306134, 10, 0.19221966), (-0.0061306134, 11, 0.19221966), (0.67219436, 0.56624115, -0.5492324), (1.6232508, 0.56624115, -0.8582494), (0.065265164, 7.596899, -0.809017), (0.065265164, 7.596899, -1.809017), (-0.7574958, 3.9916563, 0.4496471), (-1.345281, 3.9916563, 1.2586641)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves52" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.4001308, 0.46561804), (0.033819284, 0.046725135), (0.06947978, 0.43305907), (0.33412412, 0.45449245), (0.31568792, 0.3686357), (0.054576784, 0.2624731), (0.07772969, 0.008340515), (0.27930787, 0.13245295), (0.13131765, 0.060885902), (0.050399985, 0.61981845)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.12768044, 0, 0.4416167), (0.12768044, -1, 0.4416167), (-0.52056396, 0, -0.77121556), (-0.52056396, -1, -0.77121556), (-0.51395285, 0, 0.09751363), (-0.51395285, -1, 0.09751363), (0.43224803, 10, 0.47457), (0.43224803, 11, 0.47457), (0.5169157, 10, -0.20067963), (0.5169157, 11, -0.20067963), (-0.28170618, 10, 0.036955103), (-0.28170618, 11, 0.036955103), (-0.07392533, 10, 0.03236031), (-0.07392533, 11, 0.03236031), (0.68924975, 1.3245295, -0.49674132), (1.6403062, 1.3245295, -0.8057583), (-0.4334121, 0.608859, -0.809017), (-0.4334121, 0.608859, -1.809017), (-0.047933236, 6.1981845, 0.9651745), (-0.63571846, 6.1981845, 1.7741915)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves53" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.09987112, 0.16352178), (0.4704572, 0.017766329), (0.17285684, 0.41295362), (0.42049146, 0.40069327), (0.19744395, 0.18815435), (0.016778365, 0.36537412), (0.37835097, 0.2000515), (0.39163026, 0.076308474), (0.98914546, 0.7083791), (0.48592514, 0.62181044)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.700555, 0, 0.32749525), (0.700555, -1, 0.32749525), (-0.024286877, 0, -0.79464376), (-0.024286877, -1, -0.79464376), (-0.49552035, 0, -0.011852511), (-0.49552035, -1, -0.011852511), (0.38108194, 10, 0.5443125), (0.38108194, 11, 0.5443125), (0.2983747, 10, -0.09120654), (0.2983747, 11, -0.09120654), (-0.35735354, 10, 0.09933283), (-0.35735354, 11, 0.09933283), (-0.35983318, 10, 0.31696838), (-0.35983318, 11, 0.31696838), (0.7300533, 0.76308477, -0.37116104), (1.6811098, 0.76308477, -0.68017805), (0.57502496, 7.083791, -0.809017), (0.57502496, 7.083791, -1.809017), (-0.4621423, 6.2181044, 0.664234), (-1.0499275, 6.2181044, 1.473251)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves54" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.36956573, 0.44429585), (0.20706278, 0.4635089), (0.01447826, 0.48696914), (0.4544827, 0.4074126), (0.2955926, 0.068638116), (0.07847231, 0.053117942), (0.29810095, 0.345526), (0.058575407, 0.38317314), (0.089815974, 0.8886897), (0.015223595, 0.5346839)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.17702815, 0, 0.42708567), (0.17702815, -1, 0.42708567), (-0.07192466, 0, -0.4340304), (-0.07192466, -1, -0.4340304), (-0.4826618, 0, 0.14234807), (-0.4826618, -1, 0.14234807), (0.3874724, 10, 0.58038014), (0.3874724, 11, 0.58038014), (0.32146975, 10, 0.035813734), (0.32146975, 11, 0.035813734), (-0.09664303, 10, -0.047071084), (-0.09664303, 11, -0.047071084), (-0.28351083, 10, 0.43764427), (-0.28351083, 11, 0.43764427), (0.609064, 3.8317316, -0.7435277), (1.5601205, 3.8317316, -1.0525447), (-0.48220024, 8.886897, -0.809017), (-0.48220024, 8.886897, -1.809017), (-0.0144785, 5.3468385, 0.98948073), (-0.60226375, 5.3468385, 1.7984978)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves55" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.25033045, 0.26275852), (0.3805668, 0.49442506), (0.25086495, 0.3211), (0.02089794, 0.21259207), (0.4360678, 0.27781728), (0.22042696, 0.014611982), (0.28786924, 0.10313158), (0.28140706, 0.15627615), (0.5732397, 0.043755498), (0.61765283, 0.5182666)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.46307993, 0, 0.40079424), (0.46307993, -1, 0.40079424), (0.15021363, 0, -0.40901873), (0.15021363, -1, -0.40901873), (-0.5545402, 0, -0.07068392), (-0.5545402, -1, -0.07068392), (0.20218708, 10, 0.0865925), (0.20218708, 11, 0.0865925), (0.578022, 10, -0.090006545), (0.578022, 11, -0.090006545), (-0.14346053, 10, -0.1738138), (-0.14346053, 11, -0.1738138), (-0.27377993, 10, 0.19208807), (-0.27377993, 11, 0.19208807), (0.69001234, 1.5627615, -0.49439436), (1.6410688, 1.5627615, -0.80341136), (0.086098395, 0.437555, -0.809017), (0.086098395, 0.437555, -1.809017), (-0.5874227, 5.1826663, 0.5732124), (-1.175208, 5.1826663, 1.3822294)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves56" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.25827542, 0.07747409), (0.0875266, 0.4937403), (0.47000596, 0.2556688), (0.28919947, 0.041805107), (0.17054506, 0.28083068), (0.17833516, 0.052327182), (0.3198383, 0.24628708), (0.7823522, 0.47366673), (0.20962976, 0.040569987), (0.6401728, 0.7480459)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6317398, 0, 0.4635401), (0.6317398, -1, 0.4635401), (-0.19467829, 0, -0.4095727), (-0.19467829, -1, -0.4095727), (-0.5371614, 0, -0.29547164), (-0.5371614, -1, -0.29547164), (0.039759018, 10, 0.30211794), (0.039759018, 11, 0.30211794), (0.32726613, 10, -0.17449547), (0.32726613, 11, -0.17449547), (-0.1545889, 10, -0.12810619), (-0.1545889, 11, -0.12810619), (-0.3041843, 10, 0.34512255), (-0.3041843, 11, 0.34512255), (0.87199134, 4.7366676, 0.06567939), (1.8230479, 4.7366676, -0.24333762), (-0.34135067, 0.40569985, -0.809017), (-0.34135067, 0.40569985, -1.809017), (-0.6088405, 7.480459, 0.55765146), (-1.1966257, 7.480459, 1.3666685)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves57" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.06693816, 0.412351), (0.2762994, 0.39352533), (0.37989384, 0.3119476), (0.2683681, 0.051270206), (0.39011568, 0.2647025), (0.3894437, 0.39337125), (0.24331547, 0.09143858), (0.09705853, 0.68903655), (0.83089745, 0.7926626), (0.8342283, 0.36545488)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.49522543, 0, 0.22784667), (0.49522543, -1, 0.22784667), (-0.031667445, 0, -0.4906483), (-0.031667445, -1, -0.4906483), (-0.5163722, 0, -0.21211435), (-0.5163722, -1, -0.21211435), (0.04876086, 10, 0.28421146), (0.04876086, 11, 0.28421146), (0.52661026, 10, -0.093596436), (0.52661026, 11, -0.093596436), (-0.6030276, 10, -0.19350818), (-0.6030276, 11, -0.19350818), (-0.23140678, 10, 0.1666272), (-0.23140678, 11, 0.1666272), (0.62304384, 6.8903656, -0.7005023), (1.5741004, 6.8903656, -1.0095193), (0.38899326, 7.926626, -0.809017), (0.38899326, 7.926626, -1.809017), (-0.79339826, 3.654549, 0.42356244), (-1.3811835, 3.654549, 1.2325795)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves58" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.36464682, 0.17921379), (0.31104597, 0.40319377), (0.054784276, 0.26021287), (0.30967915, 0.21440558), (0.20260793, 0.267095), (0.09251718, 0.12842044), (0.30160928, 0.29864642), (0.5916488, 0.4143847), (0.35434878, 0.87344074), (0.7605478, 0.22212061)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.43381435, 0, 0.50560164), (0.43381435, -1, 0.50560164), (0.014862571, 0, -0.48282638), (0.014862571, -1, -0.48282638), (-0.68367785, 0, 0.16735612), (-0.68367785, -1, 0.16735612), (0.20391183, 10, 0.37593412), (0.20391183, 11, 0.37593412), (0.3496861, 10, -0.15347509), (0.3496861, 11, -0.15347509), (-0.17651534, 10, -0.03516387), (-0.17651534, 11, -0.03516387), (-0.28684747, 10, 0.3918488), (-0.28684747, 11, 0.3918488), (0.8027143, 4.143847, -0.14753354), (1.7537708, 4.143847, -0.45655054), (-0.1712233, 8.734407, -0.809017), (-0.1712233, 8.734407, -1.809017), (-0.72332394, 2.221206, 0.4744744), (-1.3111092, 2.221206, 1.2834914)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves59" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.13982104, 0.066598915), (0.27238384, 0.18969785), (0.33640194, 0.23468035), (0.097595446, 0.36705995), (0.28417516, 0.45451072), (0.16764648, 0.421336), (0.32776192, 0.41795856), (0.98538697, 0.6451731), (0.6960866, 0.2604422), (0.9595623, 0.94985986)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.7547395, 0, 0.38505077), (0.7547395, -1, 0.38505077), (-0.15607727, 0, -0.6555482), (-0.15607727, -1, -0.6555482), (-0.6056571, 0, -0.13961203), (-0.6056571, -1, -0.13961203), (0.34909478, 10, 0.21102321), (0.34909478, 11, 0.21102321), (0.53742135, 10, -0.27989194), (0.53742135, 11, -0.27989194), (-0.49925447, 10, -0.005428868), (-0.49925447, 11, -0.005428868), (-0.31172013, 10, 0.5192426), (-0.31172013, 11, 0.5192426), (0.94574803, 6.4517307, 0.29267916), (1.8968046, 6.4517307, -0.016337857), (0.23051359, 2.6044219, -0.809017), (0.23051359, 2.6044219, -1.809017), (-0.912598, 9.498598, 0.33695877), (-1.5003833, 9.498598, 1.1459758)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves60" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.27425605, 0.41228008), (0.19940746, 0.13145125), (0.27920377, 0.014639463), (0.14431727, 0.16397938), (0.06795146, 0.42640123), (0.3456126, 0.31561357), (0.36952022, 0.025715008), (0.73466134, 0.8244562), (0.4432623, 0.5676107), (0.92619, 0.17882614)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.29812187, 0, 0.3711217), (0.29812187, -1, 0.3711217), (-0.27610263, 0, -0.7026707), (-0.27610263, -1, -0.7026707), (-0.8357069, 0, -0.007666166), (-0.8357069, -1, -0.007666166), (0.15595366, 10, 0.1949897), (0.15595366, 11, 0.1949897), (0.31525806, 10, -0.3239677), (0.31525806, 11, -0.3239677), (-0.50331235, 10, -0.18207651), (-0.50331235, 11, -0.18207651), (-0.35143462, 10, 0.13990304), (-0.35143462, 11, 0.13990304), (0.8546666, 8.244562, 0.0123593295), (1.8057231, 8.244562, -0.29665768), (-0.066699155, 5.676107, -0.809017), (-0.066699155, 5.676107, -1.809017), (-0.8808591, 1.7882614, 0.36001846), (-1.4686443, 1.7882614, 1.1690354)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves61" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3554686, 0.20633106), (0.13505799, 0.21454598), (0.41454855, 0.4228073), (0.4129296, 0.24922879), (0.050216183, 0.02706752), (0.11410705, 0.04489531), (0.3529609, 0.1321589), (0.3734134, 0.23856685), (0.6625333, 0.79486626), (0.8497559, 0.92531455)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4167533, 0, 0.49087995), (0.4167533, -1, 0.49087995), (-0.3029081, 0, -0.63544565), (-0.3029081, -1, -0.63544565), (-0.39834931, 0, -0.285117), (-0.39834931, -1, -0.285117), (0.23703067, 10, 0.4899455), (0.23703067, 11, 0.4899455), (0.06366832, 10, -0.0063804295), (0.06366832, 11, -0.0063804295), (-0.10976841, 10, -0.07844113), (-0.10976841, 11, -0.07844113), (-0.3356858, 10, 0.24122983), (-0.3356858, 11, 0.24122983), (0.72343564, 2.3856685, -0.3915281), (1.6744921, 2.3856685, -0.70054513), (0.19106932, 7.9486623, -0.809017), (0.19106932, 7.9486623, -1.809017), (-0.8081659, 9.253146, 0.41283312), (-1.3959512, 9.253146, 1.2218502)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves62" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.13152632, 0.25750417), (0.38487342, 0.4301568), (0.04441704, 0.3332105), (0.3698235, 0.48269284), (0.34600195, 0.4489358), (0.072344966, 0.37026757), (0.4911663, 0.3482772), (0.5274756, 0.063140765), (0.88074356, 0.003727792), (0.48969215, 0.17224751)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.58106655, 0, 0.3203263), (0.58106655, -1, 0.3203263), (0.11750041, 0, -0.46101284), (0.11750041, -1, -0.46101284), (-0.61801904, 0, 0.15638953), (-0.61801904, -1, 0.15638953), (0.45906818, 10, 0.5189838), (0.45906818, 11, 0.5189838), (0.5929453, 10, -0.2562762), (0.5929453, 11, -0.2562762), (-0.3946687, 10, 0.055890664), (-0.3946687, 11, 0.055890664), (-0.4671269, 10, 0.50005597), (-0.4671269, 11, 0.50005597), (0.779402, 0.6314076, -0.21928133), (1.7304585, 0.6314076, -0.5282984), (0.4475909, 0.037277922, -0.809017), (0.4475909, 0.037277922, -1.809017), (-0.46572492, 1.7224752, 0.66163105), (-1.0535102, 1.7224752, 1.470648)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves63" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.18057321, 0.3680143), (0.16863745, 0.46804792), (0.23919936, 0.11597179), (0.1477327, 0.4026923), (0.22756478, 0.07652067), (0.14537008, 0.34004375), (0.062545024, 0.36482045), (0.58962905, 0.07784816), (0.15883964, 0.4978777), (0.19190142, 0.60875213)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4293188, 0, 0.32006735), (0.4293188, -1, 0.32006735), (-0.114428364, 0, -0.43035826), (-0.114428364, -1, -0.43035826), (-0.75386655, 0, 0.00574673), (-0.75386655, -1, 0.00574673), (0.38298315, 10, 0.27217147), (0.38298315, 11, 0.27217147), (0.2614047, 10, 0.0084148655), (0.2614047, 11, 0.0084148655), (-0.4088472, 10, -0.012527564), (-0.4088472, 11, -0.012527564), (-0.059483852, 10, 0.3841479), (-0.059483852, 11, 0.3841479), (0.80198056, 0.7784816, -0.14979169), (1.7530371, 0.7784816, -0.4588087), (-0.40105805, 4.978777, -0.809017), (-0.40105805, 4.978777, -1.809017), (-0.1825091, 6.087521, 0.8673994), (-0.7702943, 6.087521, 1.6764164)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves64" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.47174352, 0.09356471), (0.2055821, 0.23447706), (0.07691149, 0.12244545), (0.057203114, 0.094774894), (0.1951007, 0.21189201), (0.2940694, 0.12877595), (0.23375936, 0.3268777), (0.9904942, 0.7044328), (0.80672395, 0.6104795), (0.8288836, 0.6950322)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.41341645, 0, 0.6060707), (0.41341645, -1, 0.6060707), (-0.20828684, 0, -0.61932105), (-0.20828684, -1, -0.61932105), (-0.8066643, 0, 0.18518962), (-0.8066643, -1, 0.18518962), (0.09013628, 10, 0.08649017), (0.09013628, 11, 0.08649017), (0.3100988, 10, -0.1111348), (0.3100988, 11, -0.1111348), (-0.29532287, 10, -0.19811319), (-0.29532287, 11, -0.19811319), (-0.22231837, 10, 0.39911333), (-0.22231837, 11, 0.39911333), (0.94760334, 7.0443277, 0.29838917), (1.8986598, 7.0443277, -0.01062785), (0.3605756, 6.104795, -0.809017), (0.3605756, 6.104795, -1.809017), (-0.7883152, 6.9503217, 0.42725554), (-1.3761004, 6.9503217, 1.2362726)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves65" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.093112834, 0.26190126), (0.4690976, 0.06932073), (0.06733062, 0.049949296), (0.027135132, 0.41442245), (0.25612622, 0.25964794), (0.3613776, 0.2816763), (0.19097614, 0.38239205), (0.068175755, 0.85239637), (0.8262261, 0.98645216), (0.28881875, 0.76446146)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.61341804, 0, 0.29242444), (0.61341804, -1, 0.29242444), (0.004417782, 0, -0.75293535), (0.004417782, -1, -0.75293535), (-0.87909263, 0, 0.21830389), (-0.87909263, -1, 0.21830389), (0.3941392, 10, 0.15519872), (0.3941392, 11, 0.15519872), (0.39620775, 10, -0.13091223), (0.39620775, 11, -0.13091223), (-0.48030248, 10, -0.20531785), (-0.48030248, 11, -0.20531785), (-0.1816291, 10, 0.4414069), (-0.1816291, 11, 0.4414069), (0.6125515, 8.523963, -0.73279417), (1.563608, 8.523963, -1.0418112), (0.38350177, 9.864522, -0.809017), (0.38350177, 9.864522, -1.809017), (-0.27468297, 7.644614, 0.80043113), (-0.8624682, 7.644614, 1.6094482)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves66" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.49480084, 0.39737225), (0.24682917, 0.1271734), (0.05054421, 0.46826634), (0.49124914, 0.29917774), (0.26189062, 0.2875806), (0.2866225, 0.02854442), (0.39828682, 0.3572998), (0.8346007, 0.33898866), (0.016175376, 0.84973323), (0.9432527, 0.1954006)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.1025495, 0, 0.5281212), (0.1025495, -1, 0.5281212), (-0.22286952, 0, -0.7061316), (-0.22286952, -1, -0.7061316), (-0.4873475, 0, 0.1078046), (-0.4873475, -1, 0.1078046), (0.28453493, 10, 0.5837002), (0.28453493, 11, 0.5837002), (0.4181084, 10, -0.15172894), (0.4181084, 11, -0.15172894), (-0.19561984, 10, -0.22306177), (-0.19561984, 11, -0.22306177), (-0.37879327, 10, 0.4803772), (-0.37879327, 11, 0.4803772), (0.8909717, 3.3898866, 0.12409496), (1.8420283, 3.3898866, -0.18492205), (-0.56876993, 8.497332, -0.809017), (-0.56876993, 8.497332, -1.809017), (-0.8970867, 1.9540061, 0.34822842), (-1.4848719, 1.9540061, 1.1572454)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves67" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.25255355, 0.16125046), (0.206345, 0.14730614), (0.052146766, 0.45164508), (0.1732431, 0.44273818), (0.23380998, 0.32896417), (0.33398858, 0.18399957), (0.11580603, 0.009007131), (0.068183355, 0.5028842), (0.9428884, 0.11596511), (0.14424872, 0.9620552)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.55750555, 0, 0.4336981), (0.55750555, -1, 0.4336981), (-0.25862777, 0, -0.68984383), (-0.25862777, -1, -0.68984383), (-0.50257313, 0, 0.11114914), (-0.50257313, -1, 0.11114914), (0.42106903, 10, 0.31005672), (0.42106903, 11, 0.31005672), (0.4157268, 10, -0.19388637), (0.4157268, 11, -0.19388637), (-0.37130755, 10, -0.21334346), (-0.37130755, 11, -0.21334346), (-0.11013808, 10, 0.044793162), (-0.11013808, 11, 0.044793162), (0.6125543, 5.028842, -0.7327857), (1.5636108, 5.028842, -1.0418028), (0.5206465, 1.1596512, -0.809017), (0.5206465, 1.1596512, -1.809017), (-0.13718869, 9.620552, 0.9003266), (-0.7249739, 9.620552, 1.7093436)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves68" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.46067065, 0.37302887), (0.0019786141, 0.097724095), (0.12749489, 0.0455035), (0.38437855, 0.1943899), (0.06891199, 0.23128399), (0.1480622, 0.16293281), (0.4473958, 0.3135294), (0.5514082, 0.5684943), (0.5240796, 0.90242547), (0.4554452, 0.66687)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.15816116, 0, 0.5120603), (0.15816116, -1, 0.5120603), (-0.5280185, 0, -0.72995657), (-0.5280185, -1, -0.72995657), (-0.8614649, 0, 0.15241204), (-0.8614649, -1, 0.15241204), (0.18487579, 10, 0.44444835), (0.18487579, 11, 0.44444835), (0.20148452, 10, -0.16581771), (0.20148452, 11, -0.16581771), (-0.24198711, 10, -0.06943583), (-0.24198711, 11, -0.06943583), (-0.4254987, 10, 0.45178232), (-0.4254987, 11, 0.45178232), (0.788096, 5.6849427, -0.19252388), (1.7391526, 5.6849427, -0.5015409), (0.028307326, 9.024255, -0.809017), (0.028307326, 9.024255, -1.809017), (-0.43315414, 6.6686997, 0.6852951), (-1.0209394, 6.6686997, 1.4943122)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves69" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.044182915, 0.37701076), (0.18208218, 0.28487653), (0.24538977, 0.45387104), (0.13700677, 0.1818525), (0.10341288, 0.080755144), (0.1648109, 0.36345083), (0.054380465, 0.2718526), (0.116924495, 0.2040355), (0.10669658, 0.93578213), (0.82989657, 0.3967205)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.55047756, 0, 0.22304392), (0.55047756, -1, 0.22304392), (-0.2062886, 0, -0.57854706), (-0.2062886, -1, -0.57854706), (-0.43025646, 0, -0.10559098), (-0.43025646, -1, -0.10559098), (0.17295201, 10, 0.19320229), (0.17295201, 11, 0.19320229), (0.14581817, 10, -0.033375945), (0.14581817, 11, -0.033375945), (-0.4425357, 10, -0.02102233), (-0.4425357, 11, -0.02102233), (-0.051718898, 10, 0.2886571), (-0.051718898, 11, 0.2886571), (0.6302605, 2.0403552, -0.67829144), (1.5813171, 2.0403552, -0.98730844), (-0.46235588, 9.357821, -0.809017), (-0.46235588, 9.357821, -1.809017), (-0.78927857, 3.967205, 0.4265556), (-1.3770638, 3.967205, 1.2355726)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves70" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.32931522, 0.43400848), (0.08040873, 0.20424978), (0.037723206, 0.25133976), (0.31307873, 0.4172313), (0.15426266, 0.25314733), (0.37040374, 0.09170287), (0.45511264, 0.08437627), (0.0823405, 0.6212833), (0.81881595, 0.5258758), (0.47214043, 0.6694033)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.22509256, 0, 0.40245223), (0.22509256, -1, 0.40245223), (-0.3732041, 0, -0.64377546), (-0.3732041, -1, -0.64377546), (-0.6983144, 0, 0.18917291), (-0.6983144, -1, 0.18917291), (0.39681056, 10, 0.44201028), (0.39681056, 11, 0.44201028), (0.29550877, 10, -0.1571307), (0.29550877, 11, -0.1571307), (-0.30493248, 10, -0.27132517), (-0.30493248, 11, -0.27132517), (-0.43283784, 10, 0.22501382), (-0.43283784, 11, 0.22501382), (0.6176972, 6.212833, -0.7169575), (1.5687537, 6.212833, -1.0259745), (0.37479064, 5.258758, -0.809017), (0.37479064, 5.258758, -1.809017), (-0.44903225, 6.694033, 0.673759), (-1.0368174, 6.694033, 1.482776)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves71" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.32683814, 0.16040355), (0.12455159, 0.32574892), (0.17793974, 0.25773528), (0.22305615, 0.2612948), (0.45288992, 0.3431828), (0.28142563, 0.15056373), (0.14339466, 0.43466666), (0.1381635, 0.8225821), (0.76602167, 0.11749036), (0.9889218, 0.05189611)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.48766214, 0, 0.4852892), (0.48766214, -1, 0.4852892), (-0.24989566, 0, -0.5454806), (-0.24989566, -1, -0.5454806), (-0.6412953, 0, 0.03042973), (-0.6412953, -1, 0.03042973), (0.24850613, 10, 0.30380067), (0.24850613, 11, 0.30380067), (0.6324417, 10, -0.13769005), (0.6324417, 11, -0.13769005), (-0.30861244, 10, -0.18115136), (-0.30861244, 11, -0.18115136), (-0.13637644, 10, 0.47897807), (-0.13637644, 11, 0.47897807), (0.63797605, 8.2258215, -0.6545455), (1.5890325, 8.2258215, -0.96356255), (0.31272724, 1.1749036, -0.809017), (0.31272724, 1.1749036, -1.809017), (-0.9405205, 0.51896113, 0.31667185), (-1.5283058, 0.51896113, 1.1256889)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves72" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.055457056, 0.36022216), (0.2106621, 0.08218549), (0.14683032, 0.3720455), (0.18363602, 0.006287476), (0.47696912, 0.021447975), (0.04744815, 0.24811321), (0.45156413, 0.23830931), (0.48436707, 0.9781648), (0.74820393, 0.67196614), (0.5641101, 0.744519)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5557221, 0, 0.23602211), (0.5557221, -1, 0.23602211), (-0.29182968, 0, -0.74252754), (-0.29182968, -1, -0.74252754), (-0.543881, 0, 0.029887322), (-0.543881, -1, 0.029887322), (0.005979745, 10, 0.18557896), (0.005979745, 11, 0.18557896), (0.4662314, 10, 0.1300398), (0.4662314, 11, 0.1300398), (-0.26385903, 10, 0.038284842), (-0.26385903, 11, 0.038284842), (-0.42946303, 10, 0.3778503), (-0.42946303, 11, 0.3778503), (0.7637419, 9.781648, -0.26747814), (1.7147985, 9.781648, -0.5764952), (0.29178125, 6.719661, -0.809017), (0.29178125, 6.719661, -1.809017), (-0.5365006, 7.44519, 0.6102095), (-1.1242858, 7.44519, 1.4192265)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves73" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.24446021, 0.4517011), (0.3839951, 0.22698994), (0.15205629, 0.40184394), (0.07034524, 0.1053554), (0.3201524, 0.41505945), (0.14968655, 0.44434896), (0.25874776, 0.096075505), (0.40907794, 0.78462225), (0.9299845, 0.5833342), (0.3054882, 0.016722247)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.28896776, 0, 0.33835152), (0.28896776, -1, 0.33835152), (-0.0029506274, 0, -0.6253783), (-0.0029506274, -1, -0.6253783), (-0.51364255, 0, 0.014836283), (-0.51364255, -1, 0.014836283), (0.10019894, 10, 0.102901846), (0.10019894, 11, 0.102901846), (0.54844886, 10, -0.23685762), (0.54844886, 11, -0.23685762), (-0.51058453, 10, 0.01621243), (-0.51058453, 11, 0.01621243), (-0.24608375, 10, 0.17603296), (-0.24608375, 11, 0.17603296), (0.7363915, 7.8462224, -0.35165396), (1.687448, 7.8462224, -0.660671), (0.50547713, 5.833342, -0.809017), (0.50547713, 5.833342, -1.809017), (-0.29053652, 0.16722247, 0.78891283), (-0.87832177, 0.16722247, 1.5979298)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves74" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.090582214, 0.057395983), (0.22033696, 0.4259155), (0.42122114, 0.01710209), (0.031074781, 0.3122233), (0.26238522, 0.49217469), (0.43042067, 0.13467674), (0.46157414, 0.2198039), (0.31295913, 0.97198933), (0.7018528, 0.03300936), (0.41468138, 0.65531754)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.8103209, 0, 0.35387143), (0.8103209, -1, 0.35387143), (-0.078416765, 0, -0.4644441), (-0.078416765, -1, -0.4644441), (-0.7817739, 0, -0.1672074), (-0.7817739, -1, -0.1672074), (0.296942, 10, 0.12755708), (0.296942, 11, 0.12755708), (0.5388362, 10, -0.31709617), (0.5388362, 11, -0.31709617), (-0.3810801, 10, -0.3066002), (-0.3810801, 11, -0.3066002), (-0.43898308, 10, 0.36243817), (-0.43898308, 11, 0.36243817), (0.7014743, 9.719893, -0.45911804), (1.6525308, 9.719893, -0.7681351), (0.23729219, 0.33009362, -0.809017), (0.23729219, 0.33009362, -1.809017), (-0.39438543, 6.5531754, 0.71346223), (-0.98217064, 6.5531754, 1.5224792)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves75" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.021529524, 0.24388582), (0.38255864, 0.20853983), (0.15519927, 0.123542644), (0.06590981, 0.30270532), (0.23899831, 0.49037522), (0.32870758, 0.3184218), (0.22753984, 0.40522453), (0.21366046, 0.7849249), (0.38247, 0.40602088), (0.752086, 0.06648019)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6986315, 0, 0.24852867), (0.6986315, -1, 0.24852867), (-0.015483945, 0, -0.64030474), (-0.015483945, -1, -0.64030474), (-0.777181, 0, 0.09732215), (-0.777181, -1, 0.09732215), (0.28788987, 10, 0.1594509), (0.28788987, 11, 0.1594509), (0.51553625, 10, -0.32286733), (0.51553625, 11, -0.32286733), (-0.49604663, 10, -0.16753227), (-0.49604663, 11, -0.16753227), (-0.21640325, 10, 0.47553822), (-0.21640325, 11, 0.47553822), (0.66540194, 7.8492494, -0.5701373), (1.6164584, 7.8492494, -0.8791544), (-0.1381648, 4.060209, -0.809017), (-0.1381648, 4.060209, -1.809017), (-0.7152763, 0.6648019, 0.48032138), (-1.3030615, 0.6648019, 1.2893384)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves76" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.101602614, 0.08682864), (0.49758157, 0.19133702), (0.06778742, 0.0991184), (0.3298866, 0.07964647), (0.38769716, 0.07587961), (0.33767468, 0.47993553), (0.26820514, 0.41934514), (0.14451565, 0.28482622), (0.24664666, 0.7755782), (0.0939563, 0.9265065)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.7718478, 0, 0.35239115), (0.7718478, -1, 0.35239115), (0.10962205, 0, -0.65422213), (0.10962205, -1, -0.65422213), (-0.8321641, 0, 0.2025991), (-0.8321641, -1, 0.2025991), (0.075748295, 10, 0.35449868), (0.075748295, 11, 0.35449868), (0.41332284, 10, 0.058417115), (0.41332284, 11, 0.058417115), (-0.654926, 10, -0.12487631), (-0.654926, 11, -0.12487631), (-0.25507826, 10, 0.5022251), (-0.25507826, 11, 0.5022251), (0.64028364, 2.8482623, -0.6474436), (1.5913402, 2.8482623, -0.9564606), (-0.29783472, 7.755782, -0.809017), (-0.29783472, 7.755782, -1.809017), (-0.089357756, 9.265065, 0.9350778), (-0.677143, 9.265065, 1.7440948)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves77" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.19516626, 0.005666843), (0.4468849, 0.05233272), (0.03209148, 0.020142183), (0.13624726, 0.057397682), (0.24656108, 0.36057815), (0.21739373, 0.1021926), (0.29548377, 0.27748814), (0.302323, 0.6713649), (0.31832758, 0.8748623), (0.37237954, 0.2637633)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.7600529, 0, 0.44212243), (0.7600529, -1, 0.44212243), (-0.03168015, 0, -0.7666789), (-0.03168015, -1, -0.7666789), (-0.92024225, 0, 0.26691335), (-0.92024225, -1, 0.26691335), (0.05458844, 10, 0.15398413), (0.05458844, 11, 0.15398413), (0.44643602, 10, -0.21552227), (0.44643602, 11, -0.21552227), (-0.22497177, 10, -0.14429596), (-0.22497177, 11, -0.14429596), (-0.28102177, 10, 0.36879766), (-0.28102177, 11, 0.36879766), (0.6976105, 6.713649, -0.4710096), (1.648667, 6.713649, -0.7800266), (-0.21356875, 8.748623, -0.809017), (-0.21356875, 8.748623, -1.809017), (-0.35415402, 2.6376333, 0.74269205), (-0.94193923, 2.6376333, 1.551709)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves78" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.22983594, 0.08095675), (0.13564827, 0.23639612), (0.2675706, 0.09964965), (0.3043403, 0.1534118), (0.048690997, 0.47933838), (0.28978688, 0.04670786), (0.030391645, 0.2765659), (0.20105922, 0.12993915), (0.33606163, 0.82515204), (0.12414166, 0.36802724)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.65547514, 0, 0.4428127), (0.65547514, -1, 0.4428127), (-0.289371, 0, -0.6177685), (-0.289371, -1, -0.6177685), (-0.75908333, 0, -0.020929495), (-0.75908333, -1, -0.020929495), (0.1459033, 10, 0.35174716), (0.1459033, 11, 0.35174716), (0.32805592, 10, -0.37274656), (0.32805592, 11, -0.37274656), (-0.21475427, 10, -0.22000898), (-0.21475427, 11, -0.22000898), (-0.028904172, 10, 0.28595746), (-0.028904172, 11, 0.28595746), (0.6608243, 1.2993915, -0.58422595), (1.6118808, 1.2993915, -0.89324296), (-0.1927211, 8.25152, -0.809017), (-0.1927211, 8.25152, -1.809017), (-0.11806574, 3.6802723, 0.9142202), (-0.70585096, 3.6802723, 1.7232373)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves79" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.48570332, 0.14122176), (0.08290008, 0.3552678), (0.34125313, 0.14428723), (0.19396073, 0.19252619), (0.25352374, 0.030502645), (0.33496186, 0.40474555), (0.00014910595, 0.38553578), (0.79076606, 0.7272416), (0.747886, 0.19960535), (0.2594717, 0.38816658)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.35481533, 0, 0.6009898), (0.35481533, -1, 0.6009898), (-0.2815092, 0, -0.52159935), (-0.2815092, -1, -0.52159935), (-0.68986374, 0, -0.11710282), (-0.68986374, -1, -0.11710282), (0.1831033, 10, 0.2534546), (0.1831033, 11, 0.2534546), (0.2590444, 10, 0.05366599), (0.2590444, 11, 0.05366599), (-0.58182156, 10, -0.1459166), (-0.58182156, 11, -0.1459166), (-0.00014180818, 10, 0.38558185), (-0.00014180818, 11, 0.38558185), (0.87504786, 7.2724156, 0.07508638), (1.8261044, 7.2724156, -0.23393065), (0.2914075, 1.9960535, -0.809017), (0.2914075, 1.9960535, -1.809017), (-0.24677229, 3.8816657, 0.82070947), (-0.83455753, 3.8816657, 1.6297264)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves80" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.025536394, 0.0387932), (0.3158641, 0.41547704), (0.28551686, 0.43040138), (0.14267355, 0.45389235), (0.24123356, 0.25790286), (0.08638199, 0.22180219), (0.01151243, 0.1013647), (0.5425703, 0.6169483), (0.7669101, 0.5960725), (0.100014545, 0.60990566)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.8898755, 0, 0.31467447), (0.8898755, -1, 0.31467447), (0.027746512, 0, -0.47288904), (0.027746512, -1, -0.47288904), (-0.4380004, 0, -0.14320189), (-0.4380004, -1, -0.14320189), (0.4316773, 10, 0.282934), (0.4316773, 11, 0.282934), (0.38101825, 10, -0.13410252), (0.38101825, 11, -0.13410252), (-0.26172048, 10, -0.0013438448), (-0.26172048, 11, -0.0013438448), (-0.010948973, 10, 0.10492224), (-0.010948973, 11, 0.10492224), (0.78488547, 6.169483, -0.20240498), (1.735942, 6.169483, -0.511422), (0.31377164, 5.960725, -0.809017), (0.31377164, 5.960725, -1.809017), (-0.09511949, 6.0990567, 0.93089163), (-0.6829047, 6.0990567, 1.7399087)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves81" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.48645285, 0.4474626), (0.25676426, 0.030161249), (0.06378663, 0.47240078), (0.13748583, 0.22101645), (0.03815217, 0.22191314), (0.2710885, 0.053117517), (0.21225442, 0.08963272), (0.9938357, 0.08542271), (0.37667307, 0.2944151), (0.5786922, 0.39015567)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.062850155, 0, 0.5068741), (0.062850155, -1, 0.5068741), (-0.2682124, 0, -0.78461605), (-0.2682124, -1, -0.78461605), (-0.47860482, 0, 0.0917215), (-0.47860482, -1, 0.0917215), (0.21019915, 10, 0.20578368), (0.21019915, 11, 0.20578368), (0.16672215, 10, -0.16774184), (0.16672215, 11, -0.16774184), (-0.20985958, 10, -0.20290099), (-0.20985958, 11, -0.20290099), (-0.20186596, 10, 0.15522294), (-0.20186596, 11, 0.15522294), (0.94881725, 0.85422707, 0.30212513), (1.8998737, 0.85422707, -0.0068918937), (-0.1449795, 2.944151, -0.809017), (-0.1449795, 2.944151, -1.809017), (-0.550369, 3.9015567, 0.60013354), (-1.1381543, 3.9015567, 1.4091505)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves82" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.4165703, 0.27197486), (0.32036206, 0.25637838), (0.30875853, 0.24902451), (0.46135992, 0.25231075), (0.46737415, 0.35379732), (0.4320794, 0.11268579), (0.3707059, 0.29435512), (0.26268804, 0.8465857), (0.30681548, 0.7568434), (0.39794934, 0.9802196)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.29621115, 0, 0.5128151), (0.29621115, -1, 0.5128151), (-0.060481615, 0, -0.6016025), (-0.060481615, -1, -0.6016025), (-0.60205704, 0, -0.11313835), (-0.60205704, -1, -0.11313835), (0.2399618, 10, 0.5393282), (0.2399618, 11, 0.5393282), (0.65245605, 10, -0.14180149), (0.65245605, 11, -0.14180149), (-0.36114046, 10, -0.31473777), (-0.36114046, 11, -0.31473777), (-0.35256228, 10, 0.40890953), (-0.35256228, 11, 0.40890953), (0.6832123, 8.4658575, -0.5153228), (1.6342688, 8.4658575, -0.82433987), (-0.22710201, 7.5684342, -0.809017), (-0.22710201, 7.5684342, -1.809017), (-0.37847233, 9.8021965, 0.72502375), (-0.9662576, 9.8021965, 1.5340408)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves83" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.36922997, 0.31785923), (0.42551047, 0.32814646), (0.015047168, 0.0823783), (0.3052748, 0.23852497), (0.27345395, 0.058377523), (0.37381604, 0.33274293), (0.37184533, 0.25551328), (0.12680428, 0.49244976), (0.6540377, 0.07900122), (0.91405123, 0.8996122)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.29759586, 0, 0.4659247), (0.29759586, -1, 0.4659247), (0.10531193, 0, -0.54354095), (0.10531193, -1, -0.54354095), (-0.86724395, 0, 0.26673746), (-0.86724395, -1, 0.26673746), (0.22685073, 10, 0.3789831), (0.22685073, 11, 0.3789831), (0.29438362, 10, 0.037273515), (0.29438362, 11, 0.037273515), (-0.53618085, 10, -0.19960031), (-0.53618085, 11, -0.19960031), (-0.35364592, 10, 0.3704198), (-0.35364592, 11, 0.3704198), (0.6338496, 4.9244976, -0.6672455), (1.5849061, 4.9244976, -0.9762625), (0.18108219, 0.7900122, -0.809017), (0.18108219, 0.7900122, -1.809017), (-0.8693144, 8.996122, 0.36840615), (-1.4570997, 8.996122, 1.1774231)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves84" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.15641512, 0.25841606), (0.025428228, 0.044988215), (0.20137228, 0.066302106), (0.25073424, 0.06876958), (0.13118197, 0.2697783), (0.34534928, 0.40137997), (0.4494096, 0.13672489), (0.730245, 0.2553859), (0.34391037, 0.85200846), (0.44686458, 0.06307695)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5565286, 0, 0.33724225), (0.5565286, -1, 0.33724225), (-0.53144914, 0, -0.7726208), (-0.53144914, -1, -0.7726208), (-0.8148467, 0, 0.063387476), (-0.8148467, -1, 0.063387476), (0.06540377, 10, 0.2719852), (0.06540377, 11, 0.2719852), (0.28333318, 10, -0.17771778), (0.28333318, 11, -0.17771778), (-0.5847263, 10, -0.15536022), (-0.5847263, 11, -0.15536022), (-0.42741394, 10, 0.2756001), (-0.42741394, 11, 0.2756001), (0.8530623, 2.553859, 0.007421746), (1.8041188, 2.553859, -0.30159527), (-0.18349434, 8.520084, -0.809017), (-0.18349434, 8.520084, -1.809017), (-0.4249935, 0.6307695, 0.69122416), (-1.0127788, 0.6307695, 1.5002412)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves85" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.039318696, 0.03163643), (0.44540906, 0.18268713), (0.024594856, 0.43859947), (0.3229927, 0.01566673), (0.36202735, 0.44488218), (0.4992243, 0.22316368), (0.34767228, 0.39426622), (0.32182708, 0.46937364), (0.08736139, 0.07801515), (0.058061864, 0.83166474)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.8835742, 0, 0.32640937), (0.8835742, -1, 0.32640937), (0.04320532, 0, -0.66122), (0.04320532, -1, -0.66122), (-0.52498907, 0, 0.14598443), (-0.52498907, -1, 0.14598443), (0.014899947, 10, 0.327834), (0.014899947, 11, 0.327834), (0.60580367, 10, -0.24804464), (0.60580367, 11, -0.24804464), (-0.50567794, 10, -0.33491957), (-0.50567794, 11, -0.33491957), (-0.330656, 10, 0.50170285), (-0.330656, 11, 0.50170285), (0.70469576, 4.6937366, -0.4492034), (1.6557523, 4.6937366, -0.7582204), (-0.4850858, 0.7801515, -0.809017), (-0.4850858, 0.7801515, -1.809017), (-0.055220116, 8.316648, 0.95988023), (-0.6430054, 8.316648, 1.7688973)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves86" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.26136208, 0.26935813), (0.22004268, 0.45524025), (0.2854111, 0.4616781), (0.34956124, 0.28482875), (0.337909, 0.3013355), (0.17125718, 0.18083973), (0.0862789, 0.25566414), (0.8791423, 0.6506155), (0.9957965, 0.42933214), (0.6907481, 0.9010925)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4463116, 0, 0.40637752), (0.4463116, -1, 0.40637752), (-0.061526068, 0, -0.4407199), (-0.061526068, -1, -0.4407199), (-0.40829292, 0, -0.15274867), (-0.40829292, -1, -0.15274867), (0.27088824, 10, 0.43757817), (0.27088824, 11, 0.43757817), (0.49849114, 10, -0.13936593), (0.49849114, 11, -0.13936593), (-0.27265126, 10, -0.082667425), (-0.27265126, 11, -0.082667425), (-0.08205611, 10, 0.2823258), (-0.08205611, 11, 0.2823258), (0.9071524, 6.5061555, 0.173894), (1.8582089, 6.5061555, -0.13512301), (0.5828438, 4.293321, -0.809017), (0.5828438, 4.293321, -1.809017), (-0.6569405, 9.010925, 0.5227048), (-1.2447257, 9.010925, 1.3317218)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves87" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.23625611, 0.488139), (0.42424864, 0.28232977), (0.058084555, 0.39576867), (0.49248695, 0.13736063), (0.28667638, 0.18362665), (0.031961195, 0.13856438), (0.035619307, 0.37665945), (0.36622342, 0.80331564), (0.69645107, 0.07657279), (0.571889, 0.36687902)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.26211584, 0, 0.32142273), (0.26211584, -1, 0.32142273), (0.07689819, 0, -0.5806074), (0.07689819, -1, -0.5806074), (-0.5535577, 0, 0.121777244), (-0.5535577, -1, 0.121777244), (0.13063774, 10, 0.53493375), (0.13063774, 11, 0.53493375), (0.3805785, 10, -0.05996921), (0.3805785, 11, -0.05996921), (-0.15056887, 10, 0.016961597), (-0.15056887, 11, 0.016961597), (-0.033875972, 10, 0.38766643), (-0.033875972, 11, 0.38766643), (0.7208237, 8.033156, -0.39956674), (1.6718802, 8.033156, -0.7085838), (0.23094204, 0.76572794, -0.809017), (0.23094204, 0.76572794, -1.809017), (-0.54389876, 3.6687903, 0.60483444), (-1.1316841, 3.6687903, 1.4138514)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves88" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.35347432, 0.473258), (0.31740198, 0.24525133), (0.35920447, 0.2896858), (0.37738085, 0.16637318), (0.10698993, 0.0820167), (0.3461299, 0.46207216), (0.4279493, 0.36469668), (0.84585506, 0.75230086), (0.33829302, 0.24759306), (0.79180694, 0.46785215)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.16478737, 0, 0.40701696), (0.16478737, -1, 0.40701696), (-0.07050174, 0, -0.6106045), (-0.07050174, -1, -0.6106045), (-0.5450603, 0, -0.18210366), (-0.5450603, -1, -0.18210366), (0.1582303, 10, 0.42879298), (0.1582303, 11, 0.42879298), (0.14996168, 10, -0.0332912), (0.14996168, 11, -0.0332912), (-0.6429068, 10, -0.1372368), (-0.6429068, 11, -0.1372368), (-0.407004, 10, 0.49694028), (-0.407004, 11, 0.49694028), (0.8950601, 7.5230083, 0.13667768), (1.8461167, 7.5230083, -0.17233934), (-0.19009796, 2.4759307, -0.809017), (-0.19009796, 2.4759307, -1.809017), (-0.7530532, 4.678521, 0.45287487), (-1.3408384, 4.678521, 1.2618918)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves89" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.17817855, 0.34185645), (0.42738035, 0.124479815), (0.25688183, 0.30809897), (0.38017553, 0.12076929), (0.48459548, 0.10395538), (0.46927178, 0.44286573), (0.34074467, 0.3502936), (0.91031766, 0.30375558), (0.3901926, 0.76896524), (0.8278831, 0.31386352)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.45647386, 0, 0.3264959), (0.45647386, -1, 0.3264959), (-0.012202107, 0, -0.7083107), (-0.012202107, -1, -0.7083107), (-0.5647192, 0, -0.07339346), (-0.5647192, -1, -0.07339346), (0.114858426, 10, 0.41749528), (0.114858426, 11, 0.41749528), (0.5219811, 10, 0.065646574), (0.5219811, 11, 0.065646574), (-0.69702137, 10, -0.24279581), (-0.69702137, 11, -0.24279581), (-0.32406744, 10, 0.4555895), (-0.32406744, 11, 0.4555895), (0.91847754, 3.0375557, 0.20874907), (1.869534, 3.0375557, -0.10026794), (-0.12908633, 7.6896524, -0.809017), (-0.12908633, 7.6896524, -1.809017), (-0.7873637, 3.1386352, 0.4279468), (-1.3751489, 3.1386352, 1.2369639)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves90" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.115677305, 0.09337079), (0.027630318, 0.28796306), (0.0044353227, 0.18142347), (0.016424729, 0.39694142), (0.09622099, 0.25065663), (0.40289652, 0.44345635), (0.13039136, 0.1508631), (0.5067779, 0.13162531), (0.7726153, 0.7829684), (0.33635563, 0.640691)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.75224, 0, 0.3600949), (0.75224, -1, 0.3600949), (-0.38604343, 0, -0.57605), (-0.38604343, -1, -0.57605), (-0.77690136, 0, 0.24799523), (-0.77690136, -1, 0.24799523), (0.37751374, 10, 0.13908638), (0.37751374, 11, 0.13908638), (0.23884387, 10, -0.17305155), (0.23884387, 11, -0.17305155), (-0.6585687, 10, -0.18891458), (-0.6585687, 11, -0.18891458), (-0.12400956, 10, 0.19115625), (-0.12400956, 11, 0.19115625), (0.7718831, 1.3162531, -0.2424221), (1.7229396, 1.3162531, -0.5514391), (0.3204785, 7.829684, -0.809017), (0.3204785, 7.829684, -1.809017), (-0.3198932, 6.40691, 0.76758397), (-0.9076784, 6.40691, 1.576601)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves91" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.19783434, 0.25057033), (0.34816396, 0.45274302), (0.39949796, 0.019338824), (0.44599116, 0.17475674), (0.36994502, 0.38499272), (0.43660724, 0.01566173), (0.4940919, 0.19760224), (0.5668993, 0.8679274), (0.4409807, 0.6526121), (0.5305876, 0.7877997)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.52459836, 0, 0.36828667), (0.52459836, -1, 0.36828667), (0.08762171, 0, -0.4427402), (0.08762171, -1, -0.4427402), (-0.7875381, 0, -0.14361131), (-0.7875381, -1, -0.14361131), (0.16620353, 10, 0.49999395), (0.16620353, 11, 0.49999395), (0.5781317, 10, -0.19714636), (0.5781317, 11, -0.19714636), (-0.2715265, 10, -0.34838295), (-0.2715265, 11, -0.34838295), (-0.46990934, 10, 0.35028502), (-0.46990934, 11, 0.35028502), (0.79372346, 8.679274, -0.17520429), (1.74478, 8.679274, -0.4842213), (-0.069381356, 6.526121, -0.809017), (-0.069381356, 6.526121, -1.809017), (-0.5046188, 7.877997, 0.63337296), (-1.092404, 7.877997, 1.44239)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves92" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.30993894, 0.020479128), (0.3192799, 0.38340002), (0.08404976, 0.38118544), (0.21643871, 0.19287582), (0.3430485, 0.44867313), (0.1558055, 0.46975833), (0.31826732, 0.38109547), (0.18998657, 0.7906926), (0.18269835, 0.93667376), (0.91657513, 0.024603426)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.63681024, 0, 0.5168511), (0.63681024, -1, 0.5168511), (0.012907655, 0, -0.49883986), (0.012907655, -1, -0.49883986), (-0.5579948, 0, 0.09725373), (-0.5579948, -1, 0.09725373), (0.18343581, 10, 0.2760406), (0.18343581, 11, 0.2760406), (0.589982, 10, -0.25697637), (0.589982, 11, -0.25697637), (-0.5383469, 10, 0.019114012), (-0.5383469, 11, 0.019114012), (-0.3026902, 10, 0.4794455), (-0.3026902, 11, 0.4794455), (0.65680194, 7.906926, -0.59660554), (1.6078584, 7.906926, -0.90562254), (-0.37301046, 9.366737, -0.809017), (-0.37301046, 9.366737, -1.809017), (-0.8717148, 0.24603426, 0.36666214), (-1.4595001, 0.24603426, 1.1756792)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves93" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.21713662, 0.09414118), (0.12106928, 0.13379784), (0.22859727, 0.31223983), (0.43373027, 0.030019157), (0.44860223, 0.21517517), (0.14950414, 0.13543992), (0.42788076, 0.16646533), (0.60180366, 0.15765055), (0.12425736, 0.05699936), (0.9095494, 0.3480045)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.65501374, 0, 0.4299635), (0.65501374, -1, 0.4299635), (-0.36681536, 0, -0.7007723), (-0.36681536, -1, -0.7007723), (-0.57105595, 0, -0.04304993), (-0.57105595, -1, -0.04304993), (0.028549915, 10, 0.4430067), (0.028549915, 11, 0.4430067), (0.5531229, 10, -0.03545465), (0.5531229, 11, -0.03545465), (-0.21668735, 10, -0.07909815), (-0.21668735, 11, -0.07909815), (-0.40693882, 10, 0.29868776), (-0.40693882, 11, 0.29868776), (0.8064032, 1.5765054, -0.13618007), (1.7574598, 1.5765054, -0.44519708), (-0.44171196, 0.5699936, -0.809017), (-0.44171196, 0.5699936, -1.809017), (-0.8650329, 3.4800448, 0.3715168), (-1.4528182, 3.4800448, 1.1805338)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves94" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.27010292, 0.45799208), (0.047124766, 0.39074335), (0.44209602, 0.08271211), (0.36767453, 0.22517018), (0.037701678, 0.34300798), (0.17977223, 0.082436375), (0.41096663, 0.25822878), (0.005214532, 0.48677772), (0.24651133, 0.93718535), (0.52166677, 0.014683503)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.25859702, 0, 0.3541262), (0.25859702, -1, 0.3541262), (-0.30271357, 0, -0.492899), (-0.30271357, -1, -0.492899), (-0.7117919, 0, -0.21082082), (-0.7117919, -1, -0.21082082), (0.21414956, 10, 0.43725595), (0.21414956, 11, 0.43725595), (0.23747146, 10, -0.26584885), (0.23747146, 11, -0.26584885), (-0.18406913, 10, -0.11996455), (-0.18406913, 11, -0.11996455), (-0.39085248, 10, 0.38522446), (-0.39085248, 11, 0.38522446), (0.58967954, 4.8677773, -0.80318695), (1.5407361, 4.8677773, -1.112204), (-0.2979938, 9.371854, -0.809017), (-0.2979938, 9.371854, -1.809017), (-0.49613458, 0.14683503, 0.63953716), (-1.0839199, 0.14683503, 1.4485542)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves95" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.22026794, 0.41407287), (0.27532655, 0.4803621), (0.49504822, 0.23429777), (0.49278823, 0.10045666), (0.26337826, 0.17854182), (0.394087, 0.24652724), (0.3801531, 0.33803925), (0.77391577, 0.99375033), (0.39906532, 0.75741655), (0.9880912, 0.021388182)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.34776255, 0, 0.33326283), (0.34776255, -1, 0.33326283), (0.018230269, 0, -0.4203959), (0.018230269, -1, -0.4203959), (-0.5483893, 0, -0.31686574), (-0.5483893, -1, -0.31686574), (0.095539965, 10, 0.523831), (0.095539965, 11, 0.523831), (0.35543188, 10, -0.063055016), (0.35543188, 11, -0.063055016), (-0.46609986, 10, -0.24264197), (-0.46609986, 11, -0.24264197), (-0.36154708, 10, 0.45551303), (-0.36154708, 11, 0.45551303), (0.86892664, 9.937503, 0.05624715), (1.8199831, 9.937503, -0.25276986), (-0.11865585, 7.574166, -0.809017), (-0.11865585, 7.574166, -1.809017), (-0.9397306, 0.21388184, 0.3172458), (-1.5275158, 0.21388184, 1.1262628)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves96" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3004719, 0.07089268), (0.40170076, 0.1779489), (0.3966434, 0.44133347), (0.12023594, 0.045533165), (0.39655095, 0.3183978), (0.13203228, 0.08543216), (0.33840534, 0.39987054), (0.8886666, 0.53473085), (0.31663638, 0.5609154), (0.25978395, 0.5535153)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.59786785, 0, 0.49473092), (0.59786785, -1, 0.49473092), (-0.010961922, 0, -0.6650533), (-0.010961922, -1, -0.6650533), (-0.38723427, 0, -0.27082336), (-0.38723427, -1, -0.27082336), (0.043304615, 10, 0.13430646), (0.043304615, 11, 0.13430646), (0.5642919, 10, -0.13504824), (0.5642919, 11, -0.13504824), (-0.15885743, 10, -0.08041637), (-0.15885743, 11, -0.08041637), (-0.3218426, 10, 0.5044435), (-0.3218426, 11, 0.5044435), (0.91061234, 5.3473086, 0.18454249), (1.8616688, 5.3473086, -0.124474525), (-0.21555685, 5.609154, -0.809017), (-0.21555685, 5.609154, -1.809017), (-0.24706922, 5.5351534, 0.8204937), (-0.8348545, 5.5351534, 1.6295108)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves97" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.07364226, 0.20522785), (0.15989093, 0.23128505), (0.3013475, 0.25871545), (0.04922643, 0.14673832), (0.41879204, 0.04680047), (0.21333338, 0.35476777), (0.14624602, 0.26570657), (0.12627278, 0.4524896), (0.31236395, 0.77562976), (0.39024955, 0.8727047)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6858353, 0, 0.29648367), (0.6858353, -1, 0.29648367), (-0.26387623, 0, -0.6219035), (-0.26387623, -1, -0.6219035), (-0.5955326, 0, -0.10784721), (-0.5955326, -1, -0.10784721), (0.13955644, 10, 0.09457106), (0.13955644, 11, 0.09457106), (0.42580354, 10, 0.09155148), (0.42580354, 11, 0.09155148), (-0.46279845, 10, -0.06296106), (-0.46279845, 11, -0.06296106), (-0.13908823, 10, 0.31089908), (-0.13908823, 11, 0.31089908), (0.6336565, 4.524896, -0.6678397), (1.584713, 4.524896, -0.97685677), (-0.22057939, 7.7562976, -0.809017), (-0.22057939, 7.7562976, -1.809017), (-0.37114936, 8.727047, 0.7303442), (-0.9589346, 8.727047, 1.5393612)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves98" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.0059703933, 0.14846858), (0.33110818, 0.22425278), (0.46830082, 0.42253748), (0.11372625, 0.36367667), (0.48501086, 0.24212767), (0.10993405, 0.2688013), (0.45273855, 0.4369944), (0.23496221, 0.5814304), (0.09779722, 0.79746735), (0.26637614, 0.11667458)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.80417633, 0, 0.2672631), (0.80417633, -1, 0.2672631), (-0.06673178, 0, -0.6275927), (-0.06673178, -1, -0.6275927), (-0.37907928, 0, -0.3451305), (-0.37907928, -1, -0.3451305), (0.34587708, 10, 0.22610852), (0.34587708, 11, 0.22610852), (0.60359186, 10, -0.0460088), (0.60359186, 11, -0.0460088), (-0.32026285, 10, -0.005874342), (-0.32026285, 11, -0.005874342), (-0.43057996, 10, 0.57689834), (-0.43057996, 11, 0.57689834), (0.6731403, 5.814304, -0.5463213), (1.6241968, 5.814304, -0.8553383), (-0.47281772, 7.9746733, -0.809017), (-0.47281772, 7.9746733, -1.809017), (-0.25333875, 1.1667458, 0.8159386), (-0.841124, 1.1667458, 1.6249557)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves99" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3454338, 0.2500933), (0.12585199, 0.013884717), (0.34646875, 0.23507272), (0.03766193, 0.46247122), (0.38920036, 0.18714502), (0.20283525, 0.04675361), (0.38356462, 0.49425617), (0.9401103, 0.52343005), (0.5658123, 0.014439422), (0.3079868, 0.784976)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.38467658, 0, 0.4704228), (0.38467658, -1, 0.4704228), (-0.43167615, 0, -0.79778403), (-0.43167615, -1, -0.79778403), (-0.60162693, 0, -0.15098833), (-0.60162693, -1, -0.15098833), (0.4398363, 10, 0.1805734), (0.4398363, 11, 0.1805734), (0.48015264, 10, -0.031133981), (0.48015264, 11, -0.031133981), (-0.1636889, 10, -0.1496495), (-0.1636889, 11, -0.1496495), (-0.36479163, 10, 0.61278415), (-0.36479163, 11, 0.61278415), (0.9293003, 5.2343006, 0.24205829), (1.8803568, 5.2343006, -0.066958725), (0.077366985, 0.14439422, -0.809017), (0.077366985, 0.14439422, -1.809017), (-0.29291284, 7.84976, 0.7871864), (-0.8806981, 7.84976, 1.5962033)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves100" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.024911815, 0.45766068), (0.307777, 0.15813124), (0.45040137, 0.05703594), (0.4576444, 0.34330735), (0.3615415, 0.3076053), (0.20618933, 0.23016818), (0.0038866738, 0.018064339), (0.61341596, 0.11793109), (0.48948196, 0.6077017), (0.41492516, 0.67278326)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.49210283, 0, 0.1848057), (0.49210283, -1, 0.1848057), (-0.1330245, 0, -0.6810861), (-0.1330245, -1, -0.6810861), (-0.73319423, 0, -0.2121721), (-0.73319423, -1, -0.2121721), (0.3265047, 10, 0.5637322), (0.3265047, 11, 0.5637322), (0.52465224, 10, -0.13713546), (0.52465224, 11, -0.13713546), (-0.340098, 10, -0.095684804), (-0.340098, 11, -0.095684804), (-0.0036964465, 10, 0.019265387), (-0.0036964465, 11, 0.019265387), (0.8106217, 1.1793109, -0.123197086), (1.7616782, 1.1793109, -0.4322141), (-0.012364696, 6.0770173, -0.809017), (-0.012364696, 6.0770173, -1.809017), (-0.3946173, 6.7278323, 0.7132938), (-0.9824025, 6.7278323, 1.5223107)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves101" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.14516883, 0.19812739), (0.27388465, 0.29221782), (0.27767128, 0.087290175), (0.43646204, 0.28184038), (0.43867758, 0.14858413), (0.031004556, 0.23450033), (0.105923735, 0.12474414), (0.19171439, 0.37581372), (0.3655157, 0.6493783), (0.85043573, 0.5580593)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.62456244, 0, 0.34810147), (0.62456244, -1, 0.34810147), (-0.09405318, 0, -0.5726078), (-0.09405318, -1, -0.5726078), (-0.76716864, 0, -0.028403085), (-0.76716864, -1, -0.028403085), (0.26804614, 10, 0.5235555), (0.26804614, 11, 0.5235555), (0.50454277, 10, 0.015351755), (0.50454277, 11, 0.015351755), (-0.24124709, 10, 0.047381375), (-0.24124709, 11, 0.047381375), (-0.10073946, 10, 0.15747638), (-0.10073946, 11, 0.15747638), (0.6574296, 3.7581375, -0.5946738), (1.608486, 3.7581375, -0.9036908), (-0.15809575, 6.493783, -0.809017), (-0.15809575, 6.493783, -1.809017), (-0.8088125, 5.580593, 0.41236335), (-1.3965977, 5.580593, 1.2213804)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves102" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3347031, 0.30024898), (0.038369194, 0.17310861), (0.037114237, 0.30877155), (0.3258317, 0.38044417), (0.28134447, 0.2519342), (0.20152116, 0.33901316), (0.20027283, 0.14457174), (0.40947458, 0.040677886), (0.4791647, 0.5375672), (0.1987022, 0.9769199)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.3471812, 0, 0.4475091), (0.3471812, -1, 0.4475091), (-0.44092888, 0, -0.6689692), (-0.44092888, -1, -0.6689692), (-0.6439148, 0, 0.17210636), (-0.6439148, -1, 0.17210636), (0.36182392, 10, 0.44339544), (0.36182392, 11, 0.44339544), (0.4156577, 10, -0.11687882), (0.4156577, 11, -0.11687882), (-0.44087183, 10, -0.05827321), (-0.44087183, 11, -0.05827321), (-0.19047078, 10, 0.20645943), (-0.19047078, 11, 0.20645943), (0.7365356, 0.40677887, -0.3512105), (1.6875921, 0.40677887, -0.66022754), (-0.02449336, 5.375672, -0.809017), (-0.02449336, 5.375672, -1.809017), (-0.18897703, 9.769199, 0.86270016), (-0.77676225, 9.769199, 1.6717172)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves103" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.011830477, 0.13051836), (0.37447706, 0.070072114), (0.17298803, 0.4576657), (0.40470693, 0.17671965), (0.04579255, 0.47677082), (0.24559513, 0.009600564), (0.124918394, 0.11886689), (0.17973575, 0.5507404), (0.0895372, 0.41012162), (0.7036129, 0.9552708)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.8156747, 0, 0.27685928), (0.8156747, -1, 0.27685928), (-0.1063737, 0, -0.75232744), (-0.1063737, -1, -0.75232744), (-0.452949, 0, -0.025815984), (-0.452949, -1, -0.025815984), (0.16807038, 10, 0.45931628), (0.16807038, 11, 0.45931628), (0.32379016, 10, -0.371565), (0.32379016, 11, -0.371565), (-0.15348786, 10, -0.19572389), (-0.15348786, 11, -0.19572389), (-0.118804455, 10, 0.1574688), (-0.118804455, 11, 0.1574688), (0.6530781, 5.5074043, -0.6080663), (1.6041346, 5.5074043, -0.9170833), (-0.48252794, 4.101216, -0.809017), (-0.48252794, 4.101216, -1.809017), (-0.6691756, 9.552708, 0.51381546), (-1.2569609, 9.552708, 1.3228325)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves104" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.44680828, 0.11465511), (0.24842262, 0.4022891), (0.38000327, 0.083040275), (0.05255885, 0.31086844), (0.027672483, 0.2675969), (0.15961069, 0.15884902), (0.4887467, 0.08388447), (0.7949467, 0.43966568), (0.11661188, 0.34195027), (0.26296815, 0.7935355)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.41707313, 0, 0.58232355), (0.41707313, -1, 0.58232355), (-0.059287336, 0, -0.48355827), (-0.059287336, -1, -0.48355827), (-0.73403627, 0, -0.14150046), (-0.73403627, -1, -0.14150046), (0.29565346, 10, 0.14862248), (0.29565346, 11, 0.14862248), (0.18360761, 10, -0.20793918), (0.18360761, 11, -0.20793918), (-0.2448912, 10, -0.080040716), (-0.2448912, 11, -0.080040716), (-0.46482572, 10, 0.23491551), (-0.46482572, 11, 0.23491551), (0.8765665, 4.3966565, 0.079760425), (1.827623, 4.3966565, -0.22925659), (-0.45069975, 3.4195027, -0.809017), (-0.45069975, 3.4195027, -1.809017), (-0.25009757, 7.935355, 0.8182935), (-0.8378828, 7.935355, 1.6273105)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves105" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.28731596, 0.0046115536), (0.16076075, 0.4882688), (0.08733397, 0.080633976), (0.38219485, 0.28825158), (0.026250426, 0.17078367), (0.46912697, 0.25090927), (0.06232979, 0.37248063), (0.09653142, 0.68556625), (0.16132388, 0.72022146), (0.39730453, 0.0400537)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.673417, 0, 0.5061224), (0.673417, -1, 0.5061224), (-0.11180245, 0, -0.41399923), (-0.11180245, -1, -0.41399923), (-0.84264314, 0, 0.1864574), (-0.84264314, -1, 0.1864574), (0.27414355, 10, 0.4712695), (0.27414355, 11, 0.4712695), (0.12534976, 10, -0.13005507), (0.12534976, 11, -0.13005507), (-0.5143748, 10, -0.30199647), (-0.5143748, 11, -0.30199647), (-0.059279155, 10, 0.39174157), (-0.059279155, 11, 0.39174157), (0.6228523, 6.8556623, -0.7010916), (1.5739088, 6.8556623, -1.0101086), (-0.39813766, 7.2022147, -0.809017), (-0.39813766, 7.2022147, -1.809017), (-0.3778591, 0.40053698, 0.7254693), (-0.9656443, 0.40053698, 1.5344863)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves106" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.43145815, 0.33569106), (0.13348414, 0.4552959), (0.32949916, 0.1425186), (0.33938858, 0.40002668), (0.40931284, 0.31689408), (0.08304, 0.05470437), (0.4355107, 0.44835615), (0.4903798, 0.7392364), (0.7291544, 0.5319957), (0.7986574, 0.41768613)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.22145428, 0, 0.503413), (0.22145428, -1, 0.503413), (-0.16324903, 0, -0.4406749), (-0.16324903, -1, -0.4406749), (-0.6958157, 0, -0.10341493), (-0.6958157, -1, -0.10341493), (0.380448, 10, 0.46300364), (0.380448, 11, 0.46300364), (0.5755453, 10, -0.12988807), (0.5755453, 11, -0.12988807), (-0.100836635, 10, -0.050276194), (-0.100836635, 11, -0.050276194), (-0.4141953, 10, 0.58293635), (-0.4141953, 11, 0.58293635), (0.7659262, 7.3923645, -0.2607557), (1.7169827, 7.3923645, -0.5697727), (0.26938716, 5.3199573, -0.809017), (0.26938716, 5.3199573, -1.809017), (-0.7595684, 4.1768613, 0.4481413), (-1.3473536, 4.1768613, 1.2571583)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves107" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.2592706, 0.45238072), (0.32464823, 0.18984897), (0.49346697, 0.29529092), (0.4475287, 0.20809783), (0.171056, 0.29725698), (0.40435547, 0.4065707), (0.4709552, 0.20325632), (0.5609092, 0.5352118), (0.64663744, 0.9386204), (0.21063752, 0.12196478)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.2742359, 0, 0.34837523), (0.2742359, -1, 0.34837523), (-0.09454794, 0, -0.65542597), (-0.09454794, -1, -0.65542597), (-0.4909558, 0, -0.33394575), (-0.4909558, -1, -0.33394575), (0.1979128, 10, 0.51183444), (0.1979128, 11, 0.51183444), (0.3374072, 10, -0.18762675), (0.3374072, 11, -0.18762675), (-0.6243459, 10, -0.2014932), (-0.6243459, 11, -0.2014932), (-0.44790503, 10, 0.34878948), (-0.44790503, 11, 0.34878948), (0.7915475, 5.352118, -0.18190145), (1.742604, 5.352118, -0.49091846), (0.17238262, 9.386204, -0.809017), (0.17238262, 9.386204, -1.809017), (-0.2003282, 1.2196479, 0.854453), (-0.7881134, 1.2196479, 1.66347)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves108" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3043712, 0.13573214), (0.029518636, 0.25874376), (0.29617527, 0.24179618), (0.23151676, 0.20166014), (0.4601991, 0.40459254), (0.38574618, 0.22616656), (0.18851939, 0.49806613), (0.75359845, 0.19887085), (0.5627654, 0.11223263), (0.50122684, 0.6050799)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.53249335, 0, 0.4773888), (0.53249335, -1, 0.4773888), (-0.40099823, 0, -0.5996889), (-0.40099823, -1, -0.5996889), (-0.61350274, 0, -0.09683616), (-0.61350274, -1, -0.09683616), (0.19179021, 10, 0.29383317), (0.19179021, 11, 0.29383317), (0.6754889, 10, -0.18511291), (0.6754889, 11, -0.18511291), (-0.4418331, 10, -0.2421859), (-0.4418331, 11, -0.2421859), (-0.17929259, 10, 0.5563218), (-0.17929259, 11, 0.5563218), (0.8615459, 1.9887085, 0.033531703), (1.8126024, 1.9887085, -0.2754853), (0.07378517, 1.1223264, -0.809017), (0.07378517, 1.1223264, -1.809017), (-0.47669506, 6.050799, 0.6536608), (-1.0644803, 6.050799, 1.4626777)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves109" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.20782031, 0.38540354), (0.27156335, 0.42586675), (0.19865048, 0.17250712), (0.43397048, 0.4269939), (0.43017378, 0.14011748), (0.24023578, 0.068736844), (0.25165161, 0.41247395), (0.8990534, 0.21441212), (0.49649766, 0.5034385), (0.92806983, 0.26368186)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.3868671, 0, 0.33352107), (0.3868671, -1, 0.33352107), (-0.0182252, 0, -0.46448356), (-0.0182252, -1, -0.46448356), (-0.7148285, 0, 0.033611383), (-0.7148285, -1, 0.033611383), (0.40609536, 10, 0.56591886), (0.40609536, 11, 0.56591886), (0.4914786, 10, 0.019573594), (0.4914786, 11, 0.019573594), (-0.20657967, 10, -0.17311397), (-0.20657967, 11, -0.17311397), (-0.23933493, 10, 0.49023858), (-0.23933493, 11, 0.49023858), (0.91438556, 2.1441212, 0.19615528), (1.865442, 2.1441212, -0.11286173), (-0.0041172537, 5.034385, -0.809017), (-0.0041172537, 5.034385, -1.809017), (-0.8826469, 2.6368184, 0.35871953), (-1.4704322, 2.6368184, 1.1677365)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves110" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.24266884, 0.12589733), (0.2830926, 0.07106343), (0.020045562, 0.23228538), (0.19036007, 0.15820476), (0.017332325, 0.21021548), (0.24314918, 0.29305252), (0.076285936, 0.101998895), (0.14052382, 0.49751067), (0.26327217, 0.670998), (0.57492495, 0.9253552)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.60052925, 0, 0.43779263), (0.60052925, -1, 0.43779263), (-0.21321993, 0, -0.75152546), (-0.21321993, -1, -0.75152546), (-0.722858, 0, 0.21482526), (-0.722858, -1, 0.21482526), (0.15046167, 10, 0.23924804), (0.15046167, 11, 0.23924804), (0.14004558, 10, -0.16471191), (0.14004558, 11, -0.16471191), (-0.421629, 10, -0.10615361), (-0.421629, 11, -0.10615361), (-0.07255224, 10, 0.12557255), (-0.07255224, 11, 0.12557255), (0.6388335, 4.9751067, -0.6519066), (1.58989, 4.9751067, -0.9609236), (-0.27829027, 6.70998, -0.809017), (-0.27829027, 6.70998, -1.809017), (-0.5467861, 9.2535515, 0.60273665), (-1.1345713, 9.2535515, 1.4117537)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves111" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.37468323, 0.2612678), (0.46526828, 0.4142103), (0.18050544, 0.29694742), (0.30509356, 0.26531655), (0.34052363, 0.053903222), (0.16113588, 0.32521936), (0.44120815, 0.32913452), (0.6609916, 0.4590666), (0.5794972, 0.5109434), (0.4505277, 0.7094625)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.34623113, 0, 0.48718056), (0.34623113, -1, 0.48718056), (0.20263712, 0, -0.47391385), (0.20263712, -1, -0.47391385), (-0.6030703, 0, 0.015443991), (-0.6030703, -1, 0.015443991), (0.25233102, 10, 0.38708088), (0.25233102, 11, 0.38708088), (0.35554072, 10, 0.06161896), (0.35554072, 11, 0.06161896), (-0.4040153, 10, -0.029863352), (-0.4040153, 11, -0.029863352), (-0.4196139, 10, 0.46547532), (-0.4196139, 11, 0.46547532), (0.8279045, 4.590666, -0.0700059), (1.7789611, 4.590666, -0.37902293), (0.09345459, 5.109434, -0.809017), (0.09345459, 5.109434, -1.809017), (-0.42847732, 7.0946255, 0.68869305), (-1.0162625, 7.0946255, 1.49771)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves112" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3513853, 0.12118364), (0.2321915, 0.2905982), (0.2906606, 0.23104446), (0.49654812, 0.4231685), (0.02534338, 0.20627292), (0.16559513, 0.31971037), (0.4039024, 0.43926954), (0.76293075, 0.79327697), (0.35031757, 0.2722518), (0.13986509, 0.51174515)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5016168, 0, 0.51437044), (0.5016168, -1, 0.51437044), (-0.14401843, 0, -0.5739181), (-0.14401843, -1, -0.5739181), (-0.6257315, 0, -0.087348096), (-0.6257315, -1, -0.087348096), (0.40245718, 10, 0.6273144), (0.40245718, 11, 0.6273144), (0.14534716, 10, -0.15904675), (0.14534716, 11, -0.15904675), (-0.40139702, 10, -0.035173327), (-0.40139702, 11, -0.035173327), (-0.38413405, 10, 0.56408226), (-0.38413405, 11, 0.56408226), (0.8649361, 7.93277, 0.043965533), (1.8159926, 7.93277, -0.26505148), (-0.17596225, 2.7225182, -0.809017), (-0.17596225, 2.7225182, -1.809017), (-0.13301961, 5.1174517, 0.9033556), (-0.72080487, 5.1174517, 1.7123727)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves113" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.14491557, 0.4460337), (0.21356213, 0.3698667), (0.31994742, 0.22753023), (0.26129904, 0.22495982), (0.40000114, 0.18120189), (0.1713778, 0.2914516), (0.081798755, 0.4959032), (0.2878127, 0.78489506), (0.95257175, 0.033201423), (0.57141274, 0.021536427)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.3890304, 0, 0.2713192), (0.3890304, -1, 0.2713192), (-0.11932572, 0, -0.5097886), (-0.11932572, -1, -0.5097886), (-0.6184347, 0, -0.11900581), (-0.6184347, -1, -0.11900581), (0.2139495, 10, 0.33081546), (0.2139495, 11, 0.33081546), (0.4869315, 10, -0.022988254), (0.4869315, 11, -0.022988254), (-0.3779203, 10, -0.04858405), (-0.3779203, 11, -0.04858405), (-0.077795245, 10, 0.5211804), (-0.077795245, 11, 0.5211804), (0.69233936, 7.8489504, -0.4872326), (1.6433959, 7.8489504, -0.7962496), (0.53203, 0.3320142, -0.809017), (0.53203, 0.3320142, -1.809017), (-0.5434458, 0.21536428, 0.6051635), (-1.1312311, 0.21536428, 1.4141805)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves114" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.47622252, 0.29843843), (0.21702525, 0.41848812), (0.2604244, 0.40048698), (0.18265074, 0.38138038), (0.3564997, 0.36639252), (0.18517496, 0.1542675), (0.4517368, 0.2661348), (0.80826575, 0.6868217), (0.11429215, 0.53436065), (0.64395356, 0.027138334)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.21431018, 0, 0.5458561), (0.21431018, -1, 0.5458561), (-0.08667563, 0, -0.470453), (-0.08667563, -1, -0.470453), (-0.47556606, 0, -0.105903625), (-0.47556606, -1, -0.105903625), (0.3627143, 10, 0.30050376), (0.3627143, 11, 0.30050376), (0.5544115, 10, -0.18625331), (0.5544115, 11, -0.18625331), (-0.25556022, 10, -0.10213841), (-0.25556022, 11, -0.10213841), (-0.42962724, 10, 0.40572914), (-0.42962724, 11, 0.40572914), (0.881405, 6.868217, 0.094651595), (1.8324615, 6.868217, -0.21436542), (-0.45342678, 5.3436065, -0.809017), (-0.45342678, 5.3436065, -1.809017), (-0.61243623, 0.27138335, 0.55503905), (-1.2002215, 0.27138335, 1.364056)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves115" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.47785357, 0.43138787), (0.26986825, 0.3964557), (0.104807936, 0.2156062), (0.36421257, 0.23708658), (0.04237793, 0.0020662888), (0.0648657, 0.14349511), (0.12792064, 0.02453682), (0.5820062, 0.3160794), (0.67688805, 0.9459818), (0.8491694, 0.06642184)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.08631654, 0, 0.5058995), (0.08631654, -1, 0.5058995), (-0.037505254, 0, -0.48827758), (-0.037505254, -1, -0.48827758), (-0.70792913, 0, 0.12521218), (-0.70792913, -1, 0.12521218), (0.22548275, 10, 0.43747634), (0.22548275, 11, 0.43747634), (0.04151834, 10, 0.011423838), (0.04151834, 11, 0.011423838), (-0.17459907, 10, -0.008135022), (-0.17459907, 11, -0.008135022), (-0.12165976, 10, 0.06406648), (-0.12165976, 11, 0.06406648), (0.7992114, 3.1607943, -0.15831429), (1.7502679, 3.1607943, -0.4673313), (0.20794436, 9.459818, -0.809017), (0.20794436, 9.459818, -1.809017), (-0.80760807, 0.66421837, 0.4132384), (-1.3953933, 0.66421837, 1.2222555)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves116" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.26772004, 0.038895734), (0.29711068, 0.18065959), (0.36441636, 0.12498359), (0.331327, 0.11212167), (0.46138385, 0.21296826), (0.1160977, 0.31733337), (0.0024748314, 0.47797444), (0.23427027, 0.1813274), (0.31924656, 0.8768101), (0.51711375, 0.37468162)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6594476, 0, 0.48198757), (0.6594476, -1, 0.48198757), (-0.13232166, 0, -0.66286033), (-0.13232166, -1, -0.66286033), (-0.69980806, 0, -0.13703494), (-0.69980806, -1, -0.13703494), (0.10663405, 10, 0.3659745), (0.10663405, 11, 0.3659745), (0.5639817, 10, -0.029719494), (0.5639817, 11, -0.029719494), (-0.37004247, 10, 0.004136385), (-0.37004247, 11, 0.004136385), (-0.0023537045, 10, 0.47873923), (-0.0023537045, 11, 0.47873923), (0.67288893, 1.813274, -0.5470949), (1.6239455, 1.813274, -0.8561119), (-0.21248843, 8.768101, -0.809017), (-0.21248843, 8.768101, -1.809017), (-0.49180442, 3.7468162, 0.64268315), (-1.0795897, 3.7468162, 1.4517002)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves117" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.35259408, 0.17332493), (0.35250965, 0.11822), (0.41762072, 0.37273902), (0.20642962, 0.29691187), (0.47330654, 0.24084646), (0.25125754, 0.43613485), (0.36415237, 0.32822663), (0.4174794, 0.489044), (0.9738614, 0.8001039), (0.26418403, 0.5077574)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.45087782, 0, 0.49909317), (0.45087782, -1, 0.49909317), (-0.10389732, 0, -0.71337503), (-0.10389732, -1, -0.71337503), (-0.44485104, 0, -0.27307984), (-0.44485104, -1, -0.27307984), (0.28237998, 10, 0.29818043), (0.28237998, 11, 0.29818043), (0.5917073, 10, -0.048589118), (0.5917073, 11, -0.048589118), (-0.56247437, 10, -0.06849854), (-0.56247437, 11, -0.06849854), (-0.3463295, 10, 0.4407559), (-0.3463295, 11, 0.4407559), (0.73944354, 4.89044, -0.34226084), (1.6905, 4.89044, -0.65127784), (0.55705744, 8.0010395, -0.809017), (0.55705744, 8.0010395, -1.809017), (-0.25125396, 5.077574, 0.8174533), (-0.8390392, 5.077574, 1.6264703)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves118" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.053750977, 0.12679236), (0.2132101, 0.10041309), (0.17384326, 0.0002492064), (0.3596607, 0.30232707), (0.43265906, 0.098435596), (0.3827981, 0.11207104), (0.1371057, 0.2874254), (0.0067697754, 0.79025096), (0.26924175, 0.89922726), (0.7667782, 0.20794773)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.7793496, 0, 0.306977), (0.7793496, -1, 0.306977), (-0.2781204, 0, -0.7277811), (-0.2781204, -1, -0.7277811), (-0.88766724, 0, 0.11457731), (-0.88766724, -1, 0.11457731), (0.28753015, 10, 0.45308492), (0.28753015, 11, 0.45308492), (0.46934223, 10, 0.05406294), (0.46934223, 11, 0.05406294), (-0.33158898, 10, -0.27505833), (-0.33158898, 11, -0.27505833), (-0.13039528, 10, 0.3297934), (-0.13039528, 11, 0.3297934), (0.59024453, 7.9025097, -0.80144817), (1.541301, 7.9025097, -1.1104652), (-0.2712726, 8.992272, -0.809017), (-0.2712726, 8.992272, -1.809017), (-0.72924936, 2.0794773, 0.47016934), (-1.3170346, 2.0794773, 1.2791864)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves119" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.27584866, 0.12128108), (0.47794992, 0.21536838), (0.45368227, 0.07662358), (0.49858132, 0.110922225), (0.2897354, 0.4444444), (0.0242501, 0.36510852), (0.29304343, 0.10325804), (0.15012069, 0.31709355), (0.9177456, 0.9994581), (0.11034995, 0.41193783)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5733637, 0, 0.4621458), (0.5733637, -1, 0.4621458), (0.10066892, 0, -0.63478035), (0.10066892, -1, -0.63478035), (-0.7133734, 0, -0.2218932), (-0.7133734, -1, -0.2218932), (0.10549331, 10, 0.5328582), (0.10549331, 11, 0.5328582), (0.53679264, 10, -0.2700299), (0.53679264, 11, -0.2700299), (-0.3614927, 10, 0.093206), (-0.3614927, 11, 0.093206), (-0.2787009, 10, 0.19381346), (-0.2787009, 11, 0.19381346), (0.6423198, 3.1709356, -0.641177), (1.5933763, 3.1709356, -0.950194), (0.49108943, 9.99458, -0.809017), (0.49108943, 9.99458, -1.809017), (-0.10494905, 4.119378, 0.92375004), (-0.6927343, 4.119378, 1.7327671)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves120" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3737358, 0.43785477), (0.3554617, 0.3485559), (0.48109528, 0.44821426), (0.053612348, 0.39948153), (0.42198834, 0.24153444), (0.15798582, 0.21384022), (0.2848401, 0.16592601), (0.35997894, 0.7766721), (0.3340244, 0.44932622), (0.7558363, 0.74265796)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.17918804, 0, 0.4319575), (0.17918804, -1, 0.4319575), (0.03496104, 0, -0.52702934), (0.03496104, -1, -0.52702934), (-0.35001135, 0, -0.3673697), (-0.35001135, -1, -0.3673697), (0.37992954, 10, 0.17705894), (0.37992954, 11, 0.17705894), (0.54330516, 10, -0.0650039), (0.54330516, 11, -0.0650039), (-0.29623586, 10, -0.061732955), (-0.29623586, 11, -0.061732955), (-0.27089906, 10, 0.25394645), (-0.27089906, 11, 0.25394645), (0.7185553, 7.7667212, -0.4065483), (1.6696118, 7.7667212, -0.7155653), (-0.19511603, 4.4932623, -0.809017), (-0.19511603, 4.4932623, -1.809017), (-0.71884304, 7.42658, 0.47772998), (-1.3066283, 7.42658, 1.286747)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves121" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.4414234, 0.25196657), (0.08099156, 0.06392193), (0.14440508, 0.4918213), (0.0046833954, 0.39646247), (0.0016890954, 0.14756095), (0.14296228, 0.27506444), (0.26966965, 0.20259155), (0.8067077, 0.59405684), (0.6403968, 0.78833646), (0.46275476, 0.9916382)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.29160348, 0, 0.5361711), (0.29160348, -1, 0.5361711), (-0.4550016, 0, -0.75730306), (-0.4550016, -1, -0.75730306), (-0.43084845, 0, -0.004413936), (-0.43084845, -1, -0.004413936), (0.37705824, 10, 0.12719704), (0.37705824, 11, 0.12719704), (0.08834057, 10, -0.11885736), (0.08834057, 11, -0.11885736), (-0.34563297, 10, -0.030659325), (-0.34563297, 11, -0.030659325), (-0.2564711, 10, 0.28592408), (-0.2564711, 11, 0.28592408), (0.880839, 5.9405684, 0.09290962), (1.8318955, 5.9405684, -0.2161074), (0.16504627, 7.8833647, -0.809017), (0.16504627, 7.8833647, -1.809017), (-0.44010594, 9.916382, 0.6802443), (-1.0278912, 9.916382, 1.4892614)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves122" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.11363862, 0.4986399), (0.4722991, 0.38661593), (0.49205554, 0.16451855), (0.21131414, 0.39638975), (0.26075178, 0.36990437), (0.21031232, 0.07627208), (0.39142236, 0.0376239), (0.33426008, 0.75564015), (0.14531596, 0.53154516), (0.63884234, 0.8816157)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.36874503, 0, 0.23345114), (0.36874503, -1, 0.23345114), (0.19468278, 0, -0.49623814), (0.19468278, -1, -0.49623814), (-0.61584044, 0, -0.29195684), (-0.61584044, -1, -0.29195684), (0.37698907, 10, 0.33380532), (0.37698907, 11, 0.33380532), (0.46541402, 10, -0.2186822), (0.46541402, 11, -0.2186822), (-0.19615753, 10, -0.14657687), (-0.19615753, 11, -0.14657687), (-0.3722648, 10, 0.15858006), (-0.3722648, 11, 0.15858006), (0.70921236, 7.5564017, -0.43530285), (1.6602689, 7.5564017, -0.74431986), (-0.4169561, 5.3154516, -0.809017), (-0.4169561, 5.3154516, -1.809017), (-0.60757524, 8.816157, 0.5585708), (-1.1953604, 8.816157, 1.3675878)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves123" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.40701246, 0.149625), (0.35254762, 0.14943786), (0.35819575, 0.45814523), (0.11798002, 0.24174967), (0.008510132, 0.34835532), (0.1268319, 0.39223856), (0.40816355, 0.41167554), (0.18093719, 0.15679905), (0.22940432, 0.10508741), (0.71120685, 0.9039133)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.42166284, 0, 0.54401904), (0.42166284, -1, 0.54401904), (-0.085503295, 0, -0.68811923), (-0.085503295, -1, -0.68811923), (-0.3852123, 0, -0.2330327), (-0.3852123, -1, -0.2330327), (0.22991762, 10, 0.19268477), (0.22991762, 11, 0.19268477), (0.21285173, 10, -0.2791956), (0.21285173, 11, -0.2791956), (-0.44759098, 10, 0.018599225), (-0.44759098, 11, 0.018599225), (-0.3881866, 10, 0.537805), (-0.3881866, 11, 0.537805), (0.6535145, 1.5679905, -0.60672307), (1.604571, 1.5679905, -0.9157401), (-0.3181043, 1.0508741, -0.809017), (-0.3181043, 1.0508741, -1.809017), (-0.6763979, 9.039133, 0.50856817), (-1.2641832, 9.039133, 1.3175851)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves124" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.47457936, 0.38328412), (0.4816906, 0.20769505), (0.20452511, 0.18149592), (0.19708711, 0.119901575), (0.47843316, 0.32797664), (0.42858958, 0.34692898), (0.4569816, 0.10405282), (0.47701627, 0.061238598), (0.20006205, 0.064787224), (0.54048336, 0.36445388)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.13517985, 0, 0.51850194), (0.13517985, -1, 0.51850194), (0.10055609, 0, -0.6409882), (0.10055609, -1, -0.6409882), (-0.70414555, 0, 0.024265643), (-0.70414555, -1, 0.024265643), (0.11403318, 10, 0.23413874), (0.11403318, 11, 0.23413874), (0.6477968, 10, -0.1174947), (0.6477968, 11, -0.1174947), (-0.5818677, 10, -0.2395293), (-0.5818677, 11, -0.2395293), (-0.43461534, 10, 0.2452679), (-0.43461534, 11, 0.2452679), (0.76107156, 0.612386, -0.27569658), (1.712128, 0.612386, -0.5847136), (-0.3525982, 0.64787227, -0.809017), (-0.3525982, 0.64787227, -1.809017), (-0.5140302, 3.6445386, 0.6265352), (-1.1018155, 3.6445386, 1.4355522)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves125" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.03775622, 0.38753644), (0.026232807, 0.13298135), (0.1376138, 0.4821844), (0.4017714, 0.4411657), (0.21210559, 0.30623606), (0.102918655, 0.394796), (0.26469234, 0.16665773), (0.3806902, 0.4819265), (0.9013821, 0.07024617), (0.8889589, 0.7080018)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5465792, 0, 0.21535057), (0.5465792, -1, 0.21535057), (-0.47878227, 0, -0.7014328), (-0.47878227, -1, -0.7014328), (-0.44248074, 0, 0.006156914), (-0.44248074, -1, 0.006156914), (0.41957352, 10, 0.5380991), (0.41957352, 11, 0.5380991), (0.38172543, 10, -0.18220595), (0.38172543, 11, -0.18220595), (-0.43596742, 10, 0.03873574), (-0.43596742, 11, 0.03873574), (-0.2517374, 10, 0.24845217), (-0.2517374, 11, 0.24845217), (0.72607905, 4.819265, -0.38339242), (1.6771356, 4.819265, -0.69240946), (0.47185296, 0.7024617, -0.809017), (0.47185296, 0.7024617, -1.809017), (-0.84545016, 7.080018, 0.38574454), (-1.4332354, 7.080018, 1.1947615)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves126" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.37747842, 0.3662465), (0.37224966, 0.11781454), (0.35570982, 0.074397214), (0.36932904, 0.18295193), (0.27522, 0.47809458), (0.11997261, 0.122005716), (0.15771341, 0.47100368), (0.30599377, 0.3358198), (0.30035135, 0.6716142), (0.0032956589, 0.9290457)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.2437321, 0, 0.45667177), (0.2437321, -1, 0.45667177), (-0.08092989, 0, -0.71370304), (-0.08092989, -1, -0.71370304), (-0.7510814, 0, -0.11166868), (-0.7510814, -1, -0.11166868), (0.17399763, 10, 0.42586428), (0.17399763, 11, 0.42586428), (0.5427667, 10, -0.30173898), (0.5427667, 11, -0.30173898), (-0.18655246, 10, -0.059358038), (-0.18655246, 11, -0.059358038), (-0.14999437, 10, 0.5197398), (-0.14999437, 11, 0.5197398), (0.698944, 3.3581982, -0.46690556), (1.6500005, 3.3581982, -0.7759226), (-0.23470107, 6.7161427, -0.809017), (-0.23470107, 6.7161427, -1.809017), (-0.003134358, 9.290457, 0.99772274), (-0.5909196, 9.290457, 1.8067398)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves127" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3346531, 0.18476902), (0.32090604, 0.3912134), (0.253842, 0.16498172), (0.061270278, 0.31456888), (0.4052798, 0.33306187), (0.16342305, 0.27970627), (0.27981678, 0.23157856), (0.9949464, 0.5469017), (0.14692856, 0.8363492), (0.29445258, 0.87911)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.45705673, 0, 0.48315984), (0.45705673, -1, 0.48315984), (0.019411886, 0, -0.49251872), (0.019411886, -1, -0.49251872), (-0.70193607, 0, -0.02576915), (-0.70193607, -1, -0.02576915), (0.2991728, 10, 0.15847741), (0.2991728, 11, 0.15847741), (0.5812128, 10, -0.14421438), (0.5812128, 11, -0.14421438), (-0.36207414, 10, -0.045778025), (-0.36207414, 11, -0.045778025), (-0.26612157, 10, 0.3180467), (-0.26612157, 11, 0.3180467), (0.9492207, 5.469017, 0.30336693), (1.9002773, 5.469017, -0.0056500854), (-0.41506037, 8.363492, -0.809017), (-0.41506037, 8.363492, -1.8090171), (-0.28004104, 8.7911, 0.7965383), (-0.8678263, 8.7911, 1.6055553)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves128" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.024482168, 0.18083303), (0.3475881, 0.4461499), (0.409209, 0.17699374), (0.35483116, 0.40705487), (0.25717527, 0.11310224), (0.22236536, 0.17111497), (0.48197147, 0.009699905), (0.98322415, 0.72662836), (0.61845315, 0.5179791), (0.042239897, 0.96296924)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.7557902, 0, 0.2700533), (0.7557902, -1, 0.2700533), (0.08306938, 0, -0.44807416), (0.08306938, -1, -0.44807416), (-0.6340716, 0, -0.20318665), (-0.6340716, -1, -0.20318665), (0.3871322, 10, 0.48061806), (0.3871322, 11, 0.48061806), (0.31106806, 10, -0.012030104), (0.31106806, 11, -0.012030104), (-0.29344308, 10, -0.12701993), (-0.29344308, 11, -0.12701993), (-0.45838213, 10, 0.15863729), (-0.45838213, 11, 0.15863729), (0.9449624, 7.2662835, 0.29026106), (1.8960189, 7.2662835, -0.018755956), (0.13925, 5.179791, -0.809017), (0.13925, 5.179791, -1.809017), (-0.040172532, 9.629693, 0.970813), (-0.62795776, 9.629693, 1.77983)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves129" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.25143042, 0.28359413), (0.24137373, 0.08376107), (0.17699037, 0.21639343), (0.06866159, 0.25515068), (0.3104951, 0.3339751), (0.05061822, 0.46481544), (0.33791387, 0.42624187), (0.872765, 0.06302738), (0.07140434, 0.39272976), (0.4205307, 0.8192196)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.44221792, 0, 0.39511573), (0.44221792, -1, 0.39511573), (-0.25479987, 0, -0.7412529), (-0.25479987, -1, -0.7412529), (-0.6809586, 0, 0.044266496), (-0.6809586, -1, 0.044266496), (0.24266273, 10, 0.14750749), (0.24266273, 11, 0.14750749), (0.49160403, 10, -0.17424327), (0.49160403, 11, -0.17424327), (-0.4718184, 10, 0.10268487), (-0.4718184, 11, 0.10268487), (-0.3213752, 10, 0.530663), (-0.3213752, 11, 0.530663), (0.9048357, 0.63027376, 0.16676396), (1.8558922, 0.63027376, -0.14225306), (-0.5038444, 3.9272976, -0.809017), (-0.5038444, 3.9272976, -1.809017), (-0.39994848, 8.192196, 0.70942044), (-0.9877337, 8.192196, 1.5184374)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves130" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.2375122, 0.32051945), (0.39758095, 0.21962646), (0.3590417, 0.27093992), (0.1947992, 0.39970797), (0.16892305, 0.17295408), (0.39864653, 0.0021165942), (0.4244203, 0.2654515), (0.17793803, 0.3920019), (0.77092713, 0.98906225), (0.44238055, 0.38350195)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4203369, 0, 0.37408793), (0.4203369, -1, 0.37408793), (0.00869239, 0, -0.6313355), (0.00869239, -1, -0.6313355), (-0.5629478, 0, -0.17612888), (-0.5629478, -1, -0.17612888), (0.3801449, 10, 0.31831577), (0.3801449, 11, 0.31831577), (0.26231524, 10, -0.0877227), (0.26231524, 11, -0.0877227), (-0.23633155, 10, -0.32185775), (-0.23633155, 11, -0.32185775), (-0.40364772, 10, 0.3966046), (-0.40364772, 11, 0.3966046), (0.65242505, 3.920019, -0.61007625), (1.6034815, 3.920019, -0.91909325), (0.31849396, 9.890622, -0.809017), (0.31849396, 9.890622, -1.809017), (-0.42072892, 3.8350194, 0.6943226), (-1.0085142, 3.8350194, 1.5033395)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves131" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.052312043, 0.32064968), (0.44708925, 0.26181966), (0.36478713, 0.2828193), (0.26851714, 0.1447922), (0.4197679, 0.46882325), (0.255929, 0.10676771), (0.16886507, 0.11109458), (0.40478578, 0.038108483), (0.47470653, 0.07716611), (0.7957367, 0.66439736)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5963488, 0, 0.24607752), (0.5963488, -1, 0.24607752), (0.09169343, 0, -0.59720045), (0.09169343, -1, -0.59720045), (-0.5495627, 0, -0.18622339), (-0.5495627, -1, -0.18622339), (0.13770556, 10, 0.3132604), (0.13770556, 11, 0.3132604), (0.6747904, 10, -0.24957056), (0.6747904, 11, -0.24957056), (-0.2519734, 10, -0.17405786), (-0.2519734, 11, -0.17405786), (-0.16060023, 10, 0.16327676), (-0.16060023, 11, 0.16327676), (0.7348323, 0.38108483, -0.3564527), (1.6858888, 0.38108483, -0.6654697), (-0.02973427, 0.7716611, -0.809017), (-0.02973427, 0.7716611, -1.809017), (-0.7567906, 6.643974, 0.4501595), (-1.3445758, 6.643974, 1.2591765)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves132" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.07684564, 0.025109423), (0.35067812, 0.45505744), (0.065354556, 0.4341698), (0.25617772, 0.2692704), (0.20663792, 0.12033533), (0.04603321, 0.47584343), (0.00740375, 0.4560537), (0.027207797, 0.17165168), (0.704803, 0.22660133), (0.19560021, 0.14071657)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.8540915, 0, 0.3543568), (0.8540915, -1, 0.3543568), (0.09193764, 0, -0.44086778), (0.09193764, -1, -0.44086778), (-0.5143951, 0, 0.10178254), (-0.5143951, -1, 0.10178254), (0.2560914, 10, 0.33938685), (0.2560914, 11, 0.33938685), (0.26725566, 10, -0.0334987), (0.26725566, 11, -0.0334987), (-0.47961167, 10, 0.10980206), (-0.47961167, 11, 0.10980206), (-0.0070413845, 10, 0.4583416), (-0.0070413845, 11, 0.4583416), (0.59766906, 1.7165167, -0.7785978), (1.5487256, 1.7165167, -1.0876148), (0.24076034, 2.2660134, -0.809017), (0.24076034, 2.2660134, -1.809017), (-0.18602687, 1.4071658, 0.86484355), (-0.7738121, 1.4071658, 1.6738605)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves133" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.49824423, 0.27086413), (0.4298794, 0.03135438), (0.13073233, 0.16419856), (0.25371465, 0.22506113), (0.17516918, 0.4908535), (0.10611165, 0.19178861), (0.35861057, 0.43511632), (0.2388179, 0.7552113), (0.028616168, 0.35202143), (0.5530738, 0.13393812)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.21959102, 0, 0.56959367), (0.21959102, -1, 0.56959367), (-0.064002074, 0, -0.78365076), (-0.064002074, -1, -0.78365076), (-0.74740314, 0, 0.11211367), (-0.74740314, -1, 0.11211367), (0.21404587, 10, 0.32326236), (0.21404587, 11, 0.32326236), (0.45511225, 10, -0.34297857), (0.45511225, 11, -0.34297857), (-0.24477269, 10, -0.026580188), (-0.24477269, 11, -0.026580188), (-0.3410589, 10, 0.54593307), (-0.3410589, 11, 0.54593307), (0.67454094, 7.552113, -0.5420105), (1.6255975, 7.552113, -0.8510275), (-0.5541449, 3.5202143, -0.809017), (-0.5541449, 3.5202143, -1.809017), (-0.5260045, 1.3393812, 0.6178354), (-1.1137897, 1.3393812, 1.4268523)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves134" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.41243035, 0.1506236), (0.4063354, 0.12283561), (0.13506828, 0.39307183), (0.2994524, 0.02896453), (0.37379128, 0.011293928), (0.2969058, 0.3983641), (0.0765989, 0.014938987), (0.6555428, 0.7082451), (0.09467469, 0.008976367), (0.54092, 0.7127287)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4155604, 0, 0.5474541), (0.4155604, -1, 0.5474541), (-0.03790838, 0, -0.7096409), (-0.03790838, -1, -0.7096409), (-0.5281566, 0, 0.0365402), (-0.5281566, -1, 0.0365402), (0.027546907, 10, 0.30840293), (0.027546907, 11, 0.30840293), (0.36213502, 10, 0.106370874), (0.36213502, 11, 0.106370874), (-0.5533836, 10, -0.11710055), (-0.5533836, 11, -0.11710055), (-0.072849885, 10, 0.03860935), (-0.072849885, 11, 0.03860935), (0.8259251, 7.0824513, -0.07609787), (1.7769816, 7.0824513, -0.38511488), (-0.47648847, 0.08976368, -0.809017), (-0.47648847, 0.08976368, -1.809017), (-0.51444554, 7.1272864, 0.62623346), (-1.1022308, 7.1272864, 1.4352504)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves135" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.45733535, 0.32732958), (0.3373184, 0.46365577), (0.13137107, 0.4730166), (0.21020214, 0.27842647), (0.42377904, 0.22025278), (0.22690026, 0.22471519), (0.06972771, 0.24626821), (0.90826666, 0.14897345), (0.44612134, 0.9828295), (0.55616105, 0.07637973)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.20479582, 0, 0.52387756), (0.20479582, -1, 0.52387756), (0.0812863, 0, -0.43391162), (0.0812863, -1, -0.43391162), (-0.45346767, 0, 0.015969515), (-0.45346767, -1, 0.015969515), (0.2647993, 10, 0.29624066), (0.2647993, 11, 0.29624066), (0.53249913, 10, -0.047233313), (0.53249913, 11, -0.047233313), (-0.34708548, 10, -0.114125356), (-0.34708548, 11, -0.114125356), (-0.066314995, 10, 0.26781526), (-0.066314995, 11, 0.26781526), (0.9177324, 1.4897344, 0.20645599), (1.868789, 1.4897344, -0.10256102), (-0.063338175, 9.828295, -0.809017), (-0.063338175, 9.828295, -1.809017), (-0.5289406, 0.7637973, 0.61570215), (-1.1167258, 0.7637973, 1.4247192)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves136" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.290616, 0.4114811), (0.33230752, 0.4278297), (0.1616054, 0.17493787), (0.20050314, 0.45290324), (0.2597089, 0.34509543), (0.2708106, 0.47825834), (0.2811571, 0.4435729), (0.8239206, 0.1781375), (0.5566106, 0.95102966), (0.40353444, 0.3788391)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.28332248, 0, 0.38267305), (0.28332248, -1, 0.38267305), (0.054337673, 0, -0.46289548), (0.054337673, -1, -0.46289548), (-0.72597414, 0, 0.074277885), (-0.72597414, -1, 0.074277885), (0.4307366, 10, 0.34045795), (0.4307366, 11, 0.34045795), (0.44983986, 10, -0.19893359), (0.44983986, 11, -0.19893359), (-0.6140292, 10, -0.07130041), (-0.6140292, 11, -0.07130041), (-0.2673963, 10, 0.53045523), (-0.2673963, 11, 0.53045523), (0.88709193, 1.781375, 0.11215422), (1.8381485, 1.781375, -0.19686279), (0.06654973, 9.510297, -0.809017), (0.06654973, 9.510297, -1.809017), (-0.38378406, 3.7883909, 0.7211646), (-0.9715693, 3.7883909, 1.5301815)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves137" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.44392627, 0.28495735), (0.27121946, 0.097449265), (0.03426248, 0.16329512), (0.08559502, 0.14929141), (0.1780212, 0.14359458), (0.053433962, 0.16492964), (0.23575799, 0.20882447), (0.306788, 0.5939556), (0.65605134, 0.32147136), (0.60079575, 0.60154057)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.257847, 0, 0.52770585), (0.257847, -1, 0.52770585), (-0.2116684, 0, -0.7301789), (-0.2116684, -1, -0.7301789), (-0.7833071, 0, 0.22024941), (-0.7833071, -1, 0.22024941), (0.14198458, 10, 0.1317286), (0.14198458, 11, 0.1317286), (0.25371101, 10, -0.061158884), (0.25371101, 11, -0.061158884), (-0.18826512, 10, 0.007737078), (-0.18826512, 11, 0.007737078), (-0.22421919, 10, 0.2816777), (-0.22421919, 11, 0.2816777), (0.6992325, 5.9395556, -0.46601757), (1.650289, 5.9395556, -0.7750346), (0.18344936, 3.2147138, -0.809017), (0.18344936, 3.2147138, -1.809017), (-0.57139075, 6.0154057, 0.5848603), (-1.159176, 6.0154057, 1.3938774)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves138" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.14960623, 0.043477487), (0.011496071, 0.2068253), (0.18202794, 0.44127125), (0.34534293, 0.006331453), (0.34817415, 0.44909698), (0.12197924, 0.36768132), (0.36671153, 0.064996555), (0.149964, 0.9625523), (0.077861, 0.61472976), (0.76520294, 0.6455599)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.76742303, 0, 0.39895707), (0.76742303, -1, 0.39895707), (-0.45270196, 0, -0.6416918), (-0.45270196, -1, -0.6416918), (-0.4652571, 0, -0.030856745), (-0.4652571, -1, -0.030856745), (0.00602157, 10, 0.34729946), (0.00602157, 11, 0.34729946), (0.5951059, 10, -0.25573537), (0.5951059, 11, -0.25573537), (-0.42138332, 10, 0.01493651), (-0.42138332, 11, 0.01493651), (-0.3487634, 10, 0.17831665), (-0.3487634, 11, 0.17831665), (0.6422629, 9.625524, -0.6413521), (1.5933194, 9.625524, -0.9503692), (-0.49625415, 6.1472974, -0.809017), (-0.49625415, 6.1472974, -1.809017), (-0.72775126, 6.4555993, 0.47125778), (-1.3155365, 6.4555993, 1.2802747)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves139" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.044015728, 0.4043223), (0.39919162, 0.036593843), (0.0023508244, 0.43213677), (0.31448013, 0.4714246), (0.41135922, 0.22659235), (0.031963877, 0.13080212), (0.46036294, 0.4627842), (0.9703014, 0.29753113), (0.43244427, 0.42292613), (0.14623109, 0.7357777)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5246617, 0, 0.21448866), (0.5246617, -1, 0.21448866), (-0.09699804, 0, -0.779412), (-0.09699804, -1, -0.779412), (-0.53921604, 0, 0.17285109), (-0.53921604, -1, 0.17285109), (0.44835144, 10, 0.46015835), (0.44835144, 11, 0.46015835), (0.5244135, 10, -0.056200072), (0.5244135, 11, -0.056200072), (-0.1431881, 10, 0.014560758), (-0.1431881, 11, 0.014560758), (-0.4378312, 10, 0.6050442), (-0.4378312, 11, 0.6050442), (0.9402679, 2.9753113, 0.27581295), (1.8913244, 2.9753113, -0.033204053), (-0.07941652, 4.2292614, -0.809017), (-0.07941652, 4.2292614, -1.809017), (-0.13907403, 7.3577766, 0.89895684), (-0.7268593, 7.3577766, 1.7079738)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves140" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.40583652, 0.38653815), (0.32709056, 0.4749956), (0.33898503, 0.4242941), (0.4427256, 0.42174762), (0.15741998, 0.012296834), (0.4171828, 0.49191788), (0.3410865, 0.37515578), (0.8987592, 0.056450926), (0.56239927, 0.32519755), (0.028279452, 0.21801358)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.19746344, 0, 0.46999627), (0.19746344, -1, 0.46999627), (0.07592817, 0, -0.42473748), (0.07592817, -1, -0.42473748), (-0.4243853, 0, -0.2010939), (-0.4243853, -1, -0.2010939), (0.40110585, 10, 0.57305276), (0.40110585, 11, 0.57305276), (0.1569432, 10, 0.0386971), (0.1569432, 11, 0.0386971), (-0.7130556, 10, -0.18549699), (-0.7130556, 11, -0.18549699), (-0.32439256, 10, 0.48055732), (-0.32439256, 11, 0.48055732), (0.9142786, 0.5645093, 0.1958263), (1.8653351, 0.5645093, -0.11319071), (0.073354706, 3.2519755, -0.809017), (0.073354706, 3.2519755, -1.809017), (-0.026895357, 2.1801357, 0.9804594), (-0.6146806, 2.1801357, 1.7894764)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves141" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.06649285, 0.044504337), (0.13899137, 0.14503294), (0.16094989, 0.2691149), (0.47857156, 0.27185097), (0.31347862, 0.15873685), (0.34730038, 0.371606), (0.12613751, 0.47691408), (0.32705846, 0.025928358), (0.82915187, 0.87915707), (0.60004616, 0.0017131324)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.84549195, 0, 0.34120983), (0.84549195, -1, 0.34120983), (-0.33914286, 0, -0.6916829), (-0.33914286, -1, -0.6916829), (-0.63664454, 0, 0.045908466), (-0.63664454, -1, 0.045908466), (0.25854564, 10, 0.56257814), (0.25854564, 11, 0.56257814), (0.39143905, 10, -0.03155059), (0.39143905, 11, -0.03155059), (-0.55755633, 10, -0.16613935), (-0.55755633, 11, -0.16613935), (-0.11996391, 10, 0.5158927), (-0.11996391, 11, 0.5158927), (0.7065962, 0.25928357, -0.44335452), (1.6576527, 0.25928357, -0.75237155), (0.3869412, 8.791571, -0.809017), (0.3869412, 8.791571, -1.809017), (-0.5706778, 0.017131325, 0.5853783), (-1.1584631, 0.017131325, 1.3943954)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves142" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.14870644, 0.12194468), (0.019935131, 0.3188894), (0.3290561, 0.032740768), (0.2876131, 0.25800565), (0.17967868, 0.009375563), (0.35675305, 0.27074158), (0.2967449, 0.40103415), (0.6431824, 0.0033682245), (0.41182986, 0.789077), (0.8717597, 0.1357004)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.69365203, 0, 0.37408763), (0.69365203, -1, 0.37408763), (-0.3769116, 0, -0.55103004), (-0.3769116, -1, -0.55103004), (-0.8003816, 0, -0.06899636), (-0.8003816, -1, -0.06899636), (0.24537796, 10, 0.36734122), (0.24537796, 11, 0.36734122), (0.1763954, 10, 0.04793878), (0.1763954, 11, 0.04793878), (-0.46718472, 10, -0.20495553), (-0.46718472, 11, -0.20495553), (-0.2822212, 10, 0.49273336), (-0.2822212, 11, 0.49273336), (0.821435, 0.033682246, -0.0899172), (1.7724915, 0.033682246, -0.39893422), (-0.1036502, 7.89077, -0.809017), (-0.1036502, 7.89077, -1.809017), (-0.8290928, 1.357004, 0.39762884), (-1.416878, 1.357004, 1.2066458)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves143" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.46535876, 0.42760366), (0.38164392, 0.1432756), (0.021539964, 0.44327354), (0.18501136, 0.3820149), (0.0040927604, 0.37691838), (0.10327625, 0.15411958), (0.11804617, 0.45800108), (0.6307187, 0.50535214), (0.08083976, 0.9007012), (0.004557678, 0.29439473)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.101798765, 0, 0.4984352), (0.101798765, -1, 0.4984352), (-0.05492062, 0, -0.6931046), (-0.05492062, -1, -0.6931046), (-0.5216535, 0, 0.14795552), (-0.5216535, -1, 0.14795552), (0.36331776, 10, 0.30306044), (0.36331776, 11, 0.30306044), (0.2254395, 10, -0.30366862), (0.2254395, 11, -0.30366862), (-0.2072807, 10, -0.03592667), (-0.2072807, 11, -0.03592667), (-0.11226858, 10, 0.49447933), (-0.11226858, 11, 0.49447933), (0.8169072, 5.053521, -0.10385205), (1.7679638, 5.053521, -0.41286907), (-0.4927524, 9.007012, -0.809017), (-0.4927524, 9.007012, -1.809017), (-0.0043346095, 2.9439473, 0.9968507), (-0.5921199, 2.9439473, 1.8058677)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves144" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.4710102, 0.45697346), (0.3174363, 0.4245433), (0.42614967, 0.079788834), (0.49371493, 0.074628055), (0.11708621, 0.3317036), (0.3171173, 0.30023783), (0.10252263, 0.04951462), (0.709328, 0.28660852), (0.06580467, 0.8096346), (0.9953347, 0.6716652)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.0684916, 0, 0.4932645), (0.0684916, -1, 0.4932645), (0.0349238, 0, -0.46555427), (0.0349238, -1, -0.46555427), (-0.7203649, 0, -0.19208893), (-0.7203649, -1, -0.19208893), (0.070975505, 10, 0.51677626), (0.070975505, 11, 0.51677626), (0.3063261, 10, -0.23217222), (0.3063261, 11, -0.23217222), (-0.47194004, 10, -0.1637747), (-0.47194004, 11, -0.1637747), (-0.09750482, 10, 0.08119586), (-0.09750482, 11, 0.08119586), (0.84546375, 2.8660853, -0.015964195), (1.7965202, 2.8660853, -0.3249812), (-0.51042724, 8.096347, -0.809017), (-0.51042724, 8.096347, -1.809017), (-0.9466196, 6.7166514, 0.31224063), (-1.5344049, 6.7166514, 1.1212577)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves145" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.087465286, 0.03774627), (0.21589196, 0.087866835), (0.39866656, 0.10277311), (0.03596388, 0.04751696), (0.09940301, 0.058575213), (0.018873753, 0.4076046), (0.25344172, 0.030209597), (0.744424, 0.05065522), (0.48965448, 0.16758412), (0.58965343, 0.281044)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.83197325, 0, 0.35778978), (0.83197325, -1, 0.35778978), (-0.2823422, 0, -0.73793125), (-0.2823422, -1, -0.73793125), (-0.7084894, 0, -0.16846439), (-0.7084894, -1, -0.16846439), (0.045191318, 10, 0.050647434), (0.045191318, 11, 0.050647434), (0.12896752, 10, -0.016671123), (0.12896752, 11, -0.016671123), (-0.39874876, 10, 0.11068757), (-0.39874876, 11, 0.11068757), (-0.2410374, 10, 0.10852739), (-0.2410374, 11, 0.10852739), (0.8582131, 0.50655216, 0.02327433), (1.8092697, 0.50655216, -0.28574267), (-0.0121618835, 1.6758411, -0.809017), (-0.0121618835, 1.6758411, -1.809017), (-0.56079376, 2.81044, 0.5925595), (-1.148579, 2.81044, 1.4015765)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves146" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.0834937, 0.009313986), (0.11448924, 0.48241943), (0.0044726804, 0.37797138), (0.08842898, 0.22882599), (0.09963352, 0.4435822), (0.12967674, 0.38410243), (0.10915487, 0.1745803), (0.027803058, 0.9106046), (0.4930101, 0.111206986), (0.7740107, 0.3237858)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.8627912, 0, 0.36383155), (0.8627912, -1, 0.36383155), (-0.16963606, 0, -0.41873148), (-0.16963606, -1, -0.41873148), (-0.5899596, 0, 0.18721682), (-0.5899596, -1, 0.18721682), (0.21762644, 10, 0.1591401), (0.21762644, 11, 0.1591401), (0.35548818, 10, -0.32807708), (0.35548818, 11, -0.32807708), (-0.44152522, 10, 0.013783488), (-0.44152522, 11, 0.013783488), (-0.103812456, 10, 0.20831102), (-0.103812456, 11, 0.20831102), (0.5978853, 9.106046, -0.7779322), (1.5489419, 9.106046, -1.0869492), (-0.008217111, 1.1120698, -0.809017), (-0.008217111, 1.1120698, -1.809017), (-0.736128, 3.237858, 0.46517175), (-1.3239132, 3.237858, 1.2741888)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves147" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.46613014, 0.08352181), (0.3845268, 0.1301268), (0.40902805, 0.37642407), (0.123720415, 0.16623153), (0.4341339, 0.39183667), (0.08104899, 0.19924788), (0.36111298, 0.25777587), (0.83084214, 0.58377206), (0.3932181, 0.36274743), (0.12570527, 0.44741)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.42830646, 0, 0.60529536), (0.42830646, -1, 0.60529536), (-0.05926028, 0, -0.7037422), (-0.05926028, -1, -0.7037422), (-0.4444678, 0, -0.26461172), (-0.4444678, -1, -0.26461172), (0.15809558, 10, 0.1750888), (0.15809558, 11, 0.1750888), (0.64320165, 10, -0.18284777), (0.64320165, 11, -0.18284777), (-0.2371354, 10, -0.0039990284), (-0.2371354, 11, -0.0039990284), (-0.34343886, 10, 0.36936593), (-0.34343886, 11, 0.36936593), (0.88960636, 5.837721, 0.11989276), (1.8406628, 5.837721, -0.18912426), (-0.12552966, 3.6274743, -0.809017), (-0.12552966, 3.6274743, -1.809017), (-0.11955282, 4.4741, 0.9131398), (-0.70733804, 4.4741, 1.7221568)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves148" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.49139625, 0.20824401), (0.024404347, 0.49569342), (0.03944985, 0.05087284), (0.19145238, 0.44640547), (0.40341818, 0.21559076), (0.45429617, 0.07994535), (0.3434018, 0.2955117), (0.2572776, 0.59143317), (0.23572108, 0.8619223), (0.12557314, 0.4269676)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.2856591, 0, 0.5842125), (0.2856591, -1, 0.5842125), (-0.26773494, 0, -0.4079926), (-0.26773494, -1, -0.4079926), (-0.8883426, 0, 0.24919015), (-0.8883426, -1, 0.24919015), (0.42455682, 10, 0.32939926), (0.42455682, 11, 0.32939926), (0.5103946, 10, -0.049753506), (0.5103946, 11, -0.049753506), (-0.34306115, 10, -0.34282887), (-0.34306115, 11, -0.34282887), (-0.32659453, 10, 0.40162867), (-0.32659453, 11, 0.40162867), (0.6812468, 5.914332, -0.5213719), (1.6323034, 5.914332, -0.8303889), (-0.3106785, 8.619224, -0.809017), (-0.3106785, 8.619224, -1.809017), (-0.11942716, 4.2696757, 0.9132311), (-0.7072124, 4.2696757, 1.7222481)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves149" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.13838507, 0.37404037), (0.1780282, 0.30445835), (0.46286914, 0.38844636), (0.34735912, 0.3400704), (0.06401077, 0.008024501), (0.13517907, 0.4350221), (0.025264649, 0.2436954), (0.8476335, 0.921311), (0.18626395, 0.01859916), (0.5687229, 0.33345303)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.463711, 0, 0.2890539), (0.463711, -1, 0.2890539), (-0.19954443, 0, -0.56270504), (-0.19954443, -1, -0.56270504), (-0.41347504, 0, -0.32852295), (-0.41347504, -1, -0.32852295), (0.3234262, 10, 0.45244667), (0.3234262, 11, 0.45244667), (0.06559455, 10, 0.013288459), (0.06559455, 11, 0.013288459), (-0.49318686, 10, 0.025067063), (-0.49318686, 11, 0.025067063), (-0.02402811, 10, 0.2515026), (-0.02402811, 11, 0.2515026), (0.8957062, 9.21311, 0.13866605), (1.8467627, 9.21311, -0.17035097), (-0.36881885, 0.1859916, -0.809017), (-0.36881885, 0.1859916, -1.809017), (-0.54088765, 3.3345304, 0.6070221), (-1.1286728, 3.3345304, 1.4160391)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves150" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.39798278, 0.48106426), (0.15579194, 0.2911), (0.4341834, 0.28342158), (0.31856248, 0.33498812), (0.41433543, 0.3998951), (0.09623405, 0.16984488), (0.29479477, 0.46929705), (0.33011806, 0.6211933), (0.65405756, 0.9862653), (0.5285923, 0.38375127)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.11503312, 0, 0.4353593), (0.11503312, -1, 0.4353593), (-0.23353656, 0, -0.57351214), (-0.23353656, -1, -0.57351214), (-0.5237802, 0, -0.26399687), (-0.5237802, -1, -0.26399687), (0.31859264, 10, 0.4220795), (0.31859264, 11, 0.4220795), (0.62910885, 10, -0.19548525), (0.62910885, 11, -0.19548525), (-0.21809703, 10, -0.02537003), (-0.21809703, 11, -0.02537003), (-0.28036648, 10, 0.56039363), (-0.28036648, 11, 0.56039363), (0.70770764, 6.2119327, -0.43993378), (1.6587641, 6.2119327, -0.7489508), (0.18110554, 9.862653, -0.809017), (0.18110554, 9.862653, -1.809017), (-0.50272113, 3.837513, 0.63475174), (-1.0905063, 3.837513, 1.4437687)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves151" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.07867381, 0.16275151), (0.08268943, 0.042202998), (0.045933828, 0.10684335), (0.33089706, 0.09119183), (0.042379014, 0.11524258), (0.084283665, 0.49028218), (0.15437272, 0.26698318), (0.6448459, 0.09572538), (0.042434946, 0.41407332), (0.7676404, 0.24821693)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.7214474, 0, 0.31308627), (0.7214474, -1, 0.31308627), (-0.4657717, 0, -0.77487403), (-0.4657717, -1, -0.77487403), (-0.83275604, 0, 0.224645), (-0.83275604, -1, 0.224645), (0.08672858, 10, 0.3590769), (0.08672858, 11, 0.3590769), (0.108042724, 10, -0.08013737), (0.108042724, 11, -0.08013737), (-0.51582676, 10, 0.08331861), (-0.51582676, 11, 0.08331861), (-0.14681718, 10, 0.31468698), (-0.14681718, 11, 0.31468698), (0.82203925, 0.9572538, -0.088057384), (1.7730957, 0.9572538, -0.3970744), (-0.5379, 4.1407332, -0.809017), (-0.5379, 4.1407332, -1.809017), (-0.73006946, 2.4821694, 0.46957353), (-1.3178546, 2.4821694, 1.2785906)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves152" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.13090709, 0.34108046), (0.32393673, 0.10318463), (0.16193795, 0.042260632), (0.22580512, 0.247506), (0.43713102, 0.05949483), (0.31460336, 0.24871719), (0.4910579, 0.42719465), (0.30355343, 0.84034485), (0.48799047, 0.9805074), (0.73743635, 0.96651304)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.50216967, 0, 0.2940719), (0.50216967, -1, 0.2940719), (-0.1463244, 0, -0.72553885), (-0.1463244, -1, -0.72553885), (-0.8520369, 0, 0.11490562), (-0.8520369, -1, 0.11490562), (0.2353922, 10, 0.30228868), (0.2353922, 11, 0.30228868), (0.45070648, 10, 0.08694858), (0.45070648, 11, 0.08694858), (-0.4214633, 10, -0.17766163), (-0.4214633, 11, -0.17766163), (-0.46702382, 10, 0.5789399), (-0.46702382, 11, 0.5789399), (0.6980575, 8.403449, -0.46963397), (1.649114, 8.403449, -0.77865094), (-0.014118052, 9.805074, -0.809017), (-0.014118052, 9.805074, -1.809017), (-0.70134366, 9.665131, 0.49044403), (-1.2891289, 9.665131, 1.299461)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves153" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.27684683, 0.32602084), (0.23161285, 0.45489427), (0.14294751, 0.32782707), (0.4592615, 0.40565306), (0.18436581, 0.123797745), (0.23986936, 0.09524484), (0.41108522, 0.40819985), (0.67168987, 0.8686372), (0.5739738, 0.51084614), (0.6432236, 0.9865256)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.3776953, 0, 0.39956748), (0.3776953, -1, 0.39956748), (-0.048127875, 0, -0.4409998), (-0.048127875, -1, -0.4409998), (-0.5873457, 0, 0.047892697), (-0.5873457, -1, 0.047892697), (0.385799, 10, 0.5846152), (0.385799, 11, 0.5846152), (0.24810879, 10, -0.04318231), (0.24810879, 11, -0.04318231), (-0.2315749, 10, -0.1646261), (-0.2315749, 11, -0.1646261), (-0.39096528, 10, 0.5352322), (-0.39096528, 11, 0.5352322), (0.83179086, 8.686373, -0.05804491), (1.7828474, 8.686373, -0.3670619), (0.0869614, 5.108461, -0.809017), (0.0869614, 5.108461, -1.809017), (-0.61174196, 9.865255, 0.5555434), (-1.1995273, 9.865255, 1.3645605)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves154" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.026118742, 0.16010013), (0.33270565, 0.18141049), (0.1654906, 0.43201825), (0.16540545, 0.49314505), (0.4822446, 0.008428776), (0.111678, 0.3703776), (0.02555284, 0.09055915), (0.70591664, 0.23116763), (0.2132457, 0.78052264), (0.031546954, 0.56528354)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.7739519, 0, 0.27759096), (0.7739519, -1, 0.27759096), (-0.09003588, 0, -0.66225284), (-0.09003588, -1, -0.66225284), (-0.48006478, 0, -0.009508093), (-0.48006478, -1, -0.009508093), (0.46900883, 10, 0.31779566), (0.46900883, 11, 0.31779566), (0.4635962, 10, 0.14220276), (0.4635962, 11, 0.14220276), (-0.41789272, 10, 0.024103578), (-0.41789272, 11, 0.024103578), (-0.024302196, 10, 0.09845541), (-0.024302196, 11, 0.09845541), (0.8442245, 2.3116763, -0.019778166), (1.795281, 2.3116763, -0.3287952), (-0.33709988, 7.8052263, -0.809017), (-0.33709988, 7.8052263, -1.809017), (-0.030002937, 5.6528354, 0.97820157), (-0.6177882, 5.6528354, 1.7872186)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves155" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.31912118, 0.4631262), (0.41235456, 0.01753743), (0.008194702, 0.35193527), (0.0051108194, 0.28878367), (0.4821793, 0.120676525), (0.2819333, 0.42854515), (0.29340947, 0.47045636), (0.3632214, 0.60226077), (0.28858894, 0.702824), (0.5952052, 0.28318173)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.20709504, 0, 0.38641044), (0.20709504, -1, 0.38641044), (-0.092725165, 0, -0.79482895), (-0.092725165, -1, -0.79482895), (-0.6133693, 0, 0.19110107), (-0.6133693, -1, 0.19110107), (0.2746496, 10, 0.09434988), (0.2746496, 11, 0.09434988), (0.5295117, 10, 0.051372245), (0.5295117, 11, 0.051372245), (-0.5732869, 10, -0.0956611), (-0.5732869, 11, -0.0956611), (-0.279049, 10, 0.56112486), (-0.279049, 11, 0.56112486), (0.7197332, 6.022608, -0.4029231), (1.6707897, 6.022608, -0.7119401), (-0.24852858, 7.0282397, -0.809017), (-0.24852858, 7.0282397, -1.809017), (-0.5660738, 2.8318174, 0.5887233), (-1.153859, 2.8318174, 1.3977404)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves156" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.20721449, 0.48062366), (0.015463587, 0.047460265), (0.19448738, 0.08800093), (0.13039984, 0.17458726), (0.36538425, 0.12912445), (0.3588436, 0.41450697), (0.37159833, 0.24443398), (0.71348137, 0.87510973), (0.18451802, 0.39083686), (0.6635082, 0.4642108)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.29688358, 0, 0.3036778), (0.29688358, -1, 0.3036778), (-0.54171026, 0, -0.7706208), (-0.54171026, -1, -0.7706208), (-0.796711, 0, 0.06437972), (-0.796711, -1, 0.06437972), (0.16604236, 10, 0.18435027), (0.16604236, 11, 0.18435027), (0.42339852, 10, 0.008446066), (0.42339852, 11, 0.008446066), (-0.60514253, 10, -0.16222087), (-0.60514253, 11, -0.16222087), (-0.35341102, 10, 0.35926417), (-0.35341102, 11, 0.35926417), (0.8469725, 8.751097, -0.011320551), (1.7980291, 8.751097, -0.32033756), (-0.3708713, 3.9083686, -0.809017), (-0.3708713, 3.9083686, -1.809017), (-0.63103384, 4.642108, 0.5415271), (-1.218819, 4.642108, 1.3505441)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves157" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.030687496, 0.3660467), (0.16347212, 0.27383408), (0.11858129, 0.24746765), (0.29325, 0.4246533), (0.29515228, 0.45875064), (0.45947844, 0.09293442), (0.12634434, 0.08049864), (0.42006326, 0.14514583), (0.07826289, 0.8660425), (0.29663837, 0.17519063)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5737399, 0, 0.2171069), (0.5737399, -1, 0.2171069), (-0.23465662, 0, -0.58748055), (-0.23465662, -1, -0.58748055), (-0.67262363, 0, 0.09996738), (-0.67262363, -1, 0.09996738), (0.40386927, 10, 0.42447507), (0.40386927, 11, 0.42447507), (0.55035335, 10, -0.27993), (0.55035335, 11, -0.27993), (-0.35846055, 10, -0.34300756), (-0.35846055, 11, -0.34300756), (-0.12016061, 10, 0.11954119), (-0.12016061, 11, 0.11954119), (0.7403822, 1.4514583, -0.33937198), (1.6914387, 1.4514583, -0.648389), (-0.4957817, 8.660425, -0.809017), (-0.4957817, 8.660425, -1.809017), (-0.28211987, 1.7519063, 0.7950279), (-0.8699051, 1.7519063, 1.6040449)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves158" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.05071743, 0.03993708), (0.2791558, 0.04223462), (0.29782256, 0.1853873), (0.29882696, 0.43811744), (0.17798845, 0.22739725), (0.20571442, 0.20601943), (0.281358, 0.2374631), (0.078487344, 0.983911), (0.45210108, 0.2771136), (0.35397637, 0.4265318)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.86483896, 0, 0.33172065), (0.86483896, -1, 0.33172065), (-0.23479304, 0, -0.77484846), (-0.23479304, -1, -0.77484846), (-0.66655236, 0, -0.08124659), (-0.66655236, -1, -0.08124659), (0.41667446, 10, 0.4342127), (0.41667446, 11, 0.4342127), (0.30293784, 10, -0.12896678), (0.30293784, 11, -0.12896678), (-0.31685203, 10, -0.10276296), (-0.31685203, 11, -0.10276296), (-0.26758736, 10, 0.3244075), (-0.26758736, 11, 0.3244075), (0.6162974, 9.83911, -0.7212655), (1.567354, 9.83911, -1.0302825), (-0.056308538, 2.771136, -0.809017), (-0.056308538, 2.771136, -1.809017), (-0.33665153, 4.265318, 0.75540835), (-0.92443675, 4.265318, 1.5644253)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves159" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.1553127, 0.049823675), (0.29160953, 0.117622964), (0.48646334, 0.42390537), (0.29912564, 0.39126357), (0.12346543, 0.30912405), (0.33308858, 0.3590578), (0.43698975, 0.29637977), (0.66734445, 0.45475432), (0.21864577, 0.98897076), (0.48329598, 0.28410512)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.7559602, 0, 0.40093908), (0.7559602, -1, 0.40093908), (-0.17584066, 0, -0.713858), (-0.17584066, -1, -0.713858), (-0.3711804, 0, -0.3658595), (-0.3711804, -1, -0.3658595), (0.3721138, 10, 0.42003274), (0.3721138, 11, 0.42003274), (0.29912117, 10, -0.21193369), (0.29912117, 11, -0.21193369), (-0.5372688, 10, -0.15851936), (-0.5372688, 11, -0.15851936), (-0.41560197, 10, 0.43141705), (-0.41560197, 11, 0.43141705), (0.83021235, 4.547543, -0.06290322), (1.7812688, 4.547543, -0.37192023), (-0.33075172, 9.889708, -0.809017), (-0.33075172, 9.889708, -1.809017), (-0.4596418, 2.841051, 0.6660507), (-1.047427, 2.841051, 1.4750677)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves160" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.31195265, 0.03685188), (0.16256614, 0.26061893), (0.37217858, 0.11357731), (0.45482743, 0.16322295), (0.3117652, 0.0684698), (0.3278479, 0.49648386), (0.24205315, 0.42268714), (0.6012755, 0.36818793), (0.36545613, 0.63461673), (0.8025112, 0.2811662)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.61932373, 0, 0.5131831), (0.61932373, -1, 0.5131831), (-0.24348933, 0, -0.5981719), (-0.24348933, -1, -0.5981719), (-0.7078363, 0, -0.14218862), (-0.7078363, -1, -0.14218862), (0.15523425, 10, 0.50526613), (0.15523425, 11, 0.50526613), (0.33675188, 10, 0.040947516), (0.33675188, 11, 0.040947516), (-0.6648884, 10, -0.11181258), (-0.6648884, 11, -0.11181258), (-0.23020624, 10, 0.4974857), (-0.23020624, 11, 0.4974857), (0.80621135, 3.6818793, -0.13677053), (1.7572678, 3.6818793, -0.44578755), (-0.15816581, 6.346167, -0.809017), (-0.15816581, 6.346167, -1.809017), (-0.76323354, 2.811662, 0.4454784), (-1.3510188, 2.811662, 1.2544954)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves161" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.15543078, 0.04715236), (0.034950014, 0.108977884), (0.32467115, 0.3086808), (0.0034299763, 0.24867445), (0.03375064, 0.09299691), (0.10626848, 0.16813196), (0.14853933, 0.13904503), (0.3507676, 0.72793126), (0.29781616, 0.8215658), (0.5812924, 0.92724395)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.7583885, 0, 0.40184614), (0.7583885, -1, 0.40184614), (-0.48264346, 0, -0.720852), (-0.48264346, -1, -0.720852), (-0.53953993, 0, -0.14936401), (-0.53953993, -1, -0.14936401), (0.23650347, 10, 0.08027461), (0.23650347, 11, 0.08027461), (0.086760975, 10, -0.064806566), (0.086760975, 11, -0.064806566), (-0.22236605, 10, -0.034017373), (-0.22236605, 11, -0.034017373), (-0.14126931, 10, 0.18494622), (-0.14126931, 11, 0.18494622), (0.71520907, 7.2793126, -0.41684687), (1.6662656, 7.2793126, -0.7258639), (-0.23768134, 8.215658, -0.809017), (-0.23768134, 8.215658, -1.809017), (-0.5528419, 9.272439, 0.5983369), (-1.1406271, 9.272439, 1.4073539)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves162" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.45857733, 0.38304535), (0.36884925, 0.1637025), (0.05869703, 0.077986434), (0.25285855, 0.37970564), (0.4811355, 0.014735009), (0.29285255, 0.42594102), (0.19370517, 0.3173317), (0.5765808, 0.18621805), (0.8514663, 0.41237077), (0.98048484, 0.27414978)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.15062578, 0, 0.50751865), (0.15062578, -1, 0.50751865), (-0.05795502, 0, -0.6765789), (-0.05795502, -1, -0.6765789), (-0.85556406, 0, 0.2192926), (-0.85556406, -1, 0.2192926), (0.3611215, 10, 0.37019405), (0.3611215, 11, 0.37019405), (0.46624807, 10, 0.13675818), (0.46624807, 11, 0.13675818), (-0.57722837, 10, -0.10529967), (-0.57722837, 11, -0.10529967), (-0.18422458, 10, 0.3771899), (-0.18422458, 11, 0.3771899), (0.7972405, 1.8621805, -0.16438007), (1.748297, 1.8621805, -0.47339708), (0.41317338, 4.123708, -0.809017), (0.41317338, 4.123708, -1.809017), (-0.93249655, 2.7414978, 0.32250163), (-1.5202818, 2.7414978, 1.1315186)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves163" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.08273252, 0.018563291), (0.044481646, 0.098051675), (0.19211118, 0.38767093), (0.063788936, 0.46729225), (0.2710205, 0.3684629), (0.33770755, 0.4155113), (0.2773455, 0.46094656), (0.16910045, 0.4712376), (0.08388083, 0.21614185), (0.19753306, 0.015268491)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.8547185, 0, 0.3604474), (0.8547185, -1, 0.3604474), (-0.4778606, 0, -0.7296915), (-0.4778606, -1, -0.7296915), (-0.5125711, 0, -0.025566746), (-0.5125711, -1, -0.025566746), (0.44442135, 10, 0.20819019), (0.44442135, 11, 0.20819019), (0.4743329, 10, -0.2143428), (0.4743329, 11, -0.2143428), (-0.59367424, 10, -0.14481108), (-0.59367424, 11, -0.14481108), (-0.26377127, 10, 0.546651), (-0.26377127, 11, 0.546651), (0.64921457, 4.712376, -0.619957), (1.6002711, 4.712376, -0.928974), (-0.4891774, 2.1614184, -0.809017), (-0.4891774, 2.1614184, -1.809017), (-0.18786511, 0.15268491, 0.86350805), (-0.7756503, 0.15268491, 1.672525)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves164" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.15555218, 0.22210774), (0.02258018, 0.2811411), (0.17161454, 0.3411765), (0.0063586724, 0.0063856724), (0.11684182, 0.4740001), (0.1363492, 0.14178516), (0.38605097, 0.09078399), (0.3880867, 0.058517955), (0.42101672, 0.38757312), (0.831191, 0.01457428)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5918806, 0, 0.34786585), (0.5918806, -1, 0.34786585), (-0.39599007, 0, -0.5815691), (-0.39599007, -1, -0.5815691), (-0.56423575, 0, 0.0117167635), (-0.56423575, -1, 0.0117167635), (0.0060731354, 10, 0.008331954), (0.0060731354, 11, 0.008331954), (0.38973343, 10, -0.34736803), (0.38973343, 11, -0.34736803), (-0.21498977, 10, -0.0664948), (-0.21498977, 11, -0.0664948), (-0.3671563, 10, 0.21008031), (-0.3671563, 11, 0.21008031), (0.728766, 0.58517957, -0.37512285), (1.6798226, 0.58517957, -0.68413985), (-0.09285041, 3.875731, -0.809017), (-0.09285041, 3.875731, -1.809017), (-0.79050964, 0.1457428, 0.42566115), (-1.3782948, 0.1457428, 1.2346781)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves165" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.4448209, 0.44829842), (0.39457646, 0.017029317), (0.105243966, 0.4138357), (0.36128923, 0.33862075), (0.07174919, 0.3127961), (0.38710576, 0.31989473), (0.43786615, 0.30308142), (0.81368047, 0.6405182), (0.90221673, 0.6717915), (0.5486507, 0.77206564)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.10164954, 0, 0.47784886), (0.10164954, -1, 0.47784886), (-0.11392323, 0, -0.79524), (-0.11392323, -1, -0.79524), (-0.5192433, 0, 0.063468404), (-0.5192433, -1, 0.063468404), (0.32204747, 10, 0.4659288), (0.32204747, 11, 0.4659288), (0.25209445, 10, -0.23088562), (0.25209445, 11, -0.23088562), (-0.53177303, 10, -0.21432224), (-0.53177303, 11, -0.21432224), (-0.41643545, 10, 0.4383895), (-0.41643545, 11, 0.4383895), (0.883372, 6.405182, 0.10070541), (1.8344285, 6.405182, -0.20831162), (0.47283414, 6.717915, -0.809017), (0.47283414, 6.717915, -1.809017), (-0.5217978, 7.7206564, 0.62089175), (-1.109583, 7.7206564, 1.4299088)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves166" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.031614963, 0.06311962), (0.35557893, 0.40975666), (0.40056947, 0.014618309), (0.22954762, 0.015450984), (0.14189012, 0.25945666), (0.45723137, 0.34010935), (0.016550671, 0.4185029), (0.58802944, 0.2741776), (0.28562397, 0.883458), (0.037508246, 0.84752375)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.8609586, 0, 0.31135738), (0.8609586, -1, 0.31135738), (0.071071774, 0, -0.47751692), (0.071071774, -1, -0.47751692), (-0.7916383, 0, -0.1433506), (-0.7916383, -1, -0.1433506), (0.01469476, 10, 0.23432223), (0.01469476, 11, 0.23432223), (0.2874503, 10, -0.16605839), (0.2874503, 11, -0.16605839), (-0.5922171, 10, -0.2648084), (-0.5922171, 11, -0.2648084), (-0.015740624, 10, 0.42361733), (-0.015740624, 11, 0.42361733), (0.80139947, 2.741776, -0.15158011), (1.752456, 2.741776, -0.46059713), (-0.25201413, 8.83458, -0.809017), (-0.25201413, 8.83458, -1.809017), (-0.035672463, 8.475238, 0.9740824), (-0.62345773, 8.475238, 1.7830994)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves167" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.016781906, 0.05850022), (0.24516135, 0.05724), (0.13043235, 0.23856333), (0.18301396, 0.45350924), (0.072498076, 0.44008213), (0.44637224, 0.28140858), (0.36615413, 0.2297681), (0.36957353, 0.13152991), (0.5703707, 0.19228728), (0.048651945, 0.20987122)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.87945896, 0, 0.30253544), (0.87945896, -1, 0.30253544), (-0.26593596, 0, -0.76270884), (-0.26593596, -1, -0.76270884), (-0.676787, 0, 0.08946907), (-0.676787, -1, 0.08946907), (0.43131292, 10, 0.32315603), (0.43131292, 11, 0.32315603), (0.32762355, 10, -0.33363077), (0.32762355, 11, -0.33363077), (-0.53000647, 10, -0.2741627), (-0.53000647, 11, -0.2741627), (-0.34823328, 10, 0.34291595), (-0.34823328, 11, 0.34291595), (0.7220407, 1.3152992, -0.3958212), (1.6730973, 1.3152992, -0.7048382), (0.082725696, 1.9228729, -0.809017), (0.082725696, 1.9228729, -1.809017), (-0.04627075, 2.0987122, 0.9663823), (-0.634056, 2.0987122, 1.7753993)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves168" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.4786234, 0.44010314), (0.3263043, 0.08480519), (0.22959943, 0.41173854), (0.18522178, 0.20455353), (0.011366156, 0.27806637), (0.19095573, 0.20548126), (0.34476435, 0.48597902), (0.5267339, 0.52845347), (0.5909697, 0.83780235), (0.7328438, 0.9596768)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.07729566, 0, 0.5037383), (0.07729566, -1, 0.5037383), (-0.15434432, 0, -0.7404082), (-0.15434432, -1, -0.7404082), (-0.476063, 0, -0.07491719), (-0.476063, -1, -0.07491719), (0.19454198, 10, 0.2484323), (0.19454198, 11, 0.2484323), (0.17425317, 10, -0.22144808), (0.17425317, 11, -0.22144808), (-0.30766526, 10, -0.09098923), (-0.30766526, 11, -0.09098923), (-0.3278904, 10, 0.5925171), (-0.3278904, 11, 0.5925171), (0.77913254, 5.2845345, -0.22011063), (1.7301891, 5.2845345, -0.52912766), (0.10694125, 8.378023, -0.809017), (0.10694125, 8.378023, -1.809017), (-0.6969759, 9.596768, 0.4936174), (-1.2847611, 9.596768, 1.3026344)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves169" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.19119205, 0.19669263), (0.018989364, 0.48703566), (0.2568674, 0.48390767), (0.32274416, 0.035986688), (0.34605262, 0.096687764), (0.48015624, 0.12987435), (0.22298068, 0.29990584), (0.8632365, 0.9819124), (0.11334595, 0.34738415), (0.18785977, 0.21997783)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5821563, 0, 0.3803461), (0.5821563, -1, 0.3803461), (-0.27918953, 0, -0.41499686), (-0.27918953, -1, -0.41499686), (-0.39752045, 0, -0.12770519), (-0.39752045, -1, -0.12770519), (0.034225374, 10, 0.33386466), (0.034225374, 11, 0.33386466), (0.38594723, 10, 0.028714092), (0.38594723, 11, 0.028714092), (-0.4057466, 10, -0.3483212), (-0.4057466, 11, -0.3483212), (-0.21206723, 10, 0.36881065), (-0.21206723, 11, 0.36881065), (0.9013743, 9.819124, 0.15611073), (1.8524308, 9.819124, -0.15290627), (-0.4545391, 3.4738414, -0.809017), (-0.4545391, 3.4738414, -1.809017), (-0.17866527, 2.1997783, 0.8701921), (-0.7664505, 2.1997783, 1.6792091)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves170" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.4739122, 0.11090626), (0.46869662, 0.1613532), (0.4995256, 0.0058711725), (0.45764592, 0.18822591), (0.16351305, 0.023933485), (0.45689854, 0.14150156), (0.19337857, 0.37431774), (0.89962363, 0.013922807), (0.527455, 0.58806133), (0.6157765, 0.15735266)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.39486113, 0, 0.60221034), (0.39486113, -1, 0.60221034), (0.058041696, 0, -0.6784795), (0.058041696, -1, -0.6784795), (-0.7640094, 0, -0.25128388), (-0.7640094, -1, -0.25128388), (0.17901349, 10, 0.51581097), (0.17901349, 11, 0.51581097), (0.16957791, 10, 0.031165715), (0.16957791, 11, 0.031165715), (-0.4031342, 10, -0.3259123), (-0.4031342, 11, -0.3259123), (-0.18391395, 10, 0.43407503), (-0.18391395, 11, 0.43407503), (0.9145927, 0.13922806, 0.1967928), (1.8656492, 0.13922806, -0.11222422), (0.03227529, 5.8806133, -0.809017), (0.03227529, 5.8806133, -1.809017), (-0.5856383, 1.5735265, 0.5745089), (-1.1734235, 1.5735265, 1.383526)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves171" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.48252034, 0.37812427), (0.31679216, 0.46411994), (0.49421468, 0.265281), (0.15287887, 0.22777314), (0.23882048, 0.49284053), (0.40928322, 0.18940414), (0.3459094, 0.35083202), (0.11571979, 0.81176144), (0.642102, 0.9498253), (0.8286553, 0.3856117)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.13253488, 0, 0.5255835), (0.13253488, -1, 0.5255835), (0.05742912, 0, -0.43353608), (0.05742912, -1, -0.43353608), (-0.5192253, 0, -0.32550815), (-0.5192253, -1, -0.32550815), (0.21662514, 10, 0.22326465), (0.21662514, 11, 0.22326465), (0.51681614, 10, -0.32491678), (0.51681614, 11, -0.32491678), (-0.4207047, 10, -0.27258798), (-0.4207047, 11, -0.27258798), (-0.32897937, 10, 0.45772392), (-0.32897937, 11, 0.45772392), (0.6298229, 8.117614, -0.6796383), (1.5808794, 8.117614, -0.9886553), (0.16705093, 9.498253, -0.809017), (0.16705093, 9.498253, -1.809017), (-0.78809804, 3.856117, 0.42741325), (-1.3758833, 3.856117, 1.2364303)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves172" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.10466212, 0.25696927), (0.46523723, 0.26034862), (0.25946748, 0.049534213), (0.19984582, 0.37601614), (0.35993707, 0.08012297), (0.45383146, 0.46333915), (0.32288027, 0.4878997), (0.13367087, 0.020138374), (0.33774602, 0.31599912), (0.40211466, 0.52666444)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6071246, 0, 0.30192888), (0.6071246, -1, 0.30192888), (0.11216299, 0, -0.5983905), (0.11216299, -1, -0.5983905), (-0.80968964, 0, 0.0036166229), (-0.80968964, -1, 0.0036166229), (0.3576126, 10, 0.3160412), (0.3576126, 11, 0.3160412), (0.38941562, 10, 0.04640583), (0.38941562, 11, 0.04640583), (-0.7074172, 10, -0.2239777), (-0.7074172, 11, -0.2239777), (-0.3070774, 10, 0.58767515), (-0.3070774, 11, 0.58767515), (0.636344, 0.20138374, -0.6595684), (1.5874006, 0.20138374, -0.96858543), (-0.19074099, 3.159991, -0.809017), (-0.19074099, 3.159991, -1.809017), (-0.38243377, 5.266644, 0.7221456), (-0.970219, 5.266644, 1.5311626)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves173" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.43859357, 0.31955132), (0.22398764, 0.15971902), (0.034709517, 0.45921305), (0.40785417, 0.05069248), (0.4410939, 0.3036926), (0.4086413, 0.41467297), (0.487032, 0.26303098), (0.2124421, 0.33724806), (0.9709997, 0.4492878), (0.62108624, 0.08639843)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.2300179, 0, 0.51333094), (0.2300179, -1, 0.51333094), (-0.2305915, 0, -0.6798016), (-0.2305915, -1, -0.6798016), (-0.50171, 0, 0.12830594), (-0.50171, -1, 0.12830594), (0.048211414, 10, 0.42351902), (0.048211414, 11, 0.42351902), (0.59801126, 10, -0.109386966), (0.59801126, 11, -0.109386966), (-0.6345708, 10, -0.20245677), (-0.6345708, 11, -0.20245677), (-0.46319497, 10, 0.41353214), (-0.46319497, 11, 0.41353214), (0.6649594, 3.3724804, -0.5714995), (1.6160159, 3.3724804, -0.8805165), (0.5536934, 4.492878, -0.809017), (0.5536934, 4.492878, -1.809017), (-0.59068817, 0.8639843, 0.57083994), (-1.1784734, 0.8639843, 1.379857)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves174" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.48664048, 0.25598824), (0.08002059, 0.23408484), (0.17723335, 0.27770737), (0.11052611, 0.14614643), (0.1512841, 0.40011984), (0.019306665, 0.04626786), (0.14556813, 0.34829444), (0.1545508, 0.81370234), (0.26128057, 0.40057433), (0.8362634, 0.6100621)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.24477465, 0, 0.5661726), (0.24477465, -1, 0.5661726), (-0.35612378, 0, -0.6196384), (-0.35612378, -1, -0.6196384), (-0.62255734, 0, 0.02504778), (-0.62255734, -1, 0.02504778), (0.13899352, 10, 0.15568784), (0.13899352, 11, 0.15568784), (0.37906426, 10, -0.2769544), (0.37906426, 11, -0.2769544), (-0.055351526, 10, -0.0013218656), (-0.055351526, 11, -0.0013218656), (-0.13844353, 10, 0.39327747), (-0.13844353, 11, 0.39327747), (0.6439291, 8.137023, -0.636224), (1.5949856, 8.137023, -0.945241), (-0.2806315, 4.005743, -0.809017), (-0.2806315, 4.005743, -1.809017), (-0.7953338, 6.1006207, 0.42215618), (-1.3831191, 6.1006207, 1.2311732)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves175" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3525767, 0.1596035), (0.14917214, 0.4746446), (0.25082004, 0.15035076), (0.011806554, 0.42013478), (0.46181205, 0.12900653), (0.4554389, 0.41442388), (0.18040703, 0.059625622), (0.34703994, 0.54313654), (0.89729744, 0.5542836), (0.60490036, 0.356403)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4639442, 0, 0.5033213), (0.4639442, -1, 0.5033213), (-0.13343379, 0, -0.42502144), (-0.13343379, -1, -0.42502144), (-0.71694875, 0, -0.017869286), (-0.71694875, -1, -0.017869286), (0.39957193, 10, 0.14163534), (0.39957193, 11, 0.14163534), (0.51503754, 10, 0.0383393), (0.51503754, 11, 0.0383393), (-0.6618408, 10, -0.24039379), (-0.6618408, 11, -0.24039379), (-0.17157729, 10, 0.11537446), (-0.17157729, 11, 0.11537446), (0.7138549, 5.4313655, -0.42101455), (1.6649114, 5.4313655, -0.73003155), (0.46705112, 5.542836, -0.809017), (0.46705112, 5.542836, -1.809017), (-0.57529444, 3.56403, 0.58202416), (-1.1630796, 3.56403, 1.3910412)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves176" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.24510127, 0.23156697), (0.04125799, 0.39444643), (0.48184803, 0.43655738), (0.40591168, 0.19110833), (0.47997203, 0.2624133), (0.41264445, 0.2604867), (0.40255848, 0.44558194), (0.8054203, 0.059240196), (0.11072601, 0.46291557), (0.61715424, 0.124243684)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.4977181, 0, 0.40681967), (0.4977181, -1, 0.40681967), (-0.30743378, 0, -0.48990312), (-0.30743378, -1, -0.48990312), (-0.36082423, 0, -0.36460912), (-0.36082423, -1, -0.36460912), (0.18175483, 10, 0.46496743), (0.18175483, 11, 0.46496743), (0.6107232, 10, -0.06397731), (0.6107232, 11, -0.06397731), (-0.4902839, 10, -0.25334156), (-0.4902839, 11, -0.25334156), (-0.38285586, 10, 0.56997937), (-0.38285586, 11, 0.56997937), (0.88037133, 0.5924019, 0.09147028), (1.8314278, 0.5924019, -0.21754673), (-0.457619, 4.6291556, -0.809017), (-0.457619, 4.6291556, -1.809017), (-0.5869486, 1.2424369, 0.5735569), (-1.1747339, 1.2424369, 1.382574)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves177" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.32696006, 0.093454905), (0.09952202, 0.12845978), (0.26468268, 0.26615196), (0.27671024, 0.2271526), (0.46296757, 0.46807352), (0.4653676, 0.107880205), (0.13122426, 0.3370825), (0.97311836, 0.6520265), (0.65415114, 0.34250066), (0.53159356, 0.8226667)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.55121815, 0, 0.5060617), (0.55121815, -1, 0.5060617), (-0.39528334, 0, -0.7050909), (-0.39528334, -1, -0.7050909), (-0.60177934, 0, -0.06915273), (-0.60177934, -1, -0.06915273), (0.21603496, 10, 0.34690425), (0.21603496, 11, 0.34690425), (0.715435, 10, -0.23561457), (0.715435, 11, -0.23561457), (-0.37613636, 10, -0.34315348), (-0.37613636, 11, -0.34315348), (-0.124801695, 10, 0.37763304), (-0.124801695, 11, 0.37763304), (0.9412912, 6.5202646, 0.27896243), (1.8923477, 6.5202646, -0.030054571), (0.18121552, 3.4250066, -0.809017), (0.18121552, 3.4250066, -1.809017), (-0.50557554, 8.226667, 0.63267785), (-1.0933608, 8.226667, 1.4416949)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves178" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.23367834, 0.3656348), (0.3113964, 0.35830265), (0.28217718, 0.06350926), (0.46259266, 0.094018474), (0.04353906, 0.12769768), (0.2750087, 0.32831192), (0.35964575, 0.46539047), (0.19714491, 0.31841704), (0.48112938, 0.71445286), (0.3186298, 0.24712877)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.38107586, 0, 0.3574974), (0.38107586, -1, 0.3574974), (-0.011111834, 0, -0.51914406), (-0.011111834, -1, -0.51914406), (-0.78814876, 0, -0.02609211), (-0.78814876, -1, -0.02609211), (0.089416884, 10, 0.491646), (0.089416884, 11, 0.491646), (0.11646692, 10, -0.08985528), (0.11646692, 11, -0.08985528), (-0.47388926, 10, -0.12103276), (-0.47388926, 11, -0.12103276), (-0.34204343, 10, 0.5765271), (-0.34204343, 11, 0.5765271), (0.6594023, 3.1841705, -0.5886023), (1.6104589, 3.1841705, -0.8976193), (-0.022183755, 7.1445284, -0.809017), (-0.022183755, 7.1445284, -1.809017), (-0.30303493, 2.4712877, 0.77983224), (-0.8908202, 2.4712877, 1.5888492)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves179" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.15234163, 0.1252346), (0.2387901, 0.023253929), (0.2026815, 0.3671244), (0.26423857, 0.30486006), (0.30427706, 0.15131694), (0.2728301, 0.38362953), (0.3190291, 0.3869165), (0.22232439, 0.2864535), (0.34338394, 0.7290024), (0.50891846, 0.29026532)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.68706584, 0, 0.37558284), (0.68706584, -1, 0.37558284), (-0.29340234, 0, -0.79020417), (-0.29340234, -1, -0.79020417), (-0.5282721, 0, -0.031035492), (-0.5282721, -1, -0.031035492), (0.28993917, 10, 0.3584455), (0.28993917, 11, 0.3584455), (0.37832657, 10, -0.028391184), (0.37832657, 11, -0.028391184), (-0.52521884, 10, -0.102176145), (-0.52521884, 11, -0.102176145), (-0.3034147, 10, 0.4855019), (-0.3034147, 11, 0.4855019), (0.6685493, 2.864535, -0.5604508), (1.6196058, 2.864535, -0.8694678), (-0.18411322, 7.290024, -0.809017), (-0.18411322, 7.290024, -1.809017), (-0.48401022, 2.9026532, 0.648346), (-1.0717955, 2.9026532, 1.457363)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves180" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.03071553, 0.014190833), (0.1142765, 0.24776058), (0.08100009, 0.053108208), (0.12656185, 0.117964946), (0.0060740025, 0.49054754), (0.15164535, 0.42369097), (0.2329722, 0.0928655), (0.10782263, 0.17816743), (0.14385086, 0.28926274), (0.9576276, 0.2334809)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.908348, 0, 0.3258557), (0.908348, -1, 0.3258557), (-0.30781513, 0, -0.60857445), (-0.30781513, -1, -0.60857445), (-0.8711226, 0, 0.20204481), (-0.8711226, -1, 0.20204481), (0.11219133, 10, 0.16301502), (0.11219133, 11, 0.16301502), (0.29411334, 10, -0.39498433), (0.29411334, 11, -0.39498433), (-0.49208897, 10, 0.008244045), (-0.49208897, 11, 0.008244045), (-0.22156975, 10, 0.16485786), (-0.22156975, 11, 0.16485786), (0.62695414, 1.7816743, -0.6884676), (1.5780106, 1.7816743, -0.9974847), (-0.4186784, 2.8926275, -0.809017), (-0.4186784, 2.8926275, -1.809017), (-0.910758, 2.334809, 0.3382956), (-1.4985433, 2.334809, 1.1473126)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves181" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.43607706, 0.40998942), (0.3908579, 0.047120314), (0.20697342, 0.47531715), (0.3787125, 0.26368767), (0.23310935, 0.34114772), (0.34848136, 0.47381184), (0.13211484, 0.01760866), (0.5292722, 0.3772506), (0.17133713, 0.17155884), (0.64508265, 0.1783918)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.1463995, 0, 0.48364514), (0.1463995, -1, 0.48364514), (-0.1006076, 0, -0.77089584), (-0.1006076, -1, -0.77089584), (-0.42381555, 0, -0.06926741), (-0.42381555, -1, -0.06926741), (0.25078186, 10, 0.46019647), (0.25078186, 11, 0.46019647), (0.42222178, 10, -0.20395955), (0.42222178, 11, -0.20395955), (-0.65545404, 10, -0.13551143), (-0.65545404, 11, -0.13551143), (-0.12564869, 10, 0.058434393), (-0.12564869, 11, 0.058434393), (0.7800546, 3.772506, -0.21727267), (1.7311112, 3.772506, -0.5262897), (-0.38636637, 1.7155885, -0.809017), (-0.38636637, 1.7155885, -1.809017), (-0.6135101, 1.783918, 0.5542589), (-1.2012953, 1.783918, 1.3632759)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves182" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.27729535, 0.0460162), (0.061219126, 0.379579), (0.37577212, 0.1742832), (0.44212803, 0.07254546), (0.4332855, 0.15182622), (0.052652318, 0.28782538), (0.2106667, 0.23968479), (0.2750381, 0.21430302), (0.5210496, 0.21329285), (0.976183, 0.14823471)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.643569, 0, 0.48640358), (0.643569, -1, 0.48640358), (-0.2927069, 0, -0.50193113), (-0.2927069, -1, -0.50193113), (-0.64879614, 0, -0.16496547), (-0.64879614, -1, -0.16496547), (0.068994835, 10, 0.46454582), (0.068994835, 11, 0.46454582), (0.50132024, 10, 0.011062591), (0.50132024, 11, 0.011062591), (-0.30468646, 10, 0.04634631), (-0.30468646, 11, 0.04634631), (-0.20035595, 10, 0.3047844), (-0.20035595, 11, 0.3047844), (0.68769866, 2.1430302, -0.5015151), (1.6387552, 2.1430302, -0.8105321), (0.024745338, 2.1329286, -0.809017), (0.024745338, 2.1329286, -1.809017), (-0.9284052, 1.482347, 0.32547414), (-1.5161905, 1.482347, 1.1344911)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves183" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.108633965, 0.12681794), (0.06646911, 0.4571993), (0.36652514, 0.11428219), (0.2660615, 0.07712132), (0.40098548, 0.0148837175), (0.070797786, 0.22772586), (0.48509175, 0.45381132), (0.3793134, 0.7488229), (0.62928194, 0.84561354), (0.14267118, 0.5540075)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.72712845, 0, 0.34489232), (0.72712845, -1, 0.34489232), (-0.24091111, 0, -0.439135), (-0.24091111, -1, -0.439135), (-0.70921963, 0, -0.1360857), (-0.70921963, -1, -0.1360857), (0.073346734, 10, 0.2898933), (0.073346734, 11, 0.2898933), (0.3901083, 10, 0.11187015), (0.3901083, 11, 0.11187015), (-0.25819406, 10, 0.013094551), (-0.25819406, 11, 0.013094551), (-0.4613497, 10, 0.6037129), (-0.4613497, 11, 0.6037129), (0.7255789, 7.4882298, -0.3849317), (1.6766354, 7.4882298, -0.69394875), (0.15198003, 8.456136, -0.809017), (0.15198003, 8.456136, -1.809017), (-0.13568836, 5.540075, 0.90141666), (-0.7234736, 5.540075, 1.7104336)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves184" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.49583337, 0.11098287), (0.081615925, 0.3005514), (0.2596624, 0.17210445), (0.050216246, 0.10279003), (0.47176063, 0.045353625), (0.4892343, 0.41341832), (0.36877388, 0.000258486), (0.13661179, 0.58007777), (0.3709578, 0.2526501), (0.29161653, 0.74053794)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.37393996, 0, 0.6173338), (0.37393996, -1, 0.6173338), (-0.3151803, 0, -0.5658658), (-0.3151803, -1, -0.5658658), (-0.6930476, 0, -0.03447758), (-0.6930476, -1, -0.03447758), (0.09775913, 10, 0.08198011), (0.09775913, 11, 0.08198011), (0.47532922, 10, 0.1090902), (0.47532922, 11, 0.1090902), (-0.6807489, 10, -0.26804557), (-0.6807489, 11, -0.26804557), (-0.35072482, 10, 0.11421588), (-0.35072482, 11, 0.11421588), (0.63741237, 5.8007774, -0.6562804), (1.5884689, 5.8007774, -0.9652974), (-0.1516982, 2.5265012, -0.809017), (-0.1516982, 2.5265012, -1.809017), (-0.2773438, 7.40538, 0.798498), (-0.86512905, 7.40538, 1.607515)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves185" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.0012373937, 0.15219903), (0.4024935, 0.43228325), (0.24332744, 0.3677067), (0.20158808, 0.17294513), (0.16394444, 0.3774531), (0.055151433, 0.2221121), (0.29602087, 0.49715722), (0.017539881, 0.9280301), (0.17400044, 0.44883683), (0.58457536, 0.741486)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.8051298, 0, 0.26283994), (0.8051298, -1, 0.26283994), (0.13946396, 0, -0.4592925), (0.13946396, -1, -0.4592925), (-0.5129528, 0, -0.07665898), (-0.5129528, -1, -0.07665898), (0.1644806, 10, 0.25503105), (0.1644806, 11, 0.25503105), (0.37778178, 10, -0.25470433), (0.37778178, 11, -0.25470433), (-0.24365836, 10, 0.024017971), (-0.24365836, 11, 0.024017971), (-0.2815326, 10, 0.5886327), (-0.2815326, 11, 0.5886327), (0.594157, 9.280301, -0.78940684), (1.5452135, 9.280301, -1.0984238), (-0.38323545, 4.4883685, -0.809017), (-0.38323545, 4.4883685, -1.809017), (-0.5559642, 7.41486, 0.5960684), (-1.1437495, 7.41486, 1.4050854)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves186" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.046364658, 0.23716533), (0.31597194, 0.1799748), (0.2921455, 0.48511216), (0.256324, 0.21579258), (0.2355306, 0.28340182), (0.2647293, 0.42110062), (0.09281759, 0.25987655), (0.28580165, 0.5133021), (0.65632826, 0.039165277), (0.61895686, 0.16153705)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6814035, 0, 0.2677661), (0.6814035, -1, 0.2677661), (-0.11055142, 0, -0.66341436), (-0.11055142, -1, -0.66341436), (-0.38355938, 0, -0.1675195), (-0.38355938, -1, -0.1675195), (0.20523095, 10, 0.32300755), (0.20523095, 11, 0.32300755), (0.39058232, 10, -0.15649393), (0.39058232, 11, -0.15649393), (-0.55609447, 10, -0.08404324), (-0.55609447, 11, -0.08404324), (-0.08827478, 10, 0.28855878), (-0.08827478, 11, 0.28855878), (0.6916088, 5.133021, -0.48948106), (1.6426653, 5.133021, -0.7984981), (0.18377492, 0.3916528, -0.809017), (0.18377492, 0.3916528, -1.809017), (-0.588663, 1.6153705, 0.57231134), (-1.1764482, 1.6153705, 1.3813283)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves187" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.36343232, 0.27897066), (0.41941667, 0.022887282), (0.47345364, 0.2305673), (0.31099662, 0.0023825774), (0.20164986, 0.1908242), (0.45986235, 0.4715358), (0.33936945, 0.06584609), (0.37884733, 0.38538906), (0.38868323, 0.047380805), (0.29631415, 0.7586939)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.340095, 0, 0.47393587), (0.340095, -1, 0.47393587), (-0.08127857, 0, -0.7905008), (-0.08127857, -1, -0.7905008), (-0.55978185, 0, -0.2915695), (-0.55978185, -1, -0.2915695), (0.0022659658, 10, 0.3117329), (0.0022659658, 11, 0.3117329), (0.30394408, 10, -0.09206679), (0.30394408, 11, -0.09206679), (-0.7187575, 10, -0.22632389), (-0.7187575, 11, -0.22632389), (-0.32275954, 10, 0.17071702), (-0.32275954, 11, 0.17071702), (0.7254096, 3.8538904, -0.3854528), (1.6764661, 3.8538904, -0.6944698), (-0.13086072, 0.47380802, -0.809017), (-0.13086072, 0.47380802, -1.809017), (-0.2818115, 7.586939, 0.79525197), (-0.8695967, 7.586939, 1.604269)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves188" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.44164944, 0.4076039), (0.4109276, 0.22488657), (0.22041868, 0.19189493), (0.20884146, 0.3187312), (0.4396607, 0.10053192), (0.11154116, 0.28491586), (0.038344756, 0.2438391), (0.8425442, 0.5789618), (0.72020835, 0.1973475), (0.47844434, 0.51378846)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.1433686, 0, 0.48823273), (0.1433686, -1, 0.48823273), (0.027474111, 0, -0.62707996), (0.027474111, -1, -0.62707996), (-0.6884818, 0, 0.003282625), (-0.6884818, -1, 0.003282625), (0.30313137, 10, 0.3073348), (0.30313137, 11, 0.3073348), (0.47723338, 10, 0.054530602), (0.47723338, 11, 0.054530602), (-0.33653334, 10, -0.0021948458), (-0.33653334, 11, -0.0021948458), (-0.036468033, 10, 0.25568828), (-0.036468033, 11, 0.25568828), (0.89385736, 5.789618, 0.13297604), (1.8449138, 5.789618, -0.17604098), (0.25887045, 1.9734751, -0.809017), (0.25887045, 1.9734751, -1.809017), (-0.4550276, 5.1378846, 0.6694031), (-1.0428128, 5.1378846, 1.4784201)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves189" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.47903568, 0.4230786), (0.15436266, 0.41566497), (0.4266911, 0.12607819), (0.1519568, 0.29135135), (0.2544821, 0.13275363), (0.32835016, 0.3558624), (0.25406414, 0.36118484), (0.6626255, 0.6638967), (0.6569153, 0.24720643), (0.2639968, 0.67623955)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.093094856, 0, 0.509284), (0.093094856, -1, 0.509284), (-0.16199932, 0, -0.47273698), (-0.16199932, -1, -0.47273698), (-0.6761444, 0, -0.20699842), (-0.6761444, -1, -0.20699842), (0.27709162, 10, 0.24198931), (0.27709162, 11, 0.24198931), (0.32005748, 10, -0.028760657), (0.32005748, 11, -0.028760657), (-0.5314446, 10, -0.15567333), (-0.5314446, 11, -0.15567333), (-0.24162938, 10, 0.43969497), (-0.24162938, 11, 0.43969497), (0.82849807, 6.638967, -0.06817919), (1.7795546, 6.638967, -0.3771962), (0.18446499, 2.4720645, -0.809017), (0.18446499, 2.4720645, -1.809017), (-0.2510759, 6.7623954, 0.8175827), (-0.8388611, 6.7623954, 1.6265997)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves190" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.3123343, 0.3823233), (0.31737894, 0.40858218), (0.41579938, 0.25237617), (0.07163621, 0.34642217), (0.40459764, 0.38522863), (0.21339622, 0.11209809), (0.43444842, 0.17676787), (0.8624164, 0.71668905), (0.5811772, 0.31206542), (0.71853507, 0.47215602)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.2903979, 0, 0.4066903), (0.2903979, -1, 0.4066903), (0.02547465, 0, -0.47846705), (0.02547465, -1, -0.47846705), (-0.55998456, 0, -0.23384938), (-0.55998456, -1, -0.23384938), (0.32946706, 10, 0.17868654), (0.32946706, 11, 0.17868654), (0.6112269, 10, -0.18662897), (0.6112269, 11, -0.18662897), (-0.23204277, 10, -0.13800095), (-0.23204277, 11, -0.13800095), (-0.41318503, 10, 0.3110198), (-0.41318503, 11, 0.3110198), (0.9010764, 7.1668906, 0.15519385), (1.8521329, 7.1668906, -0.15382317), (0.0954295, 3.1206543, -0.809017), (0.0954295, 3.1206543, -1.809017), (-0.68336743, 4.72156, 0.5035045), (-1.2711527, 4.72156, 1.3125215)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves191" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.15251741, 0.45624837), (0.3135967, 0.31351978), (0.032536328, 0.051409796), (0.19404721, 0.36525986), (0.40743646, 0.3122015), (0.34399563, 0.41561356), (0.15333141, 0.18788175), (0.37106645, 0.6600051), (0.31392992, 0.4884401), (0.94187, 0.685942)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.37208587, 0, 0.27341545), (0.37208587, -1, 0.27341545), (-0.03484792, 0, -0.55537415), (-0.03484792, -1, -0.55537415), (-0.8903434, 0, 0.25675377), (-0.8903434, -1, 0.25675377), (0.34738278, 10, 0.3069187), (0.34738278, 11, 0.3069187), (0.57100254, 10, -0.12667152), (0.57100254, 11, -0.12667152), (-0.59746754, 10, -0.14986666), (-0.59746754, 11, -0.14986666), (-0.14582685, 10, 0.23526376), (-0.14582685, 11, 0.23526376), (0.72258306, 6.600051, -0.39415208), (1.6736395, 6.600051, -0.7031691), (-0.21873851, 4.884401, -0.809017), (-0.21873851, 4.884401, -1.809017), (-0.89577156, 6.85942, 0.34918386), (-1.4835569, 6.85942, 1.1582009)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves192" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.1924193, 0.34570682), (0.15545362, 0.090176545), (0.4971385, 0.1877484), (0.41165078, 0.4642483), (0.25882298, 0.015810594), (0.16286443, 0.30292255), (0.31593174, 0.4288253), (0.839555, 0.85414416), (0.0018004003, 0.03806235), (0.66452205, 0.072336935)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.43926817, 0, 0.3351462), (0.43926817, -1, 0.3351462), (-0.35203412, 0, -0.73606265), (-0.35203412, -1, -0.73606265), (-0.59190106, 0, -0.3048182), (-0.59190106, -1, -0.3048182), (0.44152638, 10, 0.5551114), (0.44152638, 11, 0.5551114), (0.25544852, 10, 0.06718966), (0.25544852, 11, 0.06718966), (-0.38382578, 10, -0.03815187), (-0.38382578, 11, -0.03815187), (-0.30046895, 10, 0.52645355), (-0.30046895, 11, 0.52645355), (0.8927715, 8.541441, 0.12963407), (1.843828, 8.541441, -0.17938295), (-0.58566874, 0.3806235, -0.809017), (-0.58566874, 0.3806235, -1.809017), (-0.63199806, 0.72336936, 0.54082656), (-1.2197833, 0.72336936, 1.3498435)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves193" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.2795803, 0.26459545), (0.089010604, 0.15290302), (0.47871298, 0.37741286), (0.21250068, 0.4916688), (0.2543773, 0.35160872), (0.4571198, 0.2730517), (0.38163078, 0.15606515), (0.73084205, 0.74185246), (0.54647607, 0.1533259), (0.25258744, 0.19345446)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.43351465, 0, 0.42043775), (0.43351465, -1, 0.42043775), (-0.39327288, 0, -0.68531585), (-0.39327288, -1, -0.68531585), (-0.4182129, 0, -0.34282738), (-0.4182129, -1, -0.34282738), (0.46760482, 10, 0.3644347), (0.46760482, 11, 0.3644347), (0.4485976, 10, -0.20585051), (0.4485976, 11, -0.20585051), (-0.52837586, 10, -0.28544006), (-0.52837586, 11, -0.28544006), (-0.36295244, 10, 0.27399555), (-0.36295244, 11, 0.27399555), (0.8532792, 7.4185243, 0.008089281), (1.8043357, 7.4185243, -0.30092773), (0.05463589, 1.5332589, -0.809017), (0.05463589, 1.5332589, -1.809017), (-0.24022493, 1.9345446, 0.8254664), (-0.82801014, 1.9345446, 1.6344833)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves194" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.111825936, 0.09583829), (0.17084308, 0.33455196), (0.07966862, 0.48741847), (0.45547476, 0.21955927), (0.46358326, 0.31631795), (0.036605928, 0.45141536), (0.24047822, 0.19160548), (0.5966864, 0.018414957), (0.30838904, 0.63838106), (0.32910532, 0.70508164)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.75355613, 0, 0.35667115), (0.75355613, -1, 0.35667115), (-0.19030246, 0, -0.5383588), (-0.19030246, -1, -0.5383588), (-0.4585527, 0, 0.06932419), (-0.4585527, -1, 0.06932419), (0.20881326, 10, 0.5233223), (0.20881326, 11, 0.5233223), (0.6268209, 10, -0.11265149), (0.6268209, 11, -0.11265149), (-0.45083794, 10, 0.1098802), (-0.45083794, 11, 0.1098802), (-0.22870837, 10, 0.26591733), (-0.22870837, 11, 0.26591733), (0.80454427, 0.18414956, -0.14190127), (1.7556008, 0.18414956, -0.4509183), (-0.22525218, 6.383811, -0.809017), (-0.22525218, 6.383811, -1.809017), (-0.31299776, 7.050816, 0.77259386), (-0.900783, 7.050816, 1.5816108)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves195" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.22525087, 0.153515), (0.08170521, 0.24589731), (0.3697068, 0.38355726), (0.3853653, 0.41121668), (0.20512031, 0.092097275), (0.092867665, 0.32329074), (0.13422988, 0.039177526), (0.8892535, 0.83470553), (0.6252004, 0.97031194), (0.96258944, 0.72070074)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.5908288, 0, 0.41722277), (0.5908288, -1, 0.41722277), (-0.34720019, 0, -0.6100819), (-0.34720019, -1, -0.6100819), (-0.451968, 0, -0.22285351), (-0.451968, -1, -0.22285351), (0.3910903, 10, 0.51243824), (0.3910903, 11, 0.51243824), (0.24921444, 10, -0.011122595), (0.24921444, 11, -0.011122595), (-0.36205402, 10, 0.024770811), (-0.36205402, 11, 0.024770811), (-0.12766021, 10, 0.08065684), (-0.12766021, 11, 0.08065684), (0.9108255, 8.347055, 0.18519866), (1.861882, 8.347055, -0.12381835), (0.1471819, 9.703119, -0.809017), (0.1471819, 9.703119, -1.809017), (-0.91547704, 7.2070074, 0.33486703), (-1.5032623, 7.2070074, 1.1438841)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves196" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.17824996, 0.1809655), (0.023929657, 0.48765796), (0.47604978, 0.2340264), (0.14044054, 0.13522221), (0.08842315, 0.44163895), (0.40536353, 0.3901221), (0.28691638, 0.3260637), (0.88385993, 0.59452164), (0.24402167, 0.40653288), (0.5265465, 0.2988206)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.6094223, 0, 0.3762633), (0.6094223, -1, 0.3762633), (-0.2730161, 0, -0.4144934), (-0.2730161, -1, -0.4144934), (-0.55554897, 0, -0.295541), (-0.55554897, -1, -0.295541), (0.12860397, 10, 0.18222651), (0.12860397, 11, 0.18222651), (0.3436843, 10, -0.32996917), (0.3436843, 11, -0.32996917), (-0.6092949, 10, -0.20739163), (-0.6092949, 11, -0.20739163), (-0.2728737, 10, 0.41472575), (-0.2728737, 11, 0.41472575), (0.90886617, 5.9452167, 0.17916848), (1.8599226, 5.9452167, -0.12984854), (-0.30092058, 4.0653286, -0.809017), (-0.30092058, 4.0653286, -1.809017), (-0.50077546, 2.9882061, 0.6361654), (-1.0885607, 2.9882061, 1.4451823)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves197" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.38259396, 0.21559107), (0.32084, 0.014308754), (0.25676173, 0.10323612), (0.44165555, 0.36794987), (0.4914978, 0.18638772), (0.0840064, 0.4857174), (0.28214368, 0.1737279), (0.18271993, 0.6860023), (0.8507318, 0.5299199), (0.1463111, 0.59883666)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.38214877, 0, 0.5067616), (0.38214877, -1, 0.5067616), (-0.20220475, 0, -0.797441), (-0.20220475, -1, -0.797441), (-0.759599, 0, -0.009953056), (-0.759599, -1, -0.009953056), (0.34994113, 10, 0.5553583), (0.34994113, 11, 0.5553583), (0.5769982, 10, 0.0010903578), (0.5769982, 11, 0.0010903578), (-0.51132244, 10, 0.082132325), (-0.51132244, 11, 0.082132325), (-0.2683346, 10, 0.2609151), (-0.2683346, 11, 0.2609151), (0.65416217, 6.860023, -0.6047299), (1.6052186, 6.860023, -0.9137469), (0.41230994, 5.299199, -0.809017), (0.41230994, 5.299199, -1.809017), (-0.13915014, 5.988367, 0.8989015), (-0.7269354, 5.988367, 1.7079185)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves198" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.14510879, 0.05982212), (0.17229255, 0.005746569), (0.03479008, 0.030081999), (0.07156038, 0.112529755), (0.07606302, 0.13420793), (0.488286, 0.27277616), (0.44261792, 0.44351083), (0.8716473, 0.88295245), (0.99842125, 0.14329731), (0.26587233, 0.68080753)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.75615567, 0, 0.39079866), (0.75615567, -1, 0.39079866), (-0.38186547, 0, -0.80436796), (-0.38186547, -1, -0.80436796), (-0.90980864, 0, 0.26082465), (-0.90980864, -1, 0.26082465), (0.10702216, 10, 0.10633399), (0.10702216, 11, 0.10633399), (0.15122567, 10, -0.08507173), (0.15122567, 11, -0.08507173), (-0.54643285, 10, -0.3107392), (-0.54643285, 11, -0.3107392), (-0.42095467, 10, 0.5802873), (-0.42095467, 11, 0.5802873), (0.9044297, 8.829525, 0.16551429), (1.8554862, 8.829525, -0.14350271), (0.58592933, 1.4329731, -0.809017), (0.58592933, 1.4329731, -1.809017), (-0.25285962, 6.8080754, 0.81628674), (-0.84064484, 6.8080754, 1.6253037)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

def BasisCurves "curves199" (
    apiSchemas = ["HairProceduralAPI"]
)
{
    int[] curveVertexCounts = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    float2[] hairProc:paramuv = [(0.2186502, 0.2567657), (0.30326405, 0.22085342), (0.48269278, 0.21708405), (0.30634272, 0.038845066), (0.19135928, 0.0030230733), (0.22793256, 0.45105845), (0.046458874, 0.16602135), (0.8869328, 0.6566054), (0.42661962, 0.6525703), (0.09133052, 0.055634093)]
    int[] hairProc:prim = [0, 2, 3, 5, 6, 8, 9, 11, 12, 14]
    float3[] hairProc:rest = [(0, 0, 1), (0.95105654, 0, 0.309017), (0.58778524, 0, -0.809017), (-0.58778524, 0, -0.809017), (-0.95105654, 0, 0.309017), (0, 10, 1), (0.95105654, 10, 0.309017), (0.58778524, 10, -0.809017), (-0.58778524, 10, -0.809017), (-0.95105654, 10, 0.309017), (0, 0, 0), (0, 10, 0)]
    rel hairProc:target = </tube>
    point3f[] points = [(0.49890915, 0, 0.3807556), (0.49890915, -1, 0.3807556), (-0.10146258, 0, -0.63034284), (-0.10146258, -1, -0.63034284), (-0.5692489, 0, -0.29773262), (-0.5692489, -1, -0.29773262), (0.036943857, 10, 0.3183465), (0.036943857, 11, 0.3183465), (0.18377042, 10, 0.056687552), (0.18377042, 11, 0.056687552), (-0.56295747, 10, -0.04501658), (-0.56295747, 11, -0.04501658), (-0.044185016, 10, 0.18037792), (-0.044185016, 11, 0.18037792), (0.90998244, 6.5660543, 0.18260401), (1.8610389, 6.5660543, -0.126413), (-0.08626382, 6.525703, -0.809017), (-0.08626382, 6.525703, -1.809017), (-0.086860485, 0.55634093, 0.93689215), (-0.6746457, 0.55634093, 1.7459092)]
    uniform token type = "linear"
    float[] widths = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
}

